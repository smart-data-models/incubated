{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$schemaVersion": "0.0.1",
    "modelTags": "maintenance",
    "derivedFrom": "",
    "license": "",
    "description": "Represent an item of the inventory",
    "$id": "https://smart-data-models.github.io/dataModel.PredictiveMaintenance/InventoryItem/schema.json",
    "type": "object",
    "allOf": [
        {
            "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
        },
        {
            "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
        }
    ],
    "properties": {
        "type": {
            "type": "string",
            "description": "Property. The type of the entity (InventoryItem)."
        },
        "warehouseID": {
            "type": "string",
            "description": "Property. The unique identifier for the warehouse."
        },
        "itemNumber": {
            "type": "string",
            "description": "Property. The unique identifier for the item."
        },
        "name": {
            "type": "string",
            "description": "Property. The name of the item."
        },
        "physicalStock": {
            "type": "integer",
            "description": "Property. The physical stock of the item."
        },
        "physicalAvailability": {
            "type": "integer",
            "description": "Property. The physical availability of the item."
        },
        "physicalBooked": {
            "type": "integer",
            "description": "Property. The physical booked quantity of the item."
        },
        "availableTotal": {
            "type": "integer",
            "description": "Property. The total available quantity of the item."
        },
        "researchName": {
            "type": "string",
            "description": "Property. The research name of the item."
        },
        "site": {
            "type": "string",
            "description": "Property. The site where the item is located."
        },
        "itemLocation": {
            "type": "string",
            "description": "Property. The location of the item."
        },
        "totalOrdered": {
            "type": "integer",
            "description": "Property. The total quantity ordered for the item."
        },
        "onDelivery": {
            "type": "integer",
            "description": "Property. The quantity of the item on delivery."
        },
        "orderedBooked": {
            "type": "integer",
            "description": "Property. The quantity of the item ordered and booked."
        },
        "netWeight": {
            "type": "number",
            "description": "Property. The net weight of the item."
        }
    },
    "required": [
        "id",
        "type",
        "warehouseID",
        "itemNumber",
        "name",
        "researchName",
        "site",
        "itemLocation",
        "netWeight"
    ]
}