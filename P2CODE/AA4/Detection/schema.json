{
    "$schema": "http://json-schema.org/schema#",
    "$schemaVersion": "0.1.0",
    "modelTags": "INCODE",
    "$id": "https://smart-data-models.github.io/dataModel.Device/Detection/schema.json",
    "title": "Smart Data Models - Detection",
    "description": "Data model for entity detection events.",
    "type": "object",
    "allOf": [
        {
            "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/GSMA-Commons"
        },
        {
            "$ref": "https://smart-data-models.github.io/data-models/common-schema.json#/definitions/Location-Commons"
        },
        {
            "$ref": "https://smart-data-models.github.io/dataModel.Device/device-schema.json#/definitions/Device-Commons"
        },
        {
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Property. NGSI entity type. It has to be Detection",
                    "enum": [
                        "Detection"
                    ]
                },
                "license": {
                    "type": "string",
                    "description": "License information for the entity detection data."
                },
                "VNF": {
                    "type": "string",
                    "description": "Virtual Network Function (VNF) responsible for entity detection."
                },
                "frame_ID": {
                    "type": "number",
                    "description": "Frame ID associated with the entity detection event."
                },
                "timestamp_received": {
                    "type": "number",
                    "description": "Timestamp when the entity detection data was received."
                },
                "timestamp_sent": {
                    "type": "number",
                    "description": "Timestamp when the entity detection data was sent."
                },
                "inference": {
                    "type": "number",
                    "description": "Inference related to the entity detection."
                },
                "detections": {
                    "type": "array",
                    "description": "Array of detected entities.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "x_centre": {
                                "type": "number",
                                "description": "X-coordinate of the centre of the detected entity."
                            },
                            "y_centre": {
                                "type": "number",
                                "description": "Y-coordinate of the centre of the detected entity."
                            },
                            "width": {
                                "type": "number",
                                "description": "Width of the detected entity."
                            },
                            "height": {
                                "type": "number",
                                "description": "Height of the detected entity."
                            },
                            "confidence": {
                                "type": "number",
                                "description": "Confidence level of the detection."
                            },
                            "class": {
                                "type": "number",
                                "description": "Class of the detected entity."
                            }
                        },
                        "required": [
                            "x_centre",
                            "y_centre",
                            "width",
                            "height",
                            "confidence",
                            "class"
                        ]
                    }
                }
            }
        }
    ],
    "required": [
        "type",
        "License",
        "VNF",
        "Frame_ID",
        "Timestamp_received",
        "Timestamp_sent",
        "Inference",
        "detections"
    ]
}