{
    "$schema": "https://json-schema.org/schema#", 
    "description": "Base definitions for HL7 FHIR resources mapping to NGSI-LD", 
    "title": "Common HL7/FHIR definitions for NGSI-LD Harmonized Data Models", 
    "definitions": {
        "ResourceList": {
            "oneOf": [
                {
                    "$ref": "#/definitions/Account"
                }, 
                {
                    "$ref": "#/definitions/ActivityDefinition"
                }, 
                {
                    "$ref": "#/definitions/AdministrableProductDefinition"
                }, 
                {
                    "$ref": "#/definitions/AdverseEvent"
                }, 
                {
                    "$ref": "#/definitions/AllergyIntolerance"
                }, 
                {
                    "$ref": "#/definitions/Appointment"
                }, 
                {
                    "$ref": "#/definitions/AppointmentResponse"
                }, 
                {
                    "$ref": "#/definitions/AuditEvent"
                }, 
                {
                    "$ref": "#/definitions/Basic"
                }, 
                {
                    "$ref": "#/definitions/Binary"
                }, 
                {
                    "$ref": "#/definitions/BiologicallyDerivedProduct"
                }, 
                {
                    "$ref": "#/definitions/BodyStructure"
                }, 
                {
                    "$ref": "#/definitions/Bundle"
                }, 
                {
                    "$ref": "#/definitions/CapabilityStatement"
                }, 
                {
                    "$ref": "#/definitions/CarePlan"
                }, 
                {
                    "$ref": "#/definitions/CareTeam"
                }, 
                {
                    "$ref": "#/definitions/CatalogEntry"
                }, 
                {
                    "$ref": "#/definitions/ChargeItem"
                }, 
                {
                    "$ref": "#/definitions/ChargeItemDefinition"
                }, 
                {
                    "$ref": "#/definitions/Citation"
                }, 
                {
                    "$ref": "#/definitions/Claim"
                }, 
                {
                    "$ref": "#/definitions/ClaimResponse"
                }, 
                {
                    "$ref": "#/definitions/ClinicalImpression"
                }, 
                {
                    "$ref": "#/definitions/ClinicalUseDefinition"
                }, 
                {
                    "$ref": "#/definitions/CodeSystem"
                }, 
                {
                    "$ref": "#/definitions/Communication"
                }, 
                {
                    "$ref": "#/definitions/CommunicationRequest"
                }, 
                {
                    "$ref": "#/definitions/CompartmentDefinition"
                }, 
                {
                    "$ref": "#/definitions/Composition"
                }, 
                {
                    "$ref": "#/definitions/ConceptMap"
                }, 
                {
                    "$ref": "#/definitions/Condition"
                }, 
                {
                    "$ref": "#/definitions/Consent"
                }, 
                {
                    "$ref": "#/definitions/Contract"
                }, 
                {
                    "$ref": "#/definitions/Coverage"
                }, 
                {
                    "$ref": "#/definitions/CoverageEligibilityRequest"
                }, 
                {
                    "$ref": "#/definitions/CoverageEligibilityResponse"
                }, 
                {
                    "$ref": "#/definitions/DetectedIssue"
                }, 
                {
                    "$ref": "#/definitions/Device"
                }, 
                {
                    "$ref": "#/definitions/DeviceDefinition"
                }, 
                {
                    "$ref": "#/definitions/DeviceMetric"
                }, 
                {
                    "$ref": "#/definitions/DeviceRequest"
                }, 
                {
                    "$ref": "#/definitions/DeviceUseStatement"
                }, 
                {
                    "$ref": "#/definitions/DiagnosticReport"
                }, 
                {
                    "$ref": "#/definitions/DocumentManifest"
                }, 
                {
                    "$ref": "#/definitions/DocumentReference"
                }, 
                {
                    "$ref": "#/definitions/Encounter"
                }, 
                {
                    "$ref": "#/definitions/Endpoint"
                }, 
                {
                    "$ref": "#/definitions/EnrollmentRequest"
                }, 
                {
                    "$ref": "#/definitions/EnrollmentResponse"
                }, 
                {
                    "$ref": "#/definitions/EpisodeOfCare"
                }, 
                {
                    "$ref": "#/definitions/EventDefinition"
                }, 
                {
                    "$ref": "#/definitions/Evidence"
                }, 
                {
                    "$ref": "#/definitions/EvidenceReport"
                }, 
                {
                    "$ref": "#/definitions/EvidenceVariable"
                }, 
                {
                    "$ref": "#/definitions/ExampleScenario"
                }, 
                {
                    "$ref": "#/definitions/ExplanationOfBenefit"
                }, 
                {
                    "$ref": "#/definitions/FamilyMemberHistory"
                }, 
                {
                    "$ref": "#/definitions/Flag"
                }, 
                {
                    "$ref": "#/definitions/Goal"
                }, 
                {
                    "$ref": "#/definitions/GraphDefinition"
                }, 
                {
                    "$ref": "#/definitions/Group"
                }, 
                {
                    "$ref": "#/definitions/GuidanceResponse"
                }, 
                {
                    "$ref": "#/definitions/HealthcareService"
                }, 
                {
                    "$ref": "#/definitions/ImagingStudy"
                }, 
                {
                    "$ref": "#/definitions/Immunization"
                }, 
                {
                    "$ref": "#/definitions/ImmunizationEvaluation"
                }, 
                {
                    "$ref": "#/definitions/ImmunizationRecommendation"
                }, 
                {
                    "$ref": "#/definitions/ImplementationGuide"
                }, 
                {
                    "$ref": "#/definitions/Ingredient"
                }, 
                {
                    "$ref": "#/definitions/InsurancePlan"
                }, 
                {
                    "$ref": "#/definitions/Invoice"
                }, 
                {
                    "$ref": "#/definitions/Library"
                }, 
                {
                    "$ref": "#/definitions/Linkage"
                }, 
                {
                    "$ref": "#/definitions/List"
                }, 
                {
                    "$ref": "#/definitions/Location"
                }, 
                {
                    "$ref": "#/definitions/ManufacturedItemDefinition"
                }, 
                {
                    "$ref": "#/definitions/Measure"
                }, 
                {
                    "$ref": "#/definitions/MeasureReport"
                }, 
                {
                    "$ref": "#/definitions/Media"
                }, 
                {
                    "$ref": "#/definitions/Medication"
                }, 
                {
                    "$ref": "#/definitions/MedicationAdministration"
                }, 
                {
                    "$ref": "#/definitions/MedicationDispense"
                }, 
                {
                    "$ref": "#/definitions/MedicationKnowledge"
                }, 
                {
                    "$ref": "#/definitions/MedicationRequest"
                }, 
                {
                    "$ref": "#/definitions/MedicationStatement"
                }, 
                {
                    "$ref": "#/definitions/MedicinalProductDefinition"
                }, 
                {
                    "$ref": "#/definitions/MessageDefinition"
                }, 
                {
                    "$ref": "#/definitions/MessageHeader"
                }, 
                {
                    "$ref": "#/definitions/MolecularSequence"
                }, 
                {
                    "$ref": "#/definitions/NamingSystem"
                }, 
                {
                    "$ref": "#/definitions/NutritionOrder"
                }, 
                {
                    "$ref": "#/definitions/NutritionProduct"
                }, 
                {
                    "$ref": "#/definitions/Observation"
                }, 
                {
                    "$ref": "#/definitions/ObservationDefinition"
                }, 
                {
                    "$ref": "#/definitions/OperationDefinition"
                }, 
                {
                    "$ref": "#/definitions/OperationOutcome"
                }, 
                {
                    "$ref": "#/definitions/Organization"
                }, 
                {
                    "$ref": "#/definitions/OrganizationAffiliation"
                }, 
                {
                    "$ref": "#/definitions/PackagedProductDefinition"
                }, 
                {
                    "$ref": "#/definitions/Parameters"
                }, 
                {
                    "$ref": "#/definitions/Patient"
                }, 
                {
                    "$ref": "#/definitions/PaymentNotice"
                }, 
                {
                    "$ref": "#/definitions/PaymentReconciliation"
                }, 
                {
                    "$ref": "#/definitions/Person"
                }, 
                {
                    "$ref": "#/definitions/PlanDefinition"
                }, 
                {
                    "$ref": "#/definitions/Practitioner"
                }, 
                {
                    "$ref": "#/definitions/PractitionerRole"
                }, 
                {
                    "$ref": "#/definitions/Procedure"
                }, 
                {
                    "$ref": "#/definitions/Provenance"
                }, 
                {
                    "$ref": "#/definitions/Questionnaire"
                }, 
                {
                    "$ref": "#/definitions/QuestionnaireResponse"
                }, 
                {
                    "$ref": "#/definitions/RegulatedAuthorization"
                }, 
                {
                    "$ref": "#/definitions/RelatedPerson"
                }, 
                {
                    "$ref": "#/definitions/RequestGroup"
                }, 
                {
                    "$ref": "#/definitions/ResearchDefinition"
                }, 
                {
                    "$ref": "#/definitions/ResearchElementDefinition"
                }, 
                {
                    "$ref": "#/definitions/ResearchStudy"
                }, 
                {
                    "$ref": "#/definitions/ResearchSubject"
                }, 
                {
                    "$ref": "#/definitions/RiskAssessment"
                }, 
                {
                    "$ref": "#/definitions/Schedule"
                }, 
                {
                    "$ref": "#/definitions/SearchParameter"
                }, 
                {
                    "$ref": "#/definitions/ServiceRequest"
                }, 
                {
                    "$ref": "#/definitions/Slot"
                }, 
                {
                    "$ref": "#/definitions/Specimen"
                }, 
                {
                    "$ref": "#/definitions/SpecimenDefinition"
                }, 
                {
                    "$ref": "#/definitions/StructureDefinition"
                }, 
                {
                    "$ref": "#/definitions/StructureMap"
                }, 
                {
                    "$ref": "#/definitions/Subscription"
                }, 
                {
                    "$ref": "#/definitions/SubscriptionStatus"
                }, 
                {
                    "$ref": "#/definitions/SubscriptionTopic"
                }, 
                {
                    "$ref": "#/definitions/Substance"
                }, 
                {
                    "$ref": "#/definitions/SubstanceDefinition"
                }, 
                {
                    "$ref": "#/definitions/SupplyDelivery"
                }, 
                {
                    "$ref": "#/definitions/SupplyRequest"
                }, 
                {
                    "$ref": "#/definitions/Task"
                }, 
                {
                    "$ref": "#/definitions/TerminologyCapabilities"
                }, 
                {
                    "$ref": "#/definitions/TestReport"
                }, 
                {
                    "$ref": "#/definitions/TestScript"
                }, 
                {
                    "$ref": "#/definitions/ValueSet"
                }, 
                {
                    "$ref": "#/definitions/VerificationResult"
                }, 
                {
                    "$ref": "#/definitions/VisionPrescription"
                }
            ]
        }, 
        "Element": {
            "description": "Base definition for all elements in a resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "base64Binary": {
            "type": "string", 
            "description": "A stream of bytes"
        }, 
        "boolean": {
            "pattern": "^true|false$", 
            "type": "boolean", 
            "description": "Value of \"true\" or \"false\""
        }, 
        "canonical": {
            "pattern": "^\\S*$", 
            "type": "string", 
            "description": "A URI that is a reference to a canonical URL on a FHIR resource"
        }, 
        "code": {
            "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
            "type": "string", 
            "description": "A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents"
        }, 
        "date": {
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
            "type": "string", 
            "description": "A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates."
        }, 
        "dateTime": {
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
            "type": "string", 
            "description": "A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates."
        }, 
        "decimal": {
            "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
            "type": "number", 
            "description": "A rational number with implicit precision"
        }, 
        "id": {
            "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
            "type": "string", 
            "description": "Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive."
        }, 
        "instant": {
            "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
            "type": "string", 
            "description": "An instant in time - known at least to the second"
        }, 
        "integer": {
            "pattern": "^-?([0]|([1-9][0-9]*))$", 
            "type": "number", 
            "description": "A whole number"
        }, 
        "markdown": {
            "pattern": "^[ \\r\\n\\t\\S]+$", 
            "type": "string", 
            "description": "A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine"
        }, 
        "oid": {
            "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", 
            "type": "string", 
            "description": "An OID represented as a URI"
        }, 
        "positiveInt": {
            "pattern": "^[1-9][0-9]*$", 
            "type": "number", 
            "description": "An integer with a value that is positive (e.g. >0)"
        }, 
        "string": {
            "pattern": "^[ \\r\\n\\t\\S]+$", 
            "type": "string", 
            "description": "A sequence of Unicode characters"
        }, 
        "time": {
            "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
            "type": "string", 
            "description": "A time during the day, with no date specified"
        }, 
        "unsignedInt": {
            "pattern": "^[0]|([1-9][0-9]*)$", 
            "type": "number", 
            "description": "An integer with a value that is not negative (e.g. >= 0)"
        }, 
        "uri": {
            "pattern": "^\\S*$", 
            "type": "string", 
            "description": "String of characters used to identify a name or a resource"
        }, 
        "url": {
            "pattern": "^\\S*$", 
            "type": "string", 
            "description": "A URI that is a literal reference"
        }, 
        "uuid": {
            "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", 
            "type": "string", 
            "description": "A UUID, represented as a URI"
        }, 
        "xhtml": {
            "description": "xhtml - escaped html (see specfication)"
        }, 
        "Narrative": {
            "description": "A human-readable summary of the resource conveying the essential clinical and business information for the resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "status": {
                    "description": "The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.", 
                    "enum": [
                        "generated", 
                        "extensions", 
                        "additional", 
                        "empty"
                    ]
                }, 
                "_status": {
                    "description": "Extensions for status", 
                    "$ref": "#/definitions/Element"
                }, 
                "div": {
                    "description": "The actual narrative content, a stripped down version of XHTML.", 
                    "$ref": "#/definitions/xhtml"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "div"
            ], 
            "type": "object"
        }, 
        "Annotation": {
            "description": "A  text note which also  contains information about who made the statement and when.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "authorReference": {
                    "description": "The individual responsible for making the annotation.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "authorString": {
                    "description": "The individual responsible for making the annotation.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_authorString": {
                    "description": "Extensions for authorString", 
                    "$ref": "#/definitions/Element"
                }, 
                "time": {
                    "description": "Indicates when this particular annotation was made.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_time": {
                    "description": "Extensions for time", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "The text of the annotation in markdown format.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Attachment": {
            "description": "For referring to data content defined in other formats.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "contentType": {
                    "description": "Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.", 
                    "$ref": "#/definitions/code"
                }, 
                "_contentType": {
                    "description": "Extensions for contentType", 
                    "$ref": "#/definitions/Element"
                }, 
                "language": {
                    "description": "The human language of the content. The value can be any valid value according to BCP 47.", 
                    "$ref": "#/definitions/code"
                }, 
                "_language": {
                    "description": "Extensions for language", 
                    "$ref": "#/definitions/Element"
                }, 
                "data": {
                    "description": "The actual data of the attachment - a sequence of bytes, base64 encoded.", 
                    "$ref": "#/definitions/base64Binary"
                }, 
                "_data": {
                    "description": "Extensions for data", 
                    "$ref": "#/definitions/Element"
                }, 
                "url": {
                    "description": "A location where the data can be accessed.", 
                    "$ref": "#/definitions/url"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }, 
                "size": {
                    "description": "The number of bytes of data that make up this attachment (before base64 encoding, if that is done).", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_size": {
                    "description": "Extensions for size", 
                    "$ref": "#/definitions/Element"
                }, 
                "hash": {
                    "description": "The calculated hash of the data using SHA-1. Represented using base64.", 
                    "$ref": "#/definitions/base64Binary"
                }, 
                "_hash": {
                    "description": "Extensions for hash", 
                    "$ref": "#/definitions/Element"
                }, 
                "title": {
                    "description": "A label or set of text to display in place of the data.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "creation": {
                    "description": "The date that the attachment was first created.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_creation": {
                    "description": "Extensions for creation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Identifier": {
            "description": "An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "use": {
                    "description": "The purpose of this identifier.", 
                    "enum": [
                        "usual", 
                        "official", 
                        "temp", 
                        "secondary", 
                        "old"
                    ]
                }, 
                "_use": {
                    "description": "Extensions for use", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "system": {
                    "description": "Establishes the namespace for the value - that is, a URL that describes a set values that are unique.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "value": {
                    "description": "The portion of the identifier typically relevant to the user and which is unique within the context of the system.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "Time period during which identifier is/was valid for use.", 
                    "$ref": "#/definitions/Period"
                }, 
                "assigner": {
                    "description": "Organization that issued/manages the identifier.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CodeableConcept": {
            "description": "A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "coding": {
                    "description": "A reference to a code defined by a terminology system.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "text": {
                    "description": "A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CodeableReference": {
            "description": "A reference to a resource (by instance), or instead, a reference to a concept defined in a terminology or ontology (by class).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "concept": {
                    "description": "A reference to a concept - e.g. the information is identified by its general class to the degree of precision found in the terminology.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reference": {
                    "description": "A reference to a resource the provides exact details about the information being referenced.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Coding": {
            "description": "A reference to a code defined by a terminology system.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "system": {
                    "description": "The identification of the code system that defines the meaning of the symbol in the code.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.", 
                    "$ref": "#/definitions/string"
                }, 
                "_version": {
                    "description": "Extensions for version", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "A representation of the meaning of the code in the system, following the rules of the system.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }, 
                "userSelected": {
                    "description": "Indicates that this coding was chosen by a user directly - e.g. off a pick list of available items (codes or displays).", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_userSelected": {
                    "description": "Extensions for userSelected", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Quantity": {
            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.", 
                    "enum": [
                        "<", 
                        "<=", 
                        ">=", 
                        ">"
                    ]
                }, 
                "_comparator": {
                    "description": "Extensions for comparator", 
                    "$ref": "#/definitions/Element"
                }, 
                "unit": {
                    "description": "A human-readable form of the unit.", 
                    "$ref": "#/definitions/string"
                }, 
                "_unit": {
                    "description": "Extensions for unit", 
                    "$ref": "#/definitions/Element"
                }, 
                "system": {
                    "description": "The identification of the system that provides the coded form of the unit.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A computer processable form of the unit in some unit representation system.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Duration": {
            "description": "A length of time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.", 
                    "enum": [
                        "<", 
                        "<=", 
                        ">=", 
                        ">"
                    ]
                }, 
                "_comparator": {
                    "description": "Extensions for comparator", 
                    "$ref": "#/definitions/Element"
                }, 
                "unit": {
                    "description": "A human-readable form of the unit.", 
                    "$ref": "#/definitions/string"
                }, 
                "_unit": {
                    "description": "Extensions for unit", 
                    "$ref": "#/definitions/Element"
                }, 
                "system": {
                    "description": "The identification of the system that provides the coded form of the unit.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A computer processable form of the unit in some unit representation system.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Distance": {
            "description": "A length - a value with a unit that is a physical distance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.", 
                    "enum": [
                        "<", 
                        "<=", 
                        ">=", 
                        ">"
                    ]
                }, 
                "_comparator": {
                    "description": "Extensions for comparator", 
                    "$ref": "#/definitions/Element"
                }, 
                "unit": {
                    "description": "A human-readable form of the unit.", 
                    "$ref": "#/definitions/string"
                }, 
                "_unit": {
                    "description": "Extensions for unit", 
                    "$ref": "#/definitions/Element"
                }, 
                "system": {
                    "description": "The identification of the system that provides the coded form of the unit.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A computer processable form of the unit in some unit representation system.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Count": {
            "description": "A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.", 
                    "enum": [
                        "<", 
                        "<=", 
                        ">=", 
                        ">"
                    ]
                }, 
                "_comparator": {
                    "description": "Extensions for comparator", 
                    "$ref": "#/definitions/Element"
                }, 
                "unit": {
                    "description": "A human-readable form of the unit.", 
                    "$ref": "#/definitions/string"
                }, 
                "_unit": {
                    "description": "Extensions for unit", 
                    "$ref": "#/definitions/Element"
                }, 
                "system": {
                    "description": "The identification of the system that provides the coded form of the unit.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A computer processable form of the unit in some unit representation system.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Money": {
            "description": "An amount of economic utility in some recognized currency.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "Numerical value (with implicit precision).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "currency": {
                    "description": "ISO 4217 Currency Code.", 
                    "$ref": "#/definitions/code"
                }, 
                "_currency": {
                    "description": "Extensions for currency", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Age": {
            "description": "A duration of time during which an organism (or a process) has existed.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "The value of the measured amount. The value includes an implicit precision in the presentation of the value.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "comparator": {
                    "description": "How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is \"<\" , then the real value is < stated value.", 
                    "enum": [
                        "<", 
                        "<=", 
                        ">=", 
                        ">"
                    ]
                }, 
                "_comparator": {
                    "description": "Extensions for comparator", 
                    "$ref": "#/definitions/Element"
                }, 
                "unit": {
                    "description": "A human-readable form of the unit.", 
                    "$ref": "#/definitions/string"
                }, 
                "_unit": {
                    "description": "Extensions for unit", 
                    "$ref": "#/definitions/Element"
                }, 
                "system": {
                    "description": "The identification of the system that provides the coded form of the unit.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A computer processable form of the unit in some unit representation system.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Range": {
            "description": "A set of ordered Quantities defined by a low and high limit.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "low": {
                    "description": "The low limit. The boundary is inclusive.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "high": {
                    "description": "The high limit. The boundary is inclusive.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Period": {
            "description": "A time period defined by a start and end date and optionally time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "start": {
                    "description": "The start of the period. The boundary is inclusive.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_start": {
                    "description": "Extensions for start", 
                    "$ref": "#/definitions/Element"
                }, 
                "end": {
                    "description": "The end of the period. If the end of the period is missing, it means no end was known or planned at the time the instance was created. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_end": {
                    "description": "Extensions for end", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Ratio": {
            "description": "A relationship of two Quantity values - expressed as a numerator and a denominator.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "numerator": {
                    "description": "The value of the numerator.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "denominator": {
                    "description": "The value of the denominator.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "RatioRange": {
            "description": "A range of ratios expressed as a low and high numerator and a denominator.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "lowNumerator": {
                    "description": "The value of the low limit numerator.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "highNumerator": {
                    "description": "The value of the high limit numerator.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "denominator": {
                    "description": "The value of the denominator.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Reference": {
            "description": "A reference from one resource to another.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "reference": {
                    "description": "A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.", 
                    "$ref": "#/definitions/string"
                }, 
                "_reference": {
                    "description": "Extensions for reference", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.\n\nThe type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. \"Patient\" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).", 
                    "$ref": "#/definitions/uri"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "identifier": {
                    "description": "An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "display": {
                    "description": "Plain text narrative that identifies the resource in addition to the resource reference.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SampledData": {
            "description": "A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "origin": {
                    "description": "The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "period": {
                    "description": "The length of time between sampling times, measured in milliseconds.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_period": {
                    "description": "Extensions for period", 
                    "$ref": "#/definitions/Element"
                }, 
                "factor": {
                    "description": "A correction factor that is applied to the sampled data points before they are added to the origin.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "lowerLimit": {
                    "description": "The lower limit of detection of the measured points. This is needed if any of the data points have the value \"L\" (lower than detection limit).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_lowerLimit": {
                    "description": "Extensions for lowerLimit", 
                    "$ref": "#/definitions/Element"
                }, 
                "upperLimit": {
                    "description": "The upper limit of detection of the measured points. This is needed if any of the data points have the value \"U\" (higher than detection limit).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_upperLimit": {
                    "description": "Extensions for upperLimit", 
                    "$ref": "#/definitions/Element"
                }, 
                "dimensions": {
                    "description": "The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_dimensions": {
                    "description": "Extensions for dimensions", 
                    "$ref": "#/definitions/Element"
                }, 
                "data": {
                    "description": "A series of data points which are decimal values separated by a single space (character u20). The special values \"E\" (error), \"L\" (below detection limit) and \"U\" (above detection limit) can also be used in place of a decimal value.", 
                    "$ref": "#/definitions/string"
                }, 
                "_data": {
                    "description": "Extensions for data", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "origin"
            ], 
            "type": "object"
        }, 
        "Signature": {
            "description": "A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "when": {
                    "description": "When the digital signature was signed.", 
                    "$ref": "#/definitions/instant"
                }, 
                "_when": {
                    "description": "Extensions for when", 
                    "$ref": "#/definitions/Element"
                }, 
                "who": {
                    "description": "A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).", 
                    "$ref": "#/definitions/Reference"
                }, 
                "onBehalfOf": {
                    "description": "A reference to an application-usable description of the identity that is represented by the signature.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "targetFormat": {
                    "description": "A mime type that indicates the technical format of the target resources signed by the signature.", 
                    "$ref": "#/definitions/code"
                }, 
                "_targetFormat": {
                    "description": "Extensions for targetFormat", 
                    "$ref": "#/definitions/Element"
                }, 
                "sigFormat": {
                    "description": "A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.", 
                    "$ref": "#/definitions/code"
                }, 
                "_sigFormat": {
                    "description": "Extensions for sigFormat", 
                    "$ref": "#/definitions/Element"
                }, 
                "data": {
                    "description": "The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.", 
                    "$ref": "#/definitions/base64Binary"
                }, 
                "_data": {
                    "description": "Extensions for data", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type", 
                "who"
            ], 
            "type": "object"
        }, 
        "HumanName": {
            "description": "A human's name with the ability to identify parts and usage.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "use": {
                    "description": "Identifies the purpose for this name.", 
                    "enum": [
                        "usual", 
                        "official", 
                        "temp", 
                        "nickname", 
                        "anonymous", 
                        "old", 
                        "maiden"
                    ]
                }, 
                "_use": {
                    "description": "Extensions for use", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "family": {
                    "description": "The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.", 
                    "$ref": "#/definitions/string"
                }, 
                "_family": {
                    "description": "Extensions for family", 
                    "$ref": "#/definitions/Element"
                }, 
                "given": {
                    "description": "Given name.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_given": {
                    "description": "Extensions for given", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "prefix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_prefix": {
                    "description": "Extensions for prefix", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "suffix": {
                    "description": "Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_suffix": {
                    "description": "Extensions for suffix", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "period": {
                    "description": "Indicates the period of time when this name was valid for the named person.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Address": {
            "description": "An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "use": {
                    "description": "The purpose of this address.", 
                    "enum": [
                        "home", 
                        "work", 
                        "temp", 
                        "old", 
                        "billing"
                    ]
                }, 
                "_use": {
                    "description": "Extensions for use", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.", 
                    "enum": [
                        "postal", 
                        "physical", 
                        "both"
                    ]
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "line": {
                    "description": "This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_line": {
                    "description": "Extensions for line", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "city": {
                    "description": "The name of the city, town, suburb, village or other community or delivery center.", 
                    "$ref": "#/definitions/string"
                }, 
                "_city": {
                    "description": "Extensions for city", 
                    "$ref": "#/definitions/Element"
                }, 
                "district": {
                    "description": "The name of the administrative area (county).", 
                    "$ref": "#/definitions/string"
                }, 
                "_district": {
                    "description": "Extensions for district", 
                    "$ref": "#/definitions/Element"
                }, 
                "state": {
                    "description": "Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (e.g. US 2 letter state codes).", 
                    "$ref": "#/definitions/string"
                }, 
                "_state": {
                    "description": "Extensions for state", 
                    "$ref": "#/definitions/Element"
                }, 
                "postalCode": {
                    "description": "A postal code designating a region defined by the postal service.", 
                    "$ref": "#/definitions/string"
                }, 
                "_postalCode": {
                    "description": "Extensions for postalCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "country": {
                    "description": "Country - a nation as commonly understood or generally accepted.", 
                    "$ref": "#/definitions/string"
                }, 
                "_country": {
                    "description": "Extensions for country", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "Time period when address was/is in use.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ContactPoint": {
            "description": "Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "system": {
                    "description": "Telecommunications form for contact point - what communications system is required to make use of the contact.", 
                    "enum": [
                        "phone", 
                        "fax", 
                        "email", 
                        "pager", 
                        "url", 
                        "sms", 
                        "other"
                    ]
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "value": {
                    "description": "The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "use": {
                    "description": "Identifies the purpose for the contact point.", 
                    "enum": [
                        "home", 
                        "work", 
                        "temp", 
                        "old", 
                        "mobile"
                    ]
                }, 
                "_use": {
                    "description": "Extensions for use", 
                    "$ref": "#/definitions/Element"
                }, 
                "rank": {
                    "description": "Specifies a preferred order in which to use a set of contacts. ContactPoints with lower rank values are more preferred than those with higher rank values.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_rank": {
                    "description": "Extensions for rank", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "Time period when the contact point was/is in use.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Timing": {
            "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "event": {
                    "description": "Identifies specific times when the event occurs.", 
                    "items": {
                        "$ref": "#/definitions/dateTime"
                    }, 
                    "type": "array"
                }, 
                "_event": {
                    "description": "Extensions for event", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "repeat": {
                    "description": "A set of rules that describe when the event is scheduled.", 
                    "$ref": "#/definitions/Timing_Repeat"
                }, 
                "code": {
                    "description": "A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Timing_Repeat": {
            "description": "Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "boundsDuration": {
                    "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "boundsRange": {
                    "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.", 
                    "$ref": "#/definitions/Range"
                }, 
                "boundsPeriod": {
                    "description": "Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.", 
                    "$ref": "#/definitions/Period"
                }, 
                "count": {
                    "description": "A total count of the desired number of repetitions across the duration of the entire timing specification. If countMax is present, this element indicates the lower bound of the allowed range of count values.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_count": {
                    "description": "Extensions for count", 
                    "$ref": "#/definitions/Element"
                }, 
                "countMax": {
                    "description": "If present, indicates that the count is a range - so to perform the action between [count] and [countMax] times.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_countMax": {
                    "description": "Extensions for countMax", 
                    "$ref": "#/definitions/Element"
                }, 
                "duration": {
                    "description": "How long this thing happens for when it happens. If durationMax is present, this element indicates the lower bound of the allowed range of the duration.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_duration": {
                    "description": "Extensions for duration", 
                    "$ref": "#/definitions/Element"
                }, 
                "durationMax": {
                    "description": "If present, indicates that the duration is a range - so to perform the action between [duration] and [durationMax] time length.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_durationMax": {
                    "description": "Extensions for durationMax", 
                    "$ref": "#/definitions/Element"
                }, 
                "durationUnit": {
                    "description": "The units of time for the duration, in UCUM units.", 
                    "enum": [
                        "s", 
                        "min", 
                        "h", 
                        "d", 
                        "wk", 
                        "mo", 
                        "a"
                    ]
                }, 
                "_durationUnit": {
                    "description": "Extensions for durationUnit", 
                    "$ref": "#/definitions/Element"
                }, 
                "frequency": {
                    "description": "The number of times to repeat the action within the specified period. If frequencyMax is present, this element indicates the lower bound of the allowed range of the frequency.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_frequency": {
                    "description": "Extensions for frequency", 
                    "$ref": "#/definitions/Element"
                }, 
                "frequencyMax": {
                    "description": "If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_frequencyMax": {
                    "description": "Extensions for frequencyMax", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "Indicates the duration of time over which repetitions are to occur; e.g. to express \"3 times per day\", 3 would be the frequency and \"1 day\" would be the period. If periodMax is present, this element indicates the lower bound of the allowed range of the period length.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_period": {
                    "description": "Extensions for period", 
                    "$ref": "#/definitions/Element"
                }, 
                "periodMax": {
                    "description": "If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as \"do this once every 3-5 days.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_periodMax": {
                    "description": "Extensions for periodMax", 
                    "$ref": "#/definitions/Element"
                }, 
                "periodUnit": {
                    "description": "The units of time for the period in UCUM units.", 
                    "enum": [
                        "s", 
                        "min", 
                        "h", 
                        "d", 
                        "wk", 
                        "mo", 
                        "a"
                    ]
                }, 
                "_periodUnit": {
                    "description": "Extensions for periodUnit", 
                    "$ref": "#/definitions/Element"
                }, 
                "dayOfWeek": {
                    "description": "If one or more days of week is provided, then the action happens only on the specified day(s).", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_dayOfWeek": {
                    "description": "Extensions for dayOfWeek", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "timeOfDay": {
                    "description": "Specified time of day for action to take place.", 
                    "items": {
                        "$ref": "#/definitions/time"
                    }, 
                    "type": "array"
                }, 
                "_timeOfDay": {
                    "description": "Extensions for timeOfDay", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "when": {
                    "description": "An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.", 
                    "items": {
                        "enum": [
                            "MORN", 
                            "MORN.early", 
                            "MORN.late", 
                            "NOON", 
                            "AFT", 
                            "AFT.early", 
                            "AFT.late", 
                            "EVE", 
                            "EVE.early", 
                            "EVE.late", 
                            "NIGHT", 
                            "PHS", 
                            "HS", 
                            "WAKE", 
                            "C", 
                            "CM", 
                            "CD", 
                            "CV", 
                            "AC", 
                            "ACM", 
                            "ACD", 
                            "ACV", 
                            "PC", 
                            "PCM", 
                            "PCD", 
                            "PCV"
                        ]
                    }, 
                    "type": "array"
                }, 
                "_when": {
                    "description": "Extensions for when", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "offset": {
                    "description": "The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_offset": {
                    "description": "Extensions for offset", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Meta": {
            "description": "The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "versionId": {
                    "description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.", 
                    "$ref": "#/definitions/id"
                }, 
                "_versionId": {
                    "description": "Extensions for versionId", 
                    "$ref": "#/definitions/Element"
                }, 
                "lastUpdated": {
                    "description": "When the resource last changed - e.g. when the version changed.", 
                    "$ref": "#/definitions/instant"
                }, 
                "_lastUpdated": {
                    "description": "Extensions for lastUpdated", 
                    "$ref": "#/definitions/Element"
                }, 
                "source": {
                    "description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_source": {
                    "description": "Extensions for source", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].", 
                    "items": {
                        "$ref": "#/definitions/canonical"
                    }, 
                    "type": "array"
                }, 
                "security": {
                    "description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "tag": {
                    "description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ContactDetail": {
            "description": "Specifies contact information for a person or organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name of an individual to contact.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "telecom": {
                    "description": "The contact details for the individual (if a name was provided) or the organization.", 
                    "items": {
                        "$ref": "#/definitions/ContactPoint"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Contributor": {
            "description": "A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of contributor.", 
                    "enum": [
                        "author", 
                        "editor", 
                        "reviewer", 
                        "endorser"
                    ]
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "The name of the individual or organization responsible for the contribution.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "contact": {
                    "description": "Contact details to assist a user in finding and communicating with the contributor.", 
                    "items": {
                        "$ref": "#/definitions/ContactDetail"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DataRequirement": {
            "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "The profile of the required data, specified as the uri of the profile definition.", 
                    "items": {
                        "$ref": "#/definitions/canonical"
                    }, 
                    "type": "array"
                }, 
                "subjectCodeableConcept": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "subjectReference": {
                    "description": "The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "mustSupport": {
                    "description": "Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. \n\nThe value of mustSupport SHALL be a FHIRPath resolveable on the type of the DataRequirement. The path SHALL consist only of identifiers, constant indexers, and .resolve() (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_mustSupport": {
                    "description": "Extensions for mustSupport", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "codeFilter": {
                    "description": "Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.", 
                    "items": {
                        "$ref": "#/definitions/DataRequirement_CodeFilter"
                    }, 
                    "type": "array"
                }, 
                "dateFilter": {
                    "description": "Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.", 
                    "items": {
                        "$ref": "#/definitions/DataRequirement_DateFilter"
                    }, 
                    "type": "array"
                }, 
                "limit": {
                    "description": "Specifies a maximum number of results that are required (uses the _count search parameter).", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_limit": {
                    "description": "Extensions for limit", 
                    "$ref": "#/definitions/Element"
                }, 
                "sort": {
                    "description": "Specifies the order of the results to be returned.", 
                    "items": {
                        "$ref": "#/definitions/DataRequirement_Sort"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DataRequirement_CodeFilter": {
            "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "path": {
                    "description": "The code-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept.", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "searchParam": {
                    "description": "A token parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type code, Coding, or CodeableConcept.", 
                    "$ref": "#/definitions/string"
                }, 
                "_searchParam": {
                    "description": "Extensions for searchParam", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueSet": {
                    "description": "The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "code": {
                    "description": "The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DataRequirement_DateFilter": {
            "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "path": {
                    "description": "The date-valued attribute of the filter. The specified path SHALL be a FHIRPath resolveable on the specified type of the DataRequirement, and SHALL consist only of identifiers, constant indexers, and .resolve(). The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details). Note that the index must be an integer constant. The path must resolve to an element of type date, dateTime, Period, Schedule, or Timing.", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "searchParam": {
                    "description": "A date parameter that refers to a search parameter defined on the specified type of the DataRequirement, and which searches on elements of type date, dateTime, Period, Schedule, or Timing.", 
                    "$ref": "#/definitions/string"
                }, 
                "_searchParam": {
                    "description": "Extensions for searchParam", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valuePeriod": {
                    "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.", 
                    "$ref": "#/definitions/Period"
                }, 
                "valueDuration": {
                    "description": "The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.", 
                    "$ref": "#/definitions/Duration"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DataRequirement_Sort": {
            "description": "Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "path": {
                    "description": "The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant.", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "direction": {
                    "description": "The direction of the sort, ascending or descending.", 
                    "enum": [
                        "ascending", 
                        "descending"
                    ]
                }, 
                "_direction": {
                    "description": "Extensions for direction", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ParameterDefinition": {
            "description": "The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name of the parameter used to allow access to the value of the parameter in evaluation contexts.", 
                    "$ref": "#/definitions/code"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "use": {
                    "description": "Whether the parameter is input or output for the module.", 
                    "$ref": "#/definitions/code"
                }, 
                "_use": {
                    "description": "Extensions for use", 
                    "$ref": "#/definitions/Element"
                }, 
                "min": {
                    "description": "The minimum number of times this parameter SHALL appear in the request or response.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_min": {
                    "description": "Extensions for min", 
                    "$ref": "#/definitions/Element"
                }, 
                "max": {
                    "description": "The maximum number of times this element is permitted to appear in the request or response.", 
                    "$ref": "#/definitions/string"
                }, 
                "_max": {
                    "description": "Extensions for max", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "A brief discussion of what the parameter is for and how it is used by the module.", 
                    "$ref": "#/definitions/string"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type of the parameter.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "RelatedArtifact": {
            "description": "Related artifacts such as additional documentation, justification, or bibliographic references.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of relationship to the related artifact.", 
                    "enum": [
                        "documentation", 
                        "justification", 
                        "citation", 
                        "predecessor", 
                        "successor", 
                        "derived-from", 
                        "depends-on", 
                        "composed-of"
                    ]
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "label": {
                    "description": "A short label that can be used to reference the citation from elsewhere in the containing artifact, such as a footnote index.", 
                    "$ref": "#/definitions/string"
                }, 
                "_label": {
                    "description": "Extensions for label", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }, 
                "citation": {
                    "description": "A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_citation": {
                    "description": "Extensions for citation", 
                    "$ref": "#/definitions/Element"
                }, 
                "url": {
                    "description": "A url for the artifact that can be followed to access the actual content.", 
                    "$ref": "#/definitions/url"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }, 
                "document": {
                    "description": "The document being referenced, represented as an attachment. This is exclusive with the resource element.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "resource": {
                    "description": "The related resource, such as a library, value set, profile, or other knowledge resource.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TriggerDefinition": {
            "description": "A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of triggering event.", 
                    "enum": [
                        "named-event", 
                        "periodic", 
                        "data-changed", 
                        "data-added", 
                        "data-modified", 
                        "data-removed", 
                        "data-accessed", 
                        "data-access-ended"
                    ]
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "timingTiming": {
                    "description": "The timing of the event (if this is a periodic trigger).", 
                    "$ref": "#/definitions/Timing"
                }, 
                "timingReference": {
                    "description": "The timing of the event (if this is a periodic trigger).", 
                    "$ref": "#/definitions/Reference"
                }, 
                "timingDate": {
                    "description": "The timing of the event (if this is a periodic trigger).", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_timingDate": {
                    "description": "Extensions for timingDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "timingDateTime": {
                    "description": "The timing of the event (if this is a periodic trigger).", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_timingDateTime": {
                    "description": "Extensions for timingDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "data": {
                    "description": "The triggering data of the event (if this is a data trigger). If more than one data is requirement is specified, then all the data requirements must be true.", 
                    "items": {
                        "$ref": "#/definitions/DataRequirement"
                    }, 
                    "type": "array"
                }, 
                "condition": {
                    "description": "A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.", 
                    "$ref": "#/definitions/Expression"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "UsageContext": {
            "description": "Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A code that identifies the type of context being specified by this usage context.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueCodeableConcept": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.", 
                    "$ref": "#/definitions/Range"
                }, 
                "valueReference": {
                    "description": "A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "Dosage": {
            "description": "Indicates how the medication is/was taken or should be taken by the patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "Indicates the order in which the dosage instructions should be applied or interpreted.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "Free text dosage instructions e.g. SIG.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "additionalInstruction": {
                    "description": "Supplemental instructions to the patient on how to take the medication  (e.g. \"with meals\" or\"take half to one hour before food\") or warnings for the patient about the medication (e.g. \"may cause drowsiness\" or \"avoid exposure of skin to direct sunlight or sunlamps\").", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "patientInstruction": {
                    "description": "Instructions in terms that are understood by the patient or consumer.", 
                    "$ref": "#/definitions/string"
                }, 
                "_patientInstruction": {
                    "description": "Extensions for patientInstruction", 
                    "$ref": "#/definitions/Element"
                }, 
                "timing": {
                    "description": "When medication should be administered.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "asNeededBoolean": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_asNeededBoolean": {
                    "description": "Extensions for asNeededBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "asNeededCodeableConcept": {
                    "description": "Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "site": {
                    "description": "Body site to administer to.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "route": {
                    "description": "How drug should enter body.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "method": {
                    "description": "Technique for administering medication.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "doseAndRate": {
                    "description": "The amount of medication administered.", 
                    "items": {
                        "$ref": "#/definitions/Dosage_DoseAndRate"
                    }, 
                    "type": "array"
                }, 
                "maxDosePerPeriod": {
                    "description": "Upper limit on medication per unit of time.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "maxDosePerAdministration": {
                    "description": "Upper limit on medication per administration.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "maxDosePerLifetime": {
                    "description": "Upper limit on medication per lifetime of the patient.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Dosage_DoseAndRate": {
            "description": "Indicates how the medication is/was taken or should be taken by the patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The kind of dose or rate specified, for example, ordered or calculated.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "doseRange": {
                    "description": "Amount of medication per dose.", 
                    "$ref": "#/definitions/Range"
                }, 
                "doseQuantity": {
                    "description": "Amount of medication per dose.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "rateRatio": {
                    "description": "Amount of medication per unit of time.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "rateRange": {
                    "description": "Amount of medication per unit of time.", 
                    "$ref": "#/definitions/Range"
                }, 
                "rateQuantity": {
                    "description": "Amount of medication per unit of time.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Population": {
            "description": "A populatioof people with some set of grouping criteria.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "ageRange": {
                    "description": "The age of the specific population.", 
                    "$ref": "#/definitions/Range"
                }, 
                "ageCodeableConcept": {
                    "description": "The age of the specific population.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "gender": {
                    "description": "The gender of the specific population.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "race": {
                    "description": "Race of the specific population.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "physiologicalCondition": {
                    "description": "The existing physiological conditions of the specific population to which this applies.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ProductShelfLife": {
            "description": "The shelf-life and storage information for a medicinal product item or container can be described using this class.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "Unique identifier for the packaged Medicinal Product.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "type": {
                    "description": "This describes the shelf life, taking into account various scenarios such as shelf life of the packaged Medicinal Product itself, shelf life after transformation where necessary and shelf life after the first opening of a bottle, etc. The shelf life type shall be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "period": {
                    "description": "The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "specialPrecautionsForStorage": {
                    "description": "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "period", 
                "type"
            ], 
            "type": "object"
        }, 
        "ProdCharacteristic": {
            "description": "The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "height": {
                    "description": "Where applicable, the height can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "width": {
                    "description": "Where applicable, the width can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "depth": {
                    "description": "Where applicable, the depth can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "weight": {
                    "description": "Where applicable, the weight can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "nominalVolume": {
                    "description": "Where applicable, the nominal volume can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "externalDiameter": {
                    "description": "Where applicable, the external diameter can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "shape": {
                    "description": "Where applicable, the shape can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.", 
                    "$ref": "#/definitions/string"
                }, 
                "_shape": {
                    "description": "Extensions for shape", 
                    "$ref": "#/definitions/Element"
                }, 
                "color": {
                    "description": "Where applicable, the color can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_color": {
                    "description": "Extensions for color", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "imprint": {
                    "description": "Where applicable, the imprint can be specified as text.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_imprint": {
                    "description": "Extensions for imprint", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "image": {
                    "description": "Where applicable, the image can be provided The format of the image attachment shall be specified by regional implementations.", 
                    "items": {
                        "$ref": "#/definitions/Attachment"
                    }, 
                    "type": "array"
                }, 
                "scoring": {
                    "description": "Where applicable, the scoring can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MarketingStatus": {
            "description": "The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "country": {
                    "description": "The country in which the marketing authorisation has been granted shall be specified It should be specified using the ISO 3166 \u2011 1 alpha-2 code elements.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "jurisdiction": {
                    "description": "Where a Medicines Regulatory Agency has granted a marketing authorisation for which specific provisions within a jurisdiction apply, the jurisdiction can be specified using an appropriate controlled terminology The controlled term and the controlled term identifier shall be specified.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "status": {
                    "description": "This attribute provides information on the status of the marketing of the medicinal product See ISO/TS 20443 for more information and examples.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "dateRange": {
                    "description": "The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE \u201cPlaced on the market\u201d refers to the release of the Medicinal Product into the distribution chain.", 
                    "$ref": "#/definitions/Period"
                }, 
                "restoreDate": {
                    "description": "The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE \u201cPlaced on the market\u201d refers to the release of the Medicinal Product into the distribution chain.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_restoreDate": {
                    "description": "Extensions for restoreDate", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "status"
            ], 
            "type": "object"
        }, 
        "Expression": {
            "description": "A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "A brief, natural language description of the condition that effectively communicates the intended semantics.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "A short name assigned to the expression to allow for multiple reuse of the expression in the context where it is defined.", 
                    "$ref": "#/definitions/id"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "language": {
                    "description": "The media type of the language for the expression.", 
                    "enum": [
                        "text/cql", 
                        "text/fhirpath", 
                        "application/x-fhir-query", 
                        "text/cql-identifier", 
                        "text/cql-expression"
                    ]
                }, 
                "_language": {
                    "description": "Extensions for language", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "An expression in the specified language that returns a value.", 
                    "$ref": "#/definitions/string"
                }, 
                "_expression": {
                    "description": "Extensions for expression", 
                    "$ref": "#/definitions/Element"
                }, 
                "reference": {
                    "description": "A URI that defines where the expression is found.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_reference": {
                    "description": "Extensions for reference", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ElementDefinition": {
            "description": "Captures constraints on each element within the resource, profile, or extension.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "path": {
                    "description": "The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension.", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "representation": {
                    "description": "Codes that define how this element is represented in instances, when the deviation varies from the normal case.", 
                    "items": {
                        "enum": [
                            "xmlAttr", 
                            "xmlText", 
                            "typeAttr", 
                            "cdaText", 
                            "xhtml"
                        ]
                    }, 
                    "type": "array"
                }, 
                "_representation": {
                    "description": "Extensions for representation", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "sliceName": {
                    "description": "The name of this element definition slice, when slicing is working. The name must be a token with no dots or spaces. This is a unique name referring to a specific set of constraints applied to this element, used to provide a name to different slices of the same element.", 
                    "$ref": "#/definitions/string"
                }, 
                "_sliceName": {
                    "description": "Extensions for sliceName", 
                    "$ref": "#/definitions/Element"
                }, 
                "sliceIsConstraining": {
                    "description": "If true, indicates that this slice definition is constraining a slice definition with the same name in an inherited profile. If false, the slice is not overriding any slice in an inherited profile. If missing, the slice might or might not be overriding a slice in an inherited profile, depending on the sliceName.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_sliceIsConstraining": {
                    "description": "Extensions for sliceIsConstraining", 
                    "$ref": "#/definitions/Element"
                }, 
                "label": {
                    "description": "A single preferred label which is the text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.", 
                    "$ref": "#/definitions/string"
                }, 
                "_label": {
                    "description": "Extensions for label", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A code that has the same meaning as the element in a particular terminology.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "slicing": {
                    "description": "Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).", 
                    "$ref": "#/definitions/ElementDefinition_Slicing"
                }, 
                "short": {
                    "description": "A concise description of what this element means (e.g. for use in autogenerated summaries).", 
                    "$ref": "#/definitions/string"
                }, 
                "_short": {
                    "description": "Extensions for short", 
                    "$ref": "#/definitions/Element"
                }, 
                "definition": {
                    "description": "Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource. (Note: The text you are reading is specified in ElementDefinition.definition).", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_definition": {
                    "description": "Extensions for definition", 
                    "$ref": "#/definitions/Element"
                }, 
                "comment": {
                    "description": "Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc. (Note: The text you are reading is specified in ElementDefinition.comment).", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_comment": {
                    "description": "Extensions for comment", 
                    "$ref": "#/definitions/Element"
                }, 
                "requirements": {
                    "description": "This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_requirements": {
                    "description": "Extensions for requirements", 
                    "$ref": "#/definitions/Element"
                }, 
                "alias": {
                    "description": "Identifies additional names by which this element might also be known.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_alias": {
                    "description": "Extensions for alias", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "min": {
                    "description": "The minimum number of times this element SHALL appear in the instance.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_min": {
                    "description": "Extensions for min", 
                    "$ref": "#/definitions/Element"
                }, 
                "max": {
                    "description": "The maximum number of times this element is permitted to appear in the instance.", 
                    "$ref": "#/definitions/string"
                }, 
                "_max": {
                    "description": "Extensions for max", 
                    "$ref": "#/definitions/Element"
                }, 
                "base": {
                    "description": "Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. When the element definition is not the original definition of an element - i.g. either in a constraint on another type, or for elements from a super type in a snap shot - then the information in provided in the element definition may be different to the base definition. On the original definition of the element, it will be same.", 
                    "$ref": "#/definitions/ElementDefinition_Base"
                }, 
                "contentReference": {
                    "description": "Identifies an element defined elsewhere in the definition whose content rules should be applied to the current element. ContentReferences bring across all the rules that are in the ElementDefinition for the element, including definitions, cardinality constraints, bindings, invariants etc.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_contentReference": {
                    "description": "Extensions for contentReference", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The data type or resource that the value of this element is permitted to be.", 
                    "items": {
                        "$ref": "#/definitions/ElementDefinition_Type"
                    }, 
                    "type": "array"
                }, 
                "defaultValueBase64Binary": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_defaultValueBase64Binary": {
                    "description": "Extensions for defaultValueBase64Binary", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueBoolean": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_defaultValueBoolean": {
                    "description": "Extensions for defaultValueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueCanonical": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_defaultValueCanonical": {
                    "description": "Extensions for defaultValueCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueCode": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_defaultValueCode": {
                    "description": "Extensions for defaultValueCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueDate": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_defaultValueDate": {
                    "description": "Extensions for defaultValueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueDateTime": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_defaultValueDateTime": {
                    "description": "Extensions for defaultValueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueDecimal": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_defaultValueDecimal": {
                    "description": "Extensions for defaultValueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueId": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
                    "type": "string"
                }, 
                "_defaultValueId": {
                    "description": "Extensions for defaultValueId", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueInstant": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_defaultValueInstant": {
                    "description": "Extensions for defaultValueInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueInteger": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_defaultValueInteger": {
                    "description": "Extensions for defaultValueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueMarkdown": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_defaultValueMarkdown": {
                    "description": "Extensions for defaultValueMarkdown", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueOid": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", 
                    "type": "string"
                }, 
                "_defaultValueOid": {
                    "description": "Extensions for defaultValueOid", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValuePositiveInt": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_defaultValuePositiveInt": {
                    "description": "Extensions for defaultValuePositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueString": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_defaultValueString": {
                    "description": "Extensions for defaultValueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueTime": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_defaultValueTime": {
                    "description": "Extensions for defaultValueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueUnsignedInt": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_defaultValueUnsignedInt": {
                    "description": "Extensions for defaultValueUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueUri": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_defaultValueUri": {
                    "description": "Extensions for defaultValueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueUrl": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_defaultValueUrl": {
                    "description": "Extensions for defaultValueUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueUuid": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", 
                    "type": "string"
                }, 
                "_defaultValueUuid": {
                    "description": "Extensions for defaultValueUuid", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueAddress": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Address"
                }, 
                "defaultValueAge": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Age"
                }, 
                "defaultValueAnnotation": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Annotation"
                }, 
                "defaultValueAttachment": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "defaultValueCodeableConcept": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "defaultValueCodeableReference": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "defaultValueCoding": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Coding"
                }, 
                "defaultValueContactPoint": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/ContactPoint"
                }, 
                "defaultValueCount": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Count"
                }, 
                "defaultValueDistance": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Distance"
                }, 
                "defaultValueDuration": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Duration"
                }, 
                "defaultValueHumanName": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "defaultValueIdentifier": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "defaultValueMoney": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Money"
                }, 
                "defaultValuePeriod": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Period"
                }, 
                "defaultValueQuantity": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "defaultValueRange": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Range"
                }, 
                "defaultValueRatio": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "defaultValueRatioRange": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/RatioRange"
                }, 
                "defaultValueReference": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Reference"
                }, 
                "defaultValueSampledData": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/SampledData"
                }, 
                "defaultValueSignature": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Signature"
                }, 
                "defaultValueTiming": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Timing"
                }, 
                "defaultValueContactDetail": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/ContactDetail"
                }, 
                "defaultValueContributor": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Contributor"
                }, 
                "defaultValueDataRequirement": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/DataRequirement"
                }, 
                "defaultValueExpression": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Expression"
                }, 
                "defaultValueParameterDefinition": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/ParameterDefinition"
                }, 
                "defaultValueRelatedArtifact": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/RelatedArtifact"
                }, 
                "defaultValueTriggerDefinition": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/TriggerDefinition"
                }, 
                "defaultValueUsageContext": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/UsageContext"
                }, 
                "defaultValueDosage": {
                    "description": "The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').", 
                    "$ref": "#/definitions/Dosage"
                }, 
                "meaningWhenMissing": {
                    "description": "The Implicit meaning that is to be understood when this element is missing (e.g. 'when this element is missing, the period is ongoing').", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_meaningWhenMissing": {
                    "description": "Extensions for meaningWhenMissing", 
                    "$ref": "#/definitions/Element"
                }, 
                "orderMeaning": {
                    "description": "If present, indicates that the order of the repeating element has meaning and describes what that meaning is.  If absent, it means that the order of the element has no meaning.", 
                    "$ref": "#/definitions/string"
                }, 
                "_orderMeaning": {
                    "description": "Extensions for orderMeaning", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedBase64Binary": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_fixedBase64Binary": {
                    "description": "Extensions for fixedBase64Binary", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedBoolean": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_fixedBoolean": {
                    "description": "Extensions for fixedBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedCanonical": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_fixedCanonical": {
                    "description": "Extensions for fixedCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedCode": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_fixedCode": {
                    "description": "Extensions for fixedCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedDate": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_fixedDate": {
                    "description": "Extensions for fixedDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedDateTime": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_fixedDateTime": {
                    "description": "Extensions for fixedDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedDecimal": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_fixedDecimal": {
                    "description": "Extensions for fixedDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedId": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
                    "type": "string"
                }, 
                "_fixedId": {
                    "description": "Extensions for fixedId", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedInstant": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_fixedInstant": {
                    "description": "Extensions for fixedInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedInteger": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_fixedInteger": {
                    "description": "Extensions for fixedInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedMarkdown": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_fixedMarkdown": {
                    "description": "Extensions for fixedMarkdown", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedOid": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", 
                    "type": "string"
                }, 
                "_fixedOid": {
                    "description": "Extensions for fixedOid", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedPositiveInt": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_fixedPositiveInt": {
                    "description": "Extensions for fixedPositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedString": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_fixedString": {
                    "description": "Extensions for fixedString", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedTime": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_fixedTime": {
                    "description": "Extensions for fixedTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedUnsignedInt": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_fixedUnsignedInt": {
                    "description": "Extensions for fixedUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedUri": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_fixedUri": {
                    "description": "Extensions for fixedUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedUrl": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_fixedUrl": {
                    "description": "Extensions for fixedUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedUuid": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", 
                    "type": "string"
                }, 
                "_fixedUuid": {
                    "description": "Extensions for fixedUuid", 
                    "$ref": "#/definitions/Element"
                }, 
                "fixedAddress": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Address"
                }, 
                "fixedAge": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Age"
                }, 
                "fixedAnnotation": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Annotation"
                }, 
                "fixedAttachment": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "fixedCodeableConcept": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "fixedCodeableReference": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "fixedCoding": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "fixedContactPoint": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/ContactPoint"
                }, 
                "fixedCount": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Count"
                }, 
                "fixedDistance": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Distance"
                }, 
                "fixedDuration": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "fixedHumanName": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "fixedIdentifier": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "fixedMoney": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Money"
                }, 
                "fixedPeriod": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Period"
                }, 
                "fixedQuantity": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "fixedRange": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Range"
                }, 
                "fixedRatio": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "fixedRatioRange": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/RatioRange"
                }, 
                "fixedReference": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "fixedSampledData": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/SampledData"
                }, 
                "fixedSignature": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Signature"
                }, 
                "fixedTiming": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "fixedContactDetail": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/ContactDetail"
                }, 
                "fixedContributor": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Contributor"
                }, 
                "fixedDataRequirement": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/DataRequirement"
                }, 
                "fixedExpression": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Expression"
                }, 
                "fixedParameterDefinition": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/ParameterDefinition"
                }, 
                "fixedRelatedArtifact": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/RelatedArtifact"
                }, 
                "fixedTriggerDefinition": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/TriggerDefinition"
                }, 
                "fixedUsageContext": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/UsageContext"
                }, 
                "fixedDosage": {
                    "description": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.", 
                    "$ref": "#/definitions/Dosage"
                }, 
                "patternBase64Binary": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_patternBase64Binary": {
                    "description": "Extensions for patternBase64Binary", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternBoolean": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_patternBoolean": {
                    "description": "Extensions for patternBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternCanonical": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_patternCanonical": {
                    "description": "Extensions for patternCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternCode": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_patternCode": {
                    "description": "Extensions for patternCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternDate": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_patternDate": {
                    "description": "Extensions for patternDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternDateTime": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_patternDateTime": {
                    "description": "Extensions for patternDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternDecimal": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_patternDecimal": {
                    "description": "Extensions for patternDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternId": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
                    "type": "string"
                }, 
                "_patternId": {
                    "description": "Extensions for patternId", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternInstant": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_patternInstant": {
                    "description": "Extensions for patternInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternInteger": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_patternInteger": {
                    "description": "Extensions for patternInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternMarkdown": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_patternMarkdown": {
                    "description": "Extensions for patternMarkdown", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternOid": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", 
                    "type": "string"
                }, 
                "_patternOid": {
                    "description": "Extensions for patternOid", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternPositiveInt": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_patternPositiveInt": {
                    "description": "Extensions for patternPositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternString": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_patternString": {
                    "description": "Extensions for patternString", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternTime": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_patternTime": {
                    "description": "Extensions for patternTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternUnsignedInt": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_patternUnsignedInt": {
                    "description": "Extensions for patternUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternUri": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_patternUri": {
                    "description": "Extensions for patternUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternUrl": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_patternUrl": {
                    "description": "Extensions for patternUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternUuid": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", 
                    "type": "string"
                }, 
                "_patternUuid": {
                    "description": "Extensions for patternUuid", 
                    "$ref": "#/definitions/Element"
                }, 
                "patternAddress": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Address"
                }, 
                "patternAge": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Age"
                }, 
                "patternAnnotation": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Annotation"
                }, 
                "patternAttachment": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "patternCodeableConcept": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "patternCodeableReference": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "patternCoding": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "patternContactPoint": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/ContactPoint"
                }, 
                "patternCount": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Count"
                }, 
                "patternDistance": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Distance"
                }, 
                "patternDuration": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "patternHumanName": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "patternIdentifier": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "patternMoney": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Money"
                }, 
                "patternPeriod": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Period"
                }, 
                "patternQuantity": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "patternRange": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Range"
                }, 
                "patternRatio": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "patternRatioRange": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/RatioRange"
                }, 
                "patternReference": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "patternSampledData": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/SampledData"
                }, 
                "patternSignature": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Signature"
                }, 
                "patternTiming": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "patternContactDetail": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/ContactDetail"
                }, 
                "patternContributor": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Contributor"
                }, 
                "patternDataRequirement": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/DataRequirement"
                }, 
                "patternExpression": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Expression"
                }, 
                "patternParameterDefinition": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/ParameterDefinition"
                }, 
                "patternRelatedArtifact": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/RelatedArtifact"
                }, 
                "patternTriggerDefinition": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/TriggerDefinition"
                }, 
                "patternUsageContext": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/UsageContext"
                }, 
                "patternDosage": {
                    "description": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  \n\nWhen pattern[x] is used to constrain a primitive, it means that the value provided in the pattern[x] must match the instance value exactly.\n\nWhen pattern[x] is used to constrain an array, it means that each element provided in the pattern[x] array must (recursively) match at least one element from the instance array.\n\nWhen pattern[x] is used to constrain a complex object, it means that each property in the pattern must be present in the complex object, and its value must recursively match -- i.e.,\n\n1. If primitive: it must match exactly the pattern value\n2. If a complex object: it must match (recursively) the pattern value\n3. If an array: it must match (recursively) the pattern value.", 
                    "$ref": "#/definitions/Dosage"
                }, 
                "example": {
                    "description": "A sample value for this element demonstrating the type of information that would typically be found in the element.", 
                    "items": {
                        "$ref": "#/definitions/ElementDefinition_Example"
                    }, 
                    "type": "array"
                }, 
                "minValueDate": {
                    "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_minValueDate": {
                    "description": "Extensions for minValueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "minValueDateTime": {
                    "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_minValueDateTime": {
                    "description": "Extensions for minValueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "minValueInstant": {
                    "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_minValueInstant": {
                    "description": "Extensions for minValueInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "minValueTime": {
                    "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_minValueTime": {
                    "description": "Extensions for minValueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "minValueDecimal": {
                    "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_minValueDecimal": {
                    "description": "Extensions for minValueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "minValueInteger": {
                    "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_minValueInteger": {
                    "description": "Extensions for minValueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "minValuePositiveInt": {
                    "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_minValuePositiveInt": {
                    "description": "Extensions for minValuePositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "minValueUnsignedInt": {
                    "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_minValueUnsignedInt": {
                    "description": "Extensions for minValueUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "minValueQuantity": {
                    "description": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "maxValueDate": {
                    "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_maxValueDate": {
                    "description": "Extensions for maxValueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "maxValueDateTime": {
                    "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_maxValueDateTime": {
                    "description": "Extensions for maxValueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "maxValueInstant": {
                    "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_maxValueInstant": {
                    "description": "Extensions for maxValueInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "maxValueTime": {
                    "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_maxValueTime": {
                    "description": "Extensions for maxValueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "maxValueDecimal": {
                    "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_maxValueDecimal": {
                    "description": "Extensions for maxValueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "maxValueInteger": {
                    "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_maxValueInteger": {
                    "description": "Extensions for maxValueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "maxValuePositiveInt": {
                    "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_maxValuePositiveInt": {
                    "description": "Extensions for maxValuePositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "maxValueUnsignedInt": {
                    "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_maxValueUnsignedInt": {
                    "description": "Extensions for maxValueUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "maxValueQuantity": {
                    "description": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "maxLength": {
                    "description": "Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_maxLength": {
                    "description": "Extensions for maxLength", 
                    "$ref": "#/definitions/Element"
                }, 
                "condition": {
                    "description": "A reference to an invariant that may make additional statements about the cardinality or value in the instance.", 
                    "items": {
                        "$ref": "#/definitions/id"
                    }, 
                    "type": "array"
                }, 
                "_condition": {
                    "description": "Extensions for condition", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "constraint": {
                    "description": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.", 
                    "items": {
                        "$ref": "#/definitions/ElementDefinition_Constraint"
                    }, 
                    "type": "array"
                }, 
                "mustSupport": {
                    "description": "If true, implementations that produce or consume resources SHALL provide \"support\" for the element in some meaningful way.  If false, the element may be ignored and not supported. If false, whether to populate or use the data element in any way is at the discretion of the implementation.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_mustSupport": {
                    "description": "Extensions for mustSupport", 
                    "$ref": "#/definitions/Element"
                }, 
                "isModifier": {
                    "description": "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_isModifier": {
                    "description": "Extensions for isModifier", 
                    "$ref": "#/definitions/Element"
                }, 
                "isModifierReason": {
                    "description": "Explains how that element affects the interpretation of the resource or element that contains it.", 
                    "$ref": "#/definitions/string"
                }, 
                "_isModifierReason": {
                    "description": "Extensions for isModifierReason", 
                    "$ref": "#/definitions/Element"
                }, 
                "isSummary": {
                    "description": "Whether the element should be included if a client requests a search with the parameter _summary=true.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_isSummary": {
                    "description": "Extensions for isSummary", 
                    "$ref": "#/definitions/Element"
                }, 
                "binding": {
                    "description": "Binds to a value set if this element is coded (code, Coding, CodeableConcept, Quantity), or the data types (string, uri).", 
                    "$ref": "#/definitions/ElementDefinition_Binding"
                }, 
                "mapping": {
                    "description": "Identifies a concept from an external specification that roughly corresponds to this element.", 
                    "items": {
                        "$ref": "#/definitions/ElementDefinition_Mapping"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ElementDefinition_Slicing": {
            "description": "Captures constraints on each element within the resource, profile, or extension.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "discriminator": {
                    "description": "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.", 
                    "items": {
                        "$ref": "#/definitions/ElementDefinition_Discriminator"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "ordered": {
                    "description": "If the matching elements have to occur in the same order as defined in the profile.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_ordered": {
                    "description": "Extensions for ordered", 
                    "$ref": "#/definitions/Element"
                }, 
                "rules": {
                    "description": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.", 
                    "enum": [
                        "closed", 
                        "open", 
                        "openAtEnd"
                    ]
                }, 
                "_rules": {
                    "description": "Extensions for rules", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ElementDefinition_Discriminator": {
            "description": "Captures constraints on each element within the resource, profile, or extension.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "How the element value is interpreted when discrimination is evaluated.", 
                    "enum": [
                        "value", 
                        "exists", 
                        "pattern", 
                        "type", 
                        "profile"
                    ]
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "path": {
                    "description": "A FHIRPath expression, using [the simple subset of FHIRPath](fhirpath.html#simple), that is used to identify the element on which discrimination is based.", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ElementDefinition_Base": {
            "description": "Captures constraints on each element within the resource, profile, or extension.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "path": {
                    "description": "The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base.", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "min": {
                    "description": "Minimum cardinality of the base element identified by the path.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_min": {
                    "description": "Extensions for min", 
                    "$ref": "#/definitions/Element"
                }, 
                "max": {
                    "description": "Maximum cardinality of the base element identified by the path.", 
                    "$ref": "#/definitions/string"
                }, 
                "_max": {
                    "description": "Extensions for max", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ElementDefinition_Type": {
            "description": "Captures constraints on each element within the resource, profile, or extension.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide.", 
                    "items": {
                        "$ref": "#/definitions/canonical"
                    }, 
                    "type": "array"
                }, 
                "targetProfile": {
                    "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.", 
                    "items": {
                        "$ref": "#/definitions/canonical"
                    }, 
                    "type": "array"
                }, 
                "aggregation": {
                    "description": "If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.", 
                    "items": {
                        "enum": [
                            "contained", 
                            "referenced", 
                            "bundled"
                        ]
                    }, 
                    "type": "array"
                }, 
                "_aggregation": {
                    "description": "Extensions for aggregation", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "versioning": {
                    "description": "Whether this reference needs to be version specific or version independent, or whether either can be used.", 
                    "enum": [
                        "either", 
                        "independent", 
                        "specific"
                    ]
                }, 
                "_versioning": {
                    "description": "Extensions for versioning", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ElementDefinition_Example": {
            "description": "Captures constraints on each element within the resource, profile, or extension.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "label": {
                    "description": "Describes the purpose of this example amoung the set of examples.", 
                    "$ref": "#/definitions/string"
                }, 
                "_label": {
                    "description": "Extensions for label", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBase64Binary": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCanonical": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueCanonical": {
                    "description": "Extensions for valueCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCode": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_valueCode": {
                    "description": "Extensions for valueCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDate": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueId": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
                    "type": "string"
                }, 
                "_valueId": {
                    "description": "Extensions for valueId", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInstant": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_valueInstant": {
                    "description": "Extensions for valueInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueMarkdown": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueOid": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", 
                    "type": "string"
                }, 
                "_valueOid": {
                    "description": "Extensions for valueOid", 
                    "$ref": "#/definitions/Element"
                }, 
                "valuePositiveInt": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueTime": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_valueTime": {
                    "description": "Extensions for valueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUnsignedInt": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUri": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUri": {
                    "description": "Extensions for valueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUrl": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUrl": {
                    "description": "Extensions for valueUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUuid": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", 
                    "type": "string"
                }, 
                "_valueUuid": {
                    "description": "Extensions for valueUuid", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAddress": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Address"
                }, 
                "valueAge": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Age"
                }, 
                "valueAnnotation": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Annotation"
                }, 
                "valueAttachment": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueCodeableConcept": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableReference": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "valueCoding": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueContactPoint": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/ContactPoint"
                }, 
                "valueCount": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Count"
                }, 
                "valueDistance": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Distance"
                }, 
                "valueDuration": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "valueHumanName": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "valueIdentifier": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "valueMoney": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Money"
                }, 
                "valuePeriod": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Period"
                }, 
                "valueQuantity": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Range"
                }, 
                "valueRatio": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "valueRatioRange": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/RatioRange"
                }, 
                "valueReference": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "valueSampledData": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/SampledData"
                }, 
                "valueSignature": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Signature"
                }, 
                "valueTiming": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "valueContactDetail": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/ContactDetail"
                }, 
                "valueContributor": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Contributor"
                }, 
                "valueDataRequirement": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/DataRequirement"
                }, 
                "valueExpression": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Expression"
                }, 
                "valueParameterDefinition": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/ParameterDefinition"
                }, 
                "valueRelatedArtifact": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/RelatedArtifact"
                }, 
                "valueTriggerDefinition": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/TriggerDefinition"
                }, 
                "valueUsageContext": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/UsageContext"
                }, 
                "valueDosage": {
                    "description": "The actual value for the element, which must be one of the types allowed for this element.", 
                    "$ref": "#/definitions/Dosage"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ElementDefinition_Constraint": {
            "description": "Captures constraints on each element within the resource, profile, or extension.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "key": {
                    "description": "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.", 
                    "$ref": "#/definitions/id"
                }, 
                "_key": {
                    "description": "Extensions for key", 
                    "$ref": "#/definitions/Element"
                }, 
                "requirements": {
                    "description": "Description of why this constraint is necessary or appropriate.", 
                    "$ref": "#/definitions/string"
                }, 
                "_requirements": {
                    "description": "Extensions for requirements", 
                    "$ref": "#/definitions/Element"
                }, 
                "severity": {
                    "description": "Identifies the impact constraint violation has on the conformance of the instance.", 
                    "enum": [
                        "error", 
                        "warning"
                    ]
                }, 
                "_severity": {
                    "description": "Extensions for severity", 
                    "$ref": "#/definitions/Element"
                }, 
                "human": {
                    "description": "Text that can be used to describe the constraint in messages identifying that the constraint has been violated.", 
                    "$ref": "#/definitions/string"
                }, 
                "_human": {
                    "description": "Extensions for human", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "A [FHIRPath](fhirpath.html) expression of constraint that can be executed to see if this constraint is met.", 
                    "$ref": "#/definitions/string"
                }, 
                "_expression": {
                    "description": "Extensions for expression", 
                    "$ref": "#/definitions/Element"
                }, 
                "xpath": {
                    "description": "An XPath expression of constraint that can be executed to see if this constraint is met.", 
                    "$ref": "#/definitions/string"
                }, 
                "_xpath": {
                    "description": "Extensions for xpath", 
                    "$ref": "#/definitions/Element"
                }, 
                "source": {
                    "description": "A reference to the original source of the constraint, for traceability purposes.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ElementDefinition_Binding": {
            "description": "Captures constraints on each element within the resource, profile, or extension.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "strength": {
                    "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.", 
                    "enum": [
                        "required", 
                        "extensible", 
                        "preferred", 
                        "example"
                    ]
                }, 
                "_strength": {
                    "description": "Extensions for strength", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "Describes the intended use of this particular set of codes.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueSet": {
                    "description": "Refers to the value set that identifies the set of codes the binding refers to.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ElementDefinition_Mapping": {
            "description": "Captures constraints on each element within the resource, profile, or extension.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identity": {
                    "description": "An internal reference to the definition of a mapping.", 
                    "$ref": "#/definitions/id"
                }, 
                "_identity": {
                    "description": "Extensions for identity", 
                    "$ref": "#/definitions/Element"
                }, 
                "language": {
                    "description": "Identifies the computable language in which mapping.map is expressed.", 
                    "$ref": "#/definitions/code"
                }, 
                "_language": {
                    "description": "Extensions for language", 
                    "$ref": "#/definitions/Element"
                }, 
                "map": {
                    "description": "Expresses what part of the target specification corresponds to this element.", 
                    "$ref": "#/definitions/string"
                }, 
                "_map": {
                    "description": "Extensions for map", 
                    "$ref": "#/definitions/Element"
                }, 
                "comment": {
                    "description": "Comments that provide information about the mapping or its use.", 
                    "$ref": "#/definitions/string"
                }, 
                "_comment": {
                    "description": "Extensions for comment", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Account_Coverage": {
            "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "coverage": {
                    "description": "The party(s) that contribute to payment (or part of) of the charges applied to this account (including self-pay).\n\nA coverage may only be responsible for specific types of charges, and the sequence of the coverages in the account could be important when processing billing.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "priority": {
                    "description": "The priority of the coverage in the context of this account.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_priority": {
                    "description": "Extensions for priority", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "coverage"
            ], 
            "type": "object"
        }, 
        "Account_Guarantor": {
            "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "party": {
                    "description": "The entity who is responsible.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "onHold": {
                    "description": "A guarantor may be placed on credit hold or otherwise have their role temporarily suspended.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_onHold": {
                    "description": "Extensions for onHold", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "The timeframe during which the guarantor accepts responsibility for the account.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "party"
            ], 
            "type": "object"
        }, 
        "ActivityDefinition_Participant": {
            "description": "This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of participant in the action.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "role": {
                    "description": "The role the participant should play in performing the described action.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ActivityDefinition_DynamicValue": {
            "description": "This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "path": {
                    "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "An expression specifying the value of the customized element.", 
                    "$ref": "#/definitions/Expression"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "expression"
            ], 
            "type": "object"
        }, 
        "AdministrableProductDefinition_Property": {
            "description": "A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A code expressing the type of characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueDate": {
                    "description": "A value for the characteristic.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "A value for the characteristic.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAttachment": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "status": {
                    "description": "The status of characteristic e.g. assigned or pending.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "AdministrableProductDefinition_RouteOfAdministration": {
            "description": "A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Coded expression for the route.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "firstDose": {
                    "description": "The first dose (dose quantity) administered can be specified for the product, using a numerical value and its unit of measurement.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "maxSingleDose": {
                    "description": "The maximum single dose that can be administered, specified using a numerical value and its unit of measurement.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "maxDosePerDay": {
                    "description": "The maximum dose per day (maximum dose quantity to be administered in any one 24-h period) that can be administered.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "maxDosePerTreatmentPeriod": {
                    "description": "The maximum dose per treatment period that can be administered.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "maxTreatmentPeriod": {
                    "description": "The maximum treatment period during which the product can be administered.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "targetSpecies": {
                    "description": "A species for which this route applies.", 
                    "items": {
                        "$ref": "#/definitions/AdministrableProductDefinition_TargetSpecies"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "AdministrableProductDefinition_TargetSpecies": {
            "description": "A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Coded expression for the species.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "withdrawalPeriod": {
                    "description": "A species specific time during which consumption of animal product is not appropriate.", 
                    "items": {
                        "$ref": "#/definitions/AdministrableProductDefinition_WithdrawalPeriod"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "AdministrableProductDefinition_WithdrawalPeriod": {
            "description": "A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "tissue": {
                    "description": "Coded expression for the type of tissue for which the withdrawal period applies, e.g. meat, milk.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "value": {
                    "description": "A value for the time.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "supportingInformation": {
                    "description": "Extra information about the withdrawal period.", 
                    "$ref": "#/definitions/string"
                }, 
                "_supportingInformation": {
                    "description": "Extensions for supportingInformation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "tissue", 
                "value"
            ], 
            "type": "object"
        }, 
        "AdverseEvent_SuspectEntity": {
            "description": "Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "instance": {
                    "description": "Identifies the actual instance of what caused the adverse event.  May be a substance, medication, medication administration, medication statement or a device.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "causality": {
                    "description": "Information on the possible cause of the event.", 
                    "items": {
                        "$ref": "#/definitions/AdverseEvent_Causality"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "instance"
            ], 
            "type": "object"
        }, 
        "AdverseEvent_Causality": {
            "description": "Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "assessment": {
                    "description": "Assessment of if the entity caused the event.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productRelatedness": {
                    "description": "AdverseEvent.suspectEntity.causalityProductRelatedness.", 
                    "$ref": "#/definitions/string"
                }, 
                "_productRelatedness": {
                    "description": "Extensions for productRelatedness", 
                    "$ref": "#/definitions/Element"
                }, 
                "author": {
                    "description": "AdverseEvent.suspectEntity.causalityAuthor.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "method": {
                    "description": "ProbabilityScale | Bayesian | Checklist.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "AllergyIntolerance_Reaction": {
            "description": "Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "substance": {
                    "description": "Identification of the specific substance (or pharmaceutical product) considered to be responsible for the Adverse Reaction event. Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the 'code' and ignore the 'reaction.substance'.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "manifestation": {
                    "description": "Clinical symptoms and/or signs that are observed or associated with the adverse reaction event.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Text description about the reaction as a whole, including details of the manifestation if required.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "onset": {
                    "description": "Record of the date and/or time of the onset of the Reaction.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_onset": {
                    "description": "Extensions for onset", 
                    "$ref": "#/definitions/Element"
                }, 
                "severity": {
                    "description": "Clinical assessment of the severity of the reaction event as a whole, potentially considering multiple different manifestations.", 
                    "$ref": "#/definitions/code"
                }, 
                "_severity": {
                    "description": "Extensions for severity", 
                    "$ref": "#/definitions/Element"
                }, 
                "exposureRoute": {
                    "description": "Identification of the route by which the subject was exposed to the substance.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "note": {
                    "description": "Additional text about the adverse reaction event not captured in other fields.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "manifestation"
            ], 
            "type": "object"
        }, 
        "Appointment_Participant": {
            "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Role of participant in the appointment.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "actor": {
                    "description": "A Person, Location/HealthcareService or Device that is participating in the appointment.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "required": {
                    "description": "Whether this participant is required to be present at the meeting. This covers a use-case where two doctors need to meet to discuss the results for a specific patient, and the patient is not required to be present.", 
                    "$ref": "#/definitions/code"
                }, 
                "_required": {
                    "description": "Extensions for required", 
                    "$ref": "#/definitions/Element"
                }, 
                "status": {
                    "description": "Participation status of the actor.", 
                    "$ref": "#/definitions/code"
                }, 
                "_status": {
                    "description": "Extensions for status", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "Participation period of the actor.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "AuditEvent_Agent": {
            "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Specification of the participation type the user plays when performing the event.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "role": {
                    "description": "The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "who": {
                    "description": "Reference to who this agent is that was involved in the event.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "altId": {
                    "description": "Alternative agent Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g. single sign-on), if available.", 
                    "$ref": "#/definitions/string"
                }, 
                "_altId": {
                    "description": "Extensions for altId", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "Human-meaningful name for the agent.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "requestor": {
                    "description": "Indicator that the user is or is not the requestor, or initiator, for the event being audited.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_requestor": {
                    "description": "Extensions for requestor", 
                    "$ref": "#/definitions/Element"
                }, 
                "location": {
                    "description": "Where the event occurred.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "policy": {
                    "description": "The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.", 
                    "items": {
                        "$ref": "#/definitions/uri"
                    }, 
                    "type": "array"
                }, 
                "_policy": {
                    "description": "Extensions for policy", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "media": {
                    "description": "Type of media involved. Used when the event is about exporting/importing onto media.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "network": {
                    "description": "Logical network location for application activity, if the activity has a network location.", 
                    "$ref": "#/definitions/AuditEvent_Network"
                }, 
                "purposeOfUse": {
                    "description": "The reason (purpose of use), specific to this agent, that was used during the event being recorded.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "AuditEvent_Network": {
            "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "address": {
                    "description": "An identifier for the network access point of the user device for the audit event.", 
                    "$ref": "#/definitions/string"
                }, 
                "_address": {
                    "description": "Extensions for address", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "An identifier for the type of network access point that originated the audit event.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "AuditEvent_Source": {
            "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "site": {
                    "description": "Logical source location within the healthcare enterprise network.  For example, a hospital or other provider location within a multi-entity provider group.", 
                    "$ref": "#/definitions/string"
                }, 
                "_site": {
                    "description": "Extensions for site", 
                    "$ref": "#/definitions/Element"
                }, 
                "observer": {
                    "description": "Identifier of the source where the event was detected.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "type": {
                    "description": "Code specifying the type of source where event originated.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "observer"
            ], 
            "type": "object"
        }, 
        "AuditEvent_Entity": {
            "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "what": {
                    "description": "Identifies a specific instance of the entity. The reference should be version specific.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "type": {
                    "description": "The type of the object that was involved in this audit event.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "role": {
                    "description": "Code representing the role the entity played in the event being audited.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "lifecycle": {
                    "description": "Identifier for the data life-cycle stage for the entity.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "securityLabel": {
                    "description": "Security labels for the identified entity.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "A name of the entity in the audit event.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "Text that describes the entity in more detail.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "query": {
                    "description": "The query parameters for a query-type entities.", 
                    "$ref": "#/definitions/base64Binary"
                }, 
                "_query": {
                    "description": "Extensions for query", 
                    "$ref": "#/definitions/Element"
                }, 
                "detail": {
                    "description": "Tagged value pairs for conveying additional information about the entity.", 
                    "items": {
                        "$ref": "#/definitions/AuditEvent_Detail"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "AuditEvent_Detail": {
            "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of extra detail provided in the value.", 
                    "$ref": "#/definitions/string"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "The  value of the extra detail.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBase64Binary": {
                    "description": "The  value of the extra detail.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "BiologicallyDerivedProduct_Collection": {
            "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "collector": {
                    "description": "Healthcare professional who is performing the collection.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "source": {
                    "description": "The patient or entity, such as a hospital or vendor in the case of a processed/manipulated/manufactured product, providing the product.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "collectedDateTime": {
                    "description": "Time of product collection.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_collectedDateTime": {
                    "description": "Extensions for collectedDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "collectedPeriod": {
                    "description": "Time of product collection.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "BiologicallyDerivedProduct_Processing": {
            "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Description of of processing.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "procedure": {
                    "description": "Procesing code.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "additive": {
                    "description": "Substance added during processing.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "timeDateTime": {
                    "description": "Time of processing.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_timeDateTime": {
                    "description": "Extensions for timeDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "timePeriod": {
                    "description": "Time of processing.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "BiologicallyDerivedProduct_Manipulation": {
            "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Description of manipulation.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "timeDateTime": {
                    "description": "Time of manipulation.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_timeDateTime": {
                    "description": "Extensions for timeDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "timePeriod": {
                    "description": "Time of manipulation.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "BiologicallyDerivedProduct_Storage": {
            "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Description of storage.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "temperature": {
                    "description": "Storage temperature.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_temperature": {
                    "description": "Extensions for temperature", 
                    "$ref": "#/definitions/Element"
                }, 
                "scale": {
                    "description": "Temperature scale used.", 
                    "$ref": "#/definitions/code"
                }, 
                "_scale": {
                    "description": "Extensions for scale", 
                    "$ref": "#/definitions/Element"
                }, 
                "duration": {
                    "description": "Storage timeperiod.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Bundle_Link": {
            "description": "A container for a collection of resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "relation": {
                    "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).", 
                    "$ref": "#/definitions/string"
                }, 
                "_relation": {
                    "description": "Extensions for relation", 
                    "$ref": "#/definitions/Element"
                }, 
                "url": {
                    "description": "The reference details for the link.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Bundle_Entry": {
            "description": "A container for a collection of resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "link": {
                    "description": "A series of links that provide context to this entry.", 
                    "items": {
                        "$ref": "#/definitions/Bundle_Link"
                    }, 
                    "type": "array"
                }, 
                "fullUrl": {
                    "description": "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_fullUrl": {
                    "description": "Extensions for fullUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "resource": {
                    "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type.", 
                    "$ref": "#/definitions/ResourceList"
                }, 
                "search": {
                    "description": "Information about the search process that lead to the creation of this entry.", 
                    "$ref": "#/definitions/Bundle_Search"
                }, 
                "request": {
                    "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.", 
                    "$ref": "#/definitions/Bundle_Request"
                }, 
                "response": {
                    "description": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.", 
                    "$ref": "#/definitions/Bundle_Response"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Bundle_Search": {
            "description": "A container for a collection of resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "mode": {
                    "description": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "score": {
                    "description": "When searching, the server's search ranking score for the entry.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_score": {
                    "description": "Extensions for score", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Bundle_Request": {
            "description": "A container for a collection of resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "method": {
                    "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.", 
                    "$ref": "#/definitions/code"
                }, 
                "_method": {
                    "description": "Extensions for method", 
                    "$ref": "#/definitions/Element"
                }, 
                "url": {
                    "description": "The URL for this entry, relative to the root (the address to which the request is posted).", 
                    "$ref": "#/definitions/uri"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }, 
                "ifNoneMatch": {
                    "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).", 
                    "$ref": "#/definitions/string"
                }, 
                "_ifNoneMatch": {
                    "description": "Extensions for ifNoneMatch", 
                    "$ref": "#/definitions/Element"
                }, 
                "ifModifiedSince": {
                    "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).", 
                    "$ref": "#/definitions/instant"
                }, 
                "_ifModifiedSince": {
                    "description": "Extensions for ifModifiedSince", 
                    "$ref": "#/definitions/Element"
                }, 
                "ifMatch": {
                    "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).", 
                    "$ref": "#/definitions/string"
                }, 
                "_ifMatch": {
                    "description": "Extensions for ifMatch", 
                    "$ref": "#/definitions/Element"
                }, 
                "ifNoneExist": {
                    "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").", 
                    "$ref": "#/definitions/string"
                }, 
                "_ifNoneExist": {
                    "description": "Extensions for ifNoneExist", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Bundle_Response": {
            "description": "A container for a collection of resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "status": {
                    "description": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.", 
                    "$ref": "#/definitions/string"
                }, 
                "_status": {
                    "description": "Extensions for status", 
                    "$ref": "#/definitions/Element"
                }, 
                "location": {
                    "description": "The location header created by processing this operation, populated if the operation returns a location.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_location": {
                    "description": "Extensions for location", 
                    "$ref": "#/definitions/Element"
                }, 
                "etag": {
                    "description": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).", 
                    "$ref": "#/definitions/string"
                }, 
                "_etag": {
                    "description": "Extensions for etag", 
                    "$ref": "#/definitions/Element"
                }, 
                "lastModified": {
                    "description": "The date/time that the resource was modified on the server.", 
                    "$ref": "#/definitions/instant"
                }, 
                "_lastModified": {
                    "description": "Extensions for lastModified", 
                    "$ref": "#/definitions/Element"
                }, 
                "outcome": {
                    "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.", 
                    "$ref": "#/definitions/ResourceList"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_Software": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Name the software is known by.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "The version identifier for the software covered by this statement.", 
                    "$ref": "#/definitions/string"
                }, 
                "_version": {
                    "description": "Extensions for version", 
                    "$ref": "#/definitions/Element"
                }, 
                "releaseDate": {
                    "description": "Date this version of the software was released.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_releaseDate": {
                    "description": "Extensions for releaseDate", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_Implementation": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Information about the specific installation that this capability statement relates to.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "url": {
                    "description": "An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces.", 
                    "$ref": "#/definitions/url"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }, 
                "custodian": {
                    "description": "The organization responsible for the management of the instance and oversight of the data on the server at the specified URL.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_Rest": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "mode": {
                    "description": "Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations.", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "Information about the system's restful capabilities that apply across all applications, such as security.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }, 
                "security": {
                    "description": "Information about security implementation from an interface perspective - what a client needs to know.", 
                    "$ref": "#/definitions/CapabilityStatement_Security"
                }, 
                "resource": {
                    "description": "A specification of the restful capabilities of the solution for a specific resource type.", 
                    "items": {
                        "$ref": "#/definitions/CapabilityStatement_Resource"
                    }, 
                    "type": "array"
                }, 
                "interaction": {
                    "description": "A specification of restful operations supported by the system.", 
                    "items": {
                        "$ref": "#/definitions/CapabilityStatement_Interaction1"
                    }, 
                    "type": "array"
                }, 
                "searchParam": {
                    "description": "Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.", 
                    "items": {
                        "$ref": "#/definitions/CapabilityStatement_SearchParam"
                    }, 
                    "type": "array"
                }, 
                "operation": {
                    "description": "Definition of an operation or a named query together with its parameters and their meaning and type.", 
                    "items": {
                        "$ref": "#/definitions/CapabilityStatement_Operation"
                    }, 
                    "type": "array"
                }, 
                "compartment": {
                    "description": "An absolute URI which is a reference to the definition of a compartment that the system supports. The reference is to a CompartmentDefinition resource by its canonical URL .", 
                    "items": {
                        "$ref": "#/definitions/canonical"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_Security": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "cors": {
                    "description": "Server adds CORS headers when responding to requests - this enables Javascript applications to use the server.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_cors": {
                    "description": "Extensions for cors", 
                    "$ref": "#/definitions/Element"
                }, 
                "service": {
                    "description": "Types of security services that are supported/required by the system.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "General description of how security works.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_Resource": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A type of resource exposed via the restful interface.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "A specification of the profile that describes the solution's overall support for the resource, including any constraints on cardinality, bindings, lengths or other limitations. See further discussion in [Using Profiles](profiling.html#profile-uses).", 
                    "$ref": "#/definitions/canonical"
                }, 
                "supportedProfile": {
                    "description": "A list of profiles that represent different use cases supported by the system. For a server, \"supported by the system\" means the system hosts/produces a set of resources that are conformant to a particular profile, and allows clients that use its services to search using this profile and to find appropriate data. For a client, it means the system will search by this profile and process data according to the guidance implicit in the profile. See further discussion in [Using Profiles](profiling.html#profile-uses).", 
                    "items": {
                        "$ref": "#/definitions/canonical"
                    }, 
                    "type": "array"
                }, 
                "documentation": {
                    "description": "Additional information about the resource type used by the system.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }, 
                "interaction": {
                    "description": "Identifies a restful operation supported by the solution.", 
                    "items": {
                        "$ref": "#/definitions/CapabilityStatement_Interaction"
                    }, 
                    "type": "array"
                }, 
                "versioning": {
                    "description": "This field is set to no-version to specify that the system does not support (server) or use (client) versioning for this resource type. If this has some other value, the server must at least correctly track and populate the versionId meta-property on resources. If the value is 'versioned-update', then the server supports all the versioning features, including using e-tags for version integrity in the API.", 
                    "$ref": "#/definitions/code"
                }, 
                "_versioning": {
                    "description": "Extensions for versioning", 
                    "$ref": "#/definitions/Element"
                }, 
                "readHistory": {
                    "description": "A flag for whether the server is able to return past versions as part of the vRead operation.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_readHistory": {
                    "description": "Extensions for readHistory", 
                    "$ref": "#/definitions/Element"
                }, 
                "updateCreate": {
                    "description": "A flag to indicate that the server allows or needs to allow the client to create new identities on the server (that is, the client PUTs to a location where there is no existing resource). Allowing this operation means that the server allows the client to create new identities on the server.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_updateCreate": {
                    "description": "Extensions for updateCreate", 
                    "$ref": "#/definitions/Element"
                }, 
                "conditionalCreate": {
                    "description": "A flag that indicates that the server supports conditional create.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_conditionalCreate": {
                    "description": "Extensions for conditionalCreate", 
                    "$ref": "#/definitions/Element"
                }, 
                "conditionalRead": {
                    "description": "A code that indicates how the server supports conditional read.", 
                    "$ref": "#/definitions/code"
                }, 
                "_conditionalRead": {
                    "description": "Extensions for conditionalRead", 
                    "$ref": "#/definitions/Element"
                }, 
                "conditionalUpdate": {
                    "description": "A flag that indicates that the server supports conditional update.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_conditionalUpdate": {
                    "description": "Extensions for conditionalUpdate", 
                    "$ref": "#/definitions/Element"
                }, 
                "conditionalDelete": {
                    "description": "A code that indicates how the server supports conditional delete.", 
                    "$ref": "#/definitions/code"
                }, 
                "_conditionalDelete": {
                    "description": "Extensions for conditionalDelete", 
                    "$ref": "#/definitions/Element"
                }, 
                "referencePolicy": {
                    "description": "A set of flags that defines how references are supported.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_referencePolicy": {
                    "description": "Extensions for referencePolicy", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "searchInclude": {
                    "description": "A list of _include values supported by the server.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_searchInclude": {
                    "description": "Extensions for searchInclude", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "searchRevInclude": {
                    "description": "A list of _revinclude (reverse include) values supported by the server.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_searchRevInclude": {
                    "description": "Extensions for searchRevInclude", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "searchParam": {
                    "description": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.", 
                    "items": {
                        "$ref": "#/definitions/CapabilityStatement_SearchParam"
                    }, 
                    "type": "array"
                }, 
                "operation": {
                    "description": "Definition of an operation or a named query together with its parameters and their meaning and type. Consult the definition of the operation for details about how to invoke the operation, and the parameters.", 
                    "items": {
                        "$ref": "#/definitions/CapabilityStatement_Operation"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_Interaction": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Coded identifier of the operation, supported by the system resource.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre-authorized certificates only'.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_SearchParam": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name of the search parameter used in the interface.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "definition": {
                    "description": "An absolute URI that is a formal reference to where this parameter was first defined, so that a client can be confident of the meaning of the search parameter (a reference to [SearchParameter.url](searchparameter-definitions.html#SearchParameter.url)). This element SHALL be populated if the search parameter refers to a SearchParameter defined by the FHIR core specification or externally defined IGs.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "type": {
                    "description": "The type of value a search parameter refers to, and how the content is interpreted.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_Operation": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name of the operation or query. For an operation, this is the name  prefixed with $ and used in the URL. For a query, this is the name used in the _query parameter when the query is called.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "definition": {
                    "description": "Where the formal definition can be found. If a server references the base definition of an Operation (i.e. from the specification itself such as ```http://hl7.org/fhir/OperationDefinition/ValueSet-expand```), that means it supports the full capabilities of the operation - e.g. both GET and POST invocation.  If it only supports a subset, it must define its own custom [OperationDefinition](operationdefinition.html#) with a 'base' of the original OperationDefinition.  The custom definition would describe the specific subset of functionality supported.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "documentation": {
                    "description": "Documentation that describes anything special about the operation behavior, possibly detailing different behavior for system, type and instance-level invocation of the operation.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "definition"
            ], 
            "type": "object"
        }, 
        "CapabilityStatement_Interaction1": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A coded identifier of the operation, supported by the system.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "Guidance specific to the implementation of this operation, such as limitations on the kind of transactions allowed, or information about system wide search is implemented.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_Messaging": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "endpoint": {
                    "description": "An endpoint (network accessible address) to which messages and/or replies are to be sent.", 
                    "items": {
                        "$ref": "#/definitions/CapabilityStatement_Endpoint"
                    }, 
                    "type": "array"
                }, 
                "reliableCache": {
                    "description": "Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender).", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_reliableCache": {
                    "description": "Extensions for reliableCache", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the capability statement.  For example, the process for becoming an authorized messaging exchange partner.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }, 
                "supportedMessage": {
                    "description": "References to message definitions for messages this system can send or receive.", 
                    "items": {
                        "$ref": "#/definitions/CapabilityStatement_SupportedMessage"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CapabilityStatement_Endpoint": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "protocol": {
                    "description": "A list of the messaging transport protocol(s) identifiers, supported by this endpoint.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "address": {
                    "description": "The network address of the endpoint. For solutions that do not use network addresses for routing, it can be just an identifier.", 
                    "$ref": "#/definitions/url"
                }, 
                "_address": {
                    "description": "Extensions for address", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "protocol"
            ], 
            "type": "object"
        }, 
        "CapabilityStatement_SupportedMessage": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "mode": {
                    "description": "The mode of this event declaration - whether application is sender or receiver.", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "definition": {
                    "description": "Points to a message definition that identifies the messaging event, message structure, allowed responses, etc.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "definition"
            ], 
            "type": "object"
        }, 
        "CapabilityStatement_Document": {
            "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "mode": {
                    "description": "Mode of this document declaration - whether an application is a producer or consumer.", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "A description of how the application supports or uses the specified document profile.  For example, when documents are created, what action is taken with consumed documents, etc.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "A profile on the document Bundle that constrains which resources are present, and their contents.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "profile"
            ], 
            "type": "object"
        }, 
        "CarePlan_Activity": {
            "description": "Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "outcomeCodeableConcept": {
                    "description": "Identifies the outcome at the point when the status of the activity is assessed.  For example, the outcome of an education activity could be patient understands (or not).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "outcomeReference": {
                    "description": "Details of the outcome or action resulting from the activity.  The reference to an \"event\" resource, such as Procedure or Encounter or Observation, is the result/outcome of the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR using the CarePlan.activity.reference (a reference to a \u201crequest\u201d resource).", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "progress": {
                    "description": "Notes about the adherence/status/progress of the activity.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }, 
                "reference": {
                    "description": "The details of the proposed activity represented in a specific resource.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "detail": {
                    "description": "A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn't know about specific resources such as procedure etc.", 
                    "$ref": "#/definitions/CarePlan_Detail"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CarePlan_Detail": {
            "description": "Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "kind": {
                    "description": "A description of the kind of resource the in-line definition of a care plan activity is representing.  The CarePlan.activity.detail is an in-line definition when a resource is not referenced using CarePlan.activity.reference.  For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest.", 
                    "$ref": "#/definitions/code"
                }, 
                "_kind": {
                    "description": "Extensions for kind", 
                    "$ref": "#/definitions/Element"
                }, 
                "instantiatesCanonical": {
                    "description": "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.", 
                    "items": {
                        "$ref": "#/definitions/canonical"
                    }, 
                    "type": "array"
                }, 
                "instantiatesUri": {
                    "description": "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.", 
                    "items": {
                        "$ref": "#/definitions/uri"
                    }, 
                    "type": "array"
                }, 
                "_instantiatesUri": {
                    "description": "Extensions for instantiatesUri", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Detailed description of the type of planned activity; e.g. what lab test, what procedure, what kind of encounter.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reasonCode": {
                    "description": "Provides the rationale that drove the inclusion of this particular activity as part of the plan or the reason why the activity was prohibited.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "reasonReference": {
                    "description": "Indicates another resource, such as the health condition(s), whose existence justifies this request and drove the inclusion of this particular activity as part of the plan.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "goal": {
                    "description": "Internal reference that identifies the goals that this activity is intended to contribute towards meeting.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "status": {
                    "description": "Identifies what progress is being made for the specific activity.", 
                    "$ref": "#/definitions/code"
                }, 
                "_status": {
                    "description": "Extensions for status", 
                    "$ref": "#/definitions/Element"
                }, 
                "statusReason": {
                    "description": "Provides reason why the activity isn't yet started, is on hold, was cancelled, etc.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "doNotPerform": {
                    "description": "If true, indicates that the described activity is one that must NOT be engaged in when following the plan.  If false, or missing, indicates that the described activity is one that should be engaged in when following the plan.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_doNotPerform": {
                    "description": "Extensions for doNotPerform", 
                    "$ref": "#/definitions/Element"
                }, 
                "scheduledTiming": {
                    "description": "The period, timing or frequency upon which the described activity is to occur.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "scheduledPeriod": {
                    "description": "The period, timing or frequency upon which the described activity is to occur.", 
                    "$ref": "#/definitions/Period"
                }, 
                "scheduledString": {
                    "description": "The period, timing or frequency upon which the described activity is to occur.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_scheduledString": {
                    "description": "Extensions for scheduledString", 
                    "$ref": "#/definitions/Element"
                }, 
                "location": {
                    "description": "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "performer": {
                    "description": "Identifies who's expected to be involved in the activity.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "productCodeableConcept": {
                    "description": "Identifies the food, drug or other product to be consumed or supplied in the activity.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productReference": {
                    "description": "Identifies the food, drug or other product to be consumed or supplied in the activity.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "dailyAmount": {
                    "description": "Identifies the quantity expected to be consumed in a given day.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "quantity": {
                    "description": "Identifies the quantity expected to be supplied, administered or consumed by the subject.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "description": {
                    "description": "This provides a textual description of constraints on the intended activity occurrence, including relation to other activities.  It may also include objectives, pre-conditions and end-conditions.  Finally, it may convey specifics about the activity such as body site, method, route, etc.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CareTeam_Participant": {
            "description": "The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "role": {
                    "description": "Indicates specific responsibility of an individual within the care team, such as \"Primary care physician\", \"Trained social worker counselor\", \"Caregiver\", etc.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "member": {
                    "description": "The specific person or organization who is participating/expected to participate in the care team.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "onBehalfOf": {
                    "description": "The organization of the practitioner.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "period": {
                    "description": "Indicates when the specific member or organization did (or is intended to) come into effect and end.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CatalogEntry_RelatedEntry": {
            "description": "Catalog entries are wrappers that contextualize items included in a catalog.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "relationtype": {
                    "description": "The type of relation to the related item: child, parent, packageContent, containerPackage, usedIn, uses, requires, etc.", 
                    "$ref": "#/definitions/code"
                }, 
                "_relationtype": {
                    "description": "Extensions for relationtype", 
                    "$ref": "#/definitions/Element"
                }, 
                "item": {
                    "description": "The reference to the related item.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "item"
            ], 
            "type": "object"
        }, 
        "ChargeItem_Performer": {
            "description": "The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "function": {
                    "description": "Describes the type of performance or participation(e.g. primary surgeon, anesthesiologiest, etc.).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "actor": {
                    "description": "The device, practitioner, etc. who performed or participated in the service.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "actor"
            ], 
            "type": "object"
        }, 
        "ChargeItemDefinition_Applicability": {
            "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "A brief, natural language description of the condition that effectively communicates the intended semantics.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "language": {
                    "description": "The media type of the language for the expression, e.g. \"text/cql\" for Clinical Query Language expressions or \"text/fhirpath\" for FHIRPath expressions.", 
                    "$ref": "#/definitions/string"
                }, 
                "_language": {
                    "description": "Extensions for language", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "An expression that returns true or false, indicating whether the condition is satisfied. When using FHIRPath expressions, the %context environment variable must be replaced at runtime with the ChargeItem resource to which this definition is applied.", 
                    "$ref": "#/definitions/string"
                }, 
                "_expression": {
                    "description": "Extensions for expression", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ChargeItemDefinition_PropertyGroup": {
            "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "applicability": {
                    "description": "Expressions that describe applicability criteria for the priceComponent.", 
                    "items": {
                        "$ref": "#/definitions/ChargeItemDefinition_Applicability"
                    }, 
                    "type": "array"
                }, 
                "priceComponent": {
                    "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the prices have been calculated.", 
                    "items": {
                        "$ref": "#/definitions/ChargeItemDefinition_PriceComponent"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ChargeItemDefinition_PriceComponent": {
            "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "This code identifies the type of the component.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A code that identifies the component. Codes may be used to differentiate between kinds of taxes, surcharges, discounts etc.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "factor": {
                    "description": "The factor that has been applied on the base price for calculating this component.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "amount": {
                    "description": "The amount calculated for this component.", 
                    "$ref": "#/definitions/Money"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_Summary": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "style": {
                    "description": "Format for display of the citation.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "text": {
                    "description": "The human-readable display of the citation.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_Classification": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The kind of classifier (e.g. publication type, keyword).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "classifier": {
                    "description": "The specific classification value.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_StatusDate": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "activity": {
                    "description": "Classification of the status.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "actual": {
                    "description": "Either occurred or expected.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_actual": {
                    "description": "Extensions for actual", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "When the status started and/or ended.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "period", 
                "activity"
            ], 
            "type": "object"
        }, 
        "Citation_RelatesTo": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "relationshipType": {
                    "description": "How the Citation resource relates to the target artifact.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "targetClassifier": {
                    "description": "The clasification of the related artifact.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "targetUri": {
                    "description": "The article or artifact that the Citation Resource is related to.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_targetUri": {
                    "description": "Extensions for targetUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "targetIdentifier": {
                    "description": "The article or artifact that the Citation Resource is related to.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "targetReference": {
                    "description": "The article or artifact that the Citation Resource is related to.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "targetAttachment": {
                    "description": "The article or artifact that the Citation Resource is related to.", 
                    "$ref": "#/definitions/Attachment"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "relationshipType"
            ], 
            "type": "object"
        }, 
        "Citation_CitedArtifact": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "A formal identifier that is used to identify this citation when it is represented in other formats, or referenced in a specification, model, design or an instance.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "relatedIdentifier": {
                    "description": "A formal identifier that is used to identify things closely related to this citation.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "dateAccessed": {
                    "description": "When the cited artifact was accessed.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_dateAccessed": {
                    "description": "Extensions for dateAccessed", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "The defined version of the cited artifact.", 
                    "$ref": "#/definitions/Citation_Version"
                }, 
                "currentState": {
                    "description": "The status of the cited artifact.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "statusDate": {
                    "description": "An effective date or period for a status of the cited artifact.", 
                    "items": {
                        "$ref": "#/definitions/Citation_StatusDate1"
                    }, 
                    "type": "array"
                }, 
                "title": {
                    "description": "The title details of the article or artifact.", 
                    "items": {
                        "$ref": "#/definitions/Citation_Title"
                    }, 
                    "type": "array"
                }, 
                "abstract": {
                    "description": "Summary of the article or artifact.", 
                    "items": {
                        "$ref": "#/definitions/Citation_Abstract"
                    }, 
                    "type": "array"
                }, 
                "part": {
                    "description": "The component of the article or artifact.", 
                    "$ref": "#/definitions/Citation_Part"
                }, 
                "relatesTo": {
                    "description": "The artifact related to the cited artifact.", 
                    "items": {
                        "$ref": "#/definitions/Citation_RelatesTo1"
                    }, 
                    "type": "array"
                }, 
                "publicationForm": {
                    "description": "If multiple, used to represent alternative forms of the article that are not separate citations.", 
                    "items": {
                        "$ref": "#/definitions/Citation_PublicationForm"
                    }, 
                    "type": "array"
                }, 
                "webLocation": {
                    "description": "Used for any URL for the article or artifact cited.", 
                    "items": {
                        "$ref": "#/definitions/Citation_WebLocation"
                    }, 
                    "type": "array"
                }, 
                "classification": {
                    "description": "The assignment to an organizing scheme.", 
                    "items": {
                        "$ref": "#/definitions/Citation_Classification1"
                    }, 
                    "type": "array"
                }, 
                "contributorship": {
                    "description": "This element is used to list authors and other contributors, their contact information, specific contributions, and summary statements.", 
                    "$ref": "#/definitions/Citation_Contributorship"
                }, 
                "note": {
                    "description": "Any additional information or content for the article or artifact.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_Version": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "The version number or other version identifier.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "baseCitation": {
                    "description": "Citation for the main version of the cited artifact.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_StatusDate1": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "activity": {
                    "description": "Classification of the status.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "actual": {
                    "description": "Either occurred or expected.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_actual": {
                    "description": "Extensions for actual", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "When the status started and/or ended.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "period", 
                "activity"
            ], 
            "type": "object"
        }, 
        "Citation_Title": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Used to express the reason or specific aspect for the title.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "language": {
                    "description": "Used to express the specific language.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "text": {
                    "description": "The title of the article or artifact.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_Abstract": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Used to express the reason or specific aspect for the abstract.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "language": {
                    "description": "Used to express the specific language.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "text": {
                    "description": "Abstract content.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "copyright": {
                    "description": "Copyright notice for the abstract.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_copyright": {
                    "description": "Extensions for copyright", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_Part": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The kind of component.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "value": {
                    "description": "The specification of the component.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "baseCitation": {
                    "description": "The citation for the full article or artifact.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_RelatesTo1": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "relationshipType": {
                    "description": "How the cited artifact relates to the target artifact.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "targetClassifier": {
                    "description": "The clasification of the related artifact.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "targetUri": {
                    "description": "The article or artifact that the cited artifact is related to.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_targetUri": {
                    "description": "Extensions for targetUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "targetIdentifier": {
                    "description": "The article or artifact that the cited artifact is related to.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "targetReference": {
                    "description": "The article or artifact that the cited artifact is related to.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "targetAttachment": {
                    "description": "The article or artifact that the cited artifact is related to.", 
                    "$ref": "#/definitions/Attachment"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "relationshipType"
            ], 
            "type": "object"
        }, 
        "Citation_PublicationForm": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "publishedIn": {
                    "description": "The collection the cited article or artifact is published in.", 
                    "$ref": "#/definitions/Citation_PublishedIn"
                }, 
                "periodicRelease": {
                    "description": "The specific issue in which the cited article resides.", 
                    "$ref": "#/definitions/Citation_PeriodicRelease"
                }, 
                "articleDate": {
                    "description": "The date the article was added to the database, or the date the article was released (which may differ from the journal issue publication date).", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_articleDate": {
                    "description": "Extensions for articleDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "lastRevisionDate": {
                    "description": "The date the article was last revised or updated in the database.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_lastRevisionDate": {
                    "description": "Extensions for lastRevisionDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "language": {
                    "description": "Language in which this form of the article is published.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "accessionNumber": {
                    "description": "Entry number or identifier for inclusion in a database.", 
                    "$ref": "#/definitions/string"
                }, 
                "_accessionNumber": {
                    "description": "Extensions for accessionNumber", 
                    "$ref": "#/definitions/Element"
                }, 
                "pageString": {
                    "description": "Used for full display of pagination.", 
                    "$ref": "#/definitions/string"
                }, 
                "_pageString": {
                    "description": "Extensions for pageString", 
                    "$ref": "#/definitions/Element"
                }, 
                "firstPage": {
                    "description": "Used for isolated representation of first page.", 
                    "$ref": "#/definitions/string"
                }, 
                "_firstPage": {
                    "description": "Extensions for firstPage", 
                    "$ref": "#/definitions/Element"
                }, 
                "lastPage": {
                    "description": "Used for isolated representation of last page.", 
                    "$ref": "#/definitions/string"
                }, 
                "_lastPage": {
                    "description": "Extensions for lastPage", 
                    "$ref": "#/definitions/Element"
                }, 
                "pageCount": {
                    "description": "Actual or approximate number of pages or screens.", 
                    "$ref": "#/definitions/string"
                }, 
                "_pageCount": {
                    "description": "Extensions for pageCount", 
                    "$ref": "#/definitions/Element"
                }, 
                "copyright": {
                    "description": "Copyright notice for the full article or artifact.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_copyright": {
                    "description": "Extensions for copyright", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_PublishedIn": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Kind of container (e.g. Periodical, database, or book).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "identifier": {
                    "description": "Journal identifiers include ISSN, ISO Abbreviation and NLMuniqueID; Book identifiers include ISBN.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "title": {
                    "description": "Name of the database or title of the book or journal.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "publisher": {
                    "description": "Name of the publisher.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "publisherLocation": {
                    "description": "Geographic location of the publisher.", 
                    "$ref": "#/definitions/string"
                }, 
                "_publisherLocation": {
                    "description": "Extensions for publisherLocation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_PeriodicRelease": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "citedMedium": {
                    "description": "Describes the form of the medium cited. Common codes are \"Internet\" or \"Print\".", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "volume": {
                    "description": "Volume number of journal in which the article is published.", 
                    "$ref": "#/definitions/string"
                }, 
                "_volume": {
                    "description": "Extensions for volume", 
                    "$ref": "#/definitions/Element"
                }, 
                "issue": {
                    "description": "Issue, part or supplement of journal in which the article is published.", 
                    "$ref": "#/definitions/string"
                }, 
                "_issue": {
                    "description": "Extensions for issue", 
                    "$ref": "#/definitions/Element"
                }, 
                "dateOfPublication": {
                    "description": "Defining the date on which the issue of the journal was published.", 
                    "$ref": "#/definitions/Citation_DateOfPublication"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_DateOfPublication": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "date": {
                    "description": "Date on which the issue of the journal was published.", 
                    "$ref": "#/definitions/date"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "year": {
                    "description": "Year on which the issue of the journal was published.", 
                    "$ref": "#/definitions/string"
                }, 
                "_year": {
                    "description": "Extensions for year", 
                    "$ref": "#/definitions/Element"
                }, 
                "month": {
                    "description": "Month on which the issue of the journal was published.", 
                    "$ref": "#/definitions/string"
                }, 
                "_month": {
                    "description": "Extensions for month", 
                    "$ref": "#/definitions/Element"
                }, 
                "day": {
                    "description": "Day on which the issue of the journal was published.", 
                    "$ref": "#/definitions/string"
                }, 
                "_day": {
                    "description": "Extensions for day", 
                    "$ref": "#/definitions/Element"
                }, 
                "season": {
                    "description": "Spring, Summer, Fall/Autumn, Winter.", 
                    "$ref": "#/definitions/string"
                }, 
                "_season": {
                    "description": "Extensions for season", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "Text representation of the date of which the issue of the journal was published.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_WebLocation": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Code the reason for different URLs, e.g. abstract and full-text.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "url": {
                    "description": "The specific URL.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_Classification1": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The kind of classifier (e.g. publication type, keyword).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "classifier": {
                    "description": "The specific classification value.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "whoClassified": {
                    "description": "Provenance and copyright of classification.", 
                    "$ref": "#/definitions/Citation_WhoClassified"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_WhoClassified": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "person": {
                    "description": "Person who created the classification.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "organization": {
                    "description": "Organization who created the classification.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "publisher": {
                    "description": "The publisher of the classification, not the publisher of the article or artifact being cited.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "classifierCopyright": {
                    "description": "Rights management statement for the classification.", 
                    "$ref": "#/definitions/string"
                }, 
                "_classifierCopyright": {
                    "description": "Extensions for classifierCopyright", 
                    "$ref": "#/definitions/Element"
                }, 
                "freeToShare": {
                    "description": "Acceptable to re-use the classification.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_freeToShare": {
                    "description": "Extensions for freeToShare", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_Contributorship": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "complete": {
                    "description": "Indicates if the list includes all authors and/or contributors.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_complete": {
                    "description": "Extensions for complete", 
                    "$ref": "#/definitions/Element"
                }, 
                "entry": {
                    "description": "An individual entity named in the author list or contributor list.", 
                    "items": {
                        "$ref": "#/definitions/Citation_Entry"
                    }, 
                    "type": "array"
                }, 
                "summary": {
                    "description": "Used to record a display of the author/contributor list without separate coding for each list member.", 
                    "items": {
                        "$ref": "#/definitions/Citation_Summary1"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_Entry": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "A name associated with the individual.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "initials": {
                    "description": "Initials for forename.", 
                    "$ref": "#/definitions/string"
                }, 
                "_initials": {
                    "description": "Extensions for initials", 
                    "$ref": "#/definitions/Element"
                }, 
                "collectiveName": {
                    "description": "Used for collective or corporate name as an author.", 
                    "$ref": "#/definitions/string"
                }, 
                "_collectiveName": {
                    "description": "Extensions for collectiveName", 
                    "$ref": "#/definitions/Element"
                }, 
                "identifier": {
                    "description": "Unique person identifier.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "affiliationInfo": {
                    "description": "Organization affiliated with the entity.", 
                    "items": {
                        "$ref": "#/definitions/Citation_AffiliationInfo"
                    }, 
                    "type": "array"
                }, 
                "address": {
                    "description": "Physical mailing address for the author or contributor.", 
                    "items": {
                        "$ref": "#/definitions/Address"
                    }, 
                    "type": "array"
                }, 
                "telecom": {
                    "description": "Email or telephone contact methods for the author or contributor.", 
                    "items": {
                        "$ref": "#/definitions/ContactPoint"
                    }, 
                    "type": "array"
                }, 
                "contributionType": {
                    "description": "This element identifies the specific nature of an individual\u2019s contribution with respect to the cited work.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "role": {
                    "description": "The role of the contributor (e.g. author, editor, reviewer).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "contributionInstance": {
                    "description": "Contributions with accounting for time or number.", 
                    "items": {
                        "$ref": "#/definitions/Citation_ContributionInstance"
                    }, 
                    "type": "array"
                }, 
                "correspondingContact": {
                    "description": "Indication of which contributor is the corresponding contributor for the role.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_correspondingContact": {
                    "description": "Extensions for correspondingContact", 
                    "$ref": "#/definitions/Element"
                }, 
                "listOrder": {
                    "description": "Used to code order of authors.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_listOrder": {
                    "description": "Extensions for listOrder", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_AffiliationInfo": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "affiliation": {
                    "description": "Display for the organization.", 
                    "$ref": "#/definitions/string"
                }, 
                "_affiliation": {
                    "description": "Extensions for affiliation", 
                    "$ref": "#/definitions/Element"
                }, 
                "role": {
                    "description": "Role within the organization, such as professional title.", 
                    "$ref": "#/definitions/string"
                }, 
                "_role": {
                    "description": "Extensions for role", 
                    "$ref": "#/definitions/Element"
                }, 
                "identifier": {
                    "description": "Identifier for the organization.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Citation_ContributionInstance": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The specific contribution.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "time": {
                    "description": "The time that the contribution was made.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_time": {
                    "description": "Extensions for time", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "Citation_Summary1": {
            "description": "The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Used most commonly to express an author list or a contributorship statement.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "style": {
                    "description": "The format for the display string.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "source": {
                    "description": "Used to code the producer or rule for creating the display string.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "value": {
                    "description": "The display string for the author list, contributor list, or contributorship statement.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Claim_Related": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "claim": {
                    "description": "Reference to a related claim.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "relationship": {
                    "description": "A code to convey how the claims are related.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reference": {
                    "description": "An alternate organizational reference to the case or file to which this particular claim pertains.", 
                    "$ref": "#/definitions/Identifier"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Claim_Payee": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of Party to be reimbursed: subscriber, provider, other.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "party": {
                    "description": "Reference to the individual or organization to whom any payment will be made.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "Claim_CareTeam": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify care team entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "provider": {
                    "description": "Member of the team who provided the product or service.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "responsible": {
                    "description": "The party who is billing and/or responsible for the claimed products or services.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_responsible": {
                    "description": "Extensions for responsible", 
                    "$ref": "#/definitions/Element"
                }, 
                "role": {
                    "description": "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "qualification": {
                    "description": "The qualification of the practitioner which is applicable for this service.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "provider"
            ], 
            "type": "object"
        }, 
        "Claim_SupportingInfo": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify supporting information entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "category": {
                    "description": "The general class of the information supplied: information; exception; accident, employment; onset, etc.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "code": {
                    "description": "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "timingDate": {
                    "description": "The date when or period to which this information refers.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_timingDate": {
                    "description": "Extensions for timingDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "timingPeriod": {
                    "description": "The date when or period to which this information refers.", 
                    "$ref": "#/definitions/Period"
                }, 
                "valueBoolean": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueQuantity": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueAttachment": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueReference": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "reason": {
                    "description": "Provides the reason in the situation where a reason code is required in addition to the content.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "category"
            ], 
            "type": "object"
        }, 
        "Claim_Diagnosis": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify diagnosis entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "diagnosisCodeableConcept": {
                    "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "diagnosisReference": {
                    "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "type": {
                    "description": "When the condition was observed or the relative ranking.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "onAdmission": {
                    "description": "Indication of whether the diagnosis was present on admission to a facility.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "packageCode": {
                    "description": "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Claim_Procedure": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify procedure entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "When the condition was observed or the relative ranking.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "date": {
                    "description": "Date and optionally time the procedure was performed.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "procedureCodeableConcept": {
                    "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "procedureReference": {
                    "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "udi": {
                    "description": "Unique Device Identifiers associated with this line item.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Claim_Insurance": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "focal": {
                    "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_focal": {
                    "description": "Extensions for focal", 
                    "$ref": "#/definitions/Element"
                }, 
                "identifier": {
                    "description": "The business identifier to be used when the claim is sent for adjudication against this insurance policy.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "coverage": {
                    "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "businessArrangement": {
                    "description": "A business agreement number established between the provider and the insurer for special business processing purposes.", 
                    "$ref": "#/definitions/string"
                }, 
                "_businessArrangement": {
                    "description": "Extensions for businessArrangement", 
                    "$ref": "#/definitions/Element"
                }, 
                "preAuthRef": {
                    "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_preAuthRef": {
                    "description": "Extensions for preAuthRef", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "claimResponse": {
                    "description": "The result of the adjudication of the line items for the Coverage specified in this insurance.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "coverage"
            ], 
            "type": "object"
        }, 
        "Claim_Accident": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "date": {
                    "description": "Date of an accident event  related to the products and services contained in the claim.", 
                    "$ref": "#/definitions/date"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "locationAddress": {
                    "description": "The physical location of the accident event.", 
                    "$ref": "#/definitions/Address"
                }, 
                "locationReference": {
                    "description": "The physical location of the accident event.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Claim_Item": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify item entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "careTeamSequence": {
                    "description": "CareTeam members related to this service or product.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_careTeamSequence": {
                    "description": "Extensions for careTeamSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "diagnosisSequence": {
                    "description": "Diagnosis applicable for this service or product.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_diagnosisSequence": {
                    "description": "Extensions for diagnosisSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "procedureSequence": {
                    "description": "Procedures applicable for this service or product.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_procedureSequence": {
                    "description": "Extensions for procedureSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "informationSequence": {
                    "description": "Exceptions, special conditions and supporting information applicable for this service or product.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_informationSequence": {
                    "description": "Extensions for informationSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "revenue": {
                    "description": "The type of revenue or cost center providing the product and/or service.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "category": {
                    "description": "Code to identify the general type of benefits under which products and services are provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "programCode": {
                    "description": "Identifies the program under which this may be recovered.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "servicedDate": {
                    "description": "The date or dates when the service or product was supplied, performed or completed.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_servicedDate": {
                    "description": "Extensions for servicedDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "servicedPeriod": {
                    "description": "The date or dates when the service or product was supplied, performed or completed.", 
                    "$ref": "#/definitions/Period"
                }, 
                "locationCodeableConcept": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "locationAddress": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/Address"
                }, 
                "locationReference": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "udi": {
                    "description": "Unique Device Identifiers associated with this line item.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "bodySite": {
                    "description": "Physical service site on the patient (limb, tooth, etc.).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "subSite": {
                    "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "encounter": {
                    "description": "The Encounters during which this Claim was created or to which the creation of this record is tightly associated.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "detail": {
                    "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.", 
                    "items": {
                        "$ref": "#/definitions/Claim_Detail"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "productOrService"
            ], 
            "type": "object"
        }, 
        "Claim_Detail": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify item entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "revenue": {
                    "description": "The type of revenue or cost center providing the product and/or service.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "category": {
                    "description": "Code to identify the general type of benefits under which products and services are provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "programCode": {
                    "description": "Identifies the program under which this may be recovered.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "udi": {
                    "description": "Unique Device Identifiers associated with this line item.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "subDetail": {
                    "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.", 
                    "items": {
                        "$ref": "#/definitions/Claim_SubDetail"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "productOrService"
            ], 
            "type": "object"
        }, 
        "Claim_SubDetail": {
            "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify item entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "revenue": {
                    "description": "The type of revenue or cost center providing the product and/or service.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "category": {
                    "description": "Code to identify the general type of benefits under which products and services are provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "programCode": {
                    "description": "Identifies the program under which this may be recovered.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "udi": {
                    "description": "Unique Device Identifiers associated with this line item.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_Item": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "itemSequence": {
                    "description": "A number to uniquely reference the claim item entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_itemSequence": {
                    "description": "Extensions for itemSequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_Adjudication"
                    }, 
                    "type": "array"
                }, 
                "detail": {
                    "description": "A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_Detail"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "adjudication"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_Adjudication": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reason": {
                    "description": "A code supporting the understanding of the adjudication result and explaining variance from expected amount.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "amount": {
                    "description": "Monetary amount associated with the category.", 
                    "$ref": "#/definitions/Money"
                }, 
                "value": {
                    "description": "A non-monetary value associated with the category. Mutually exclusive to the amount element above.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "category"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_Detail": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "detailSequence": {
                    "description": "A number to uniquely reference the claim detail entry.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_detailSequence": {
                    "description": "Extensions for detailSequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_Adjudication"
                    }, 
                    "type": "array"
                }, 
                "subDetail": {
                    "description": "A sub-detail adjudication of a simple product or service.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_SubDetail"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "adjudication"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_SubDetail": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "subDetailSequence": {
                    "description": "A number to uniquely reference the claim sub-detail entry.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_subDetailSequence": {
                    "description": "Extensions for subDetailSequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_Adjudication"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ClaimResponse_AddItem": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "itemSequence": {
                    "description": "Claim items which this service line is intended to replace.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_itemSequence": {
                    "description": "Extensions for itemSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "detailSequence": {
                    "description": "The sequence number of the details within the claim item which this line is intended to replace.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_detailSequence": {
                    "description": "Extensions for detailSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "subdetailSequence": {
                    "description": "The sequence number of the sub-details within the details within the claim item which this line is intended to replace.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_subdetailSequence": {
                    "description": "Extensions for subdetailSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "provider": {
                    "description": "The providers who are authorized for the services rendered to the patient.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "programCode": {
                    "description": "Identifies the program under which this may be recovered.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "servicedDate": {
                    "description": "The date or dates when the service or product was supplied, performed or completed.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_servicedDate": {
                    "description": "Extensions for servicedDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "servicedPeriod": {
                    "description": "The date or dates when the service or product was supplied, performed or completed.", 
                    "$ref": "#/definitions/Period"
                }, 
                "locationCodeableConcept": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "locationAddress": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/Address"
                }, 
                "locationReference": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "bodySite": {
                    "description": "Physical service site on the patient (limb, tooth, etc.).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "subSite": {
                    "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_Adjudication"
                    }, 
                    "type": "array"
                }, 
                "detail": {
                    "description": "The second-tier service adjudications for payor added services.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_Detail1"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "adjudication", 
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_Detail1": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_Adjudication"
                    }, 
                    "type": "array"
                }, 
                "subDetail": {
                    "description": "The third-tier service adjudications for payor added services.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_SubDetail1"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "adjudication", 
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_SubDetail1": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ClaimResponse_Adjudication"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "adjudication", 
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_Total": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "amount": {
                    "description": "Monetary total amount associated with the category.", 
                    "$ref": "#/definitions/Money"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "amount", 
                "category"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_Payment": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Whether this represents partial or complete payment of the benefits payable.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "adjustment": {
                    "description": "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.", 
                    "$ref": "#/definitions/Money"
                }, 
                "adjustmentReason": {
                    "description": "Reason for the payment adjustment.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "date": {
                    "description": "Estimated date the payment will be issued or the actual issue date of payment.", 
                    "$ref": "#/definitions/date"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "amount": {
                    "description": "Benefits payable less any payment adjustment.", 
                    "$ref": "#/definitions/Money"
                }, 
                "identifier": {
                    "description": "Issuer's unique identifier for the payment instrument.", 
                    "$ref": "#/definitions/Identifier"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "amount", 
                "type"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_ProcessNote": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "number": {
                    "description": "A number to uniquely identify a note entry.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_number": {
                    "description": "Extensions for number", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The business purpose of the note text.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "The explanation or description associated with the processing.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "language": {
                    "description": "A code to define the language used in the text of the note.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ClaimResponse_Insurance": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "focal": {
                    "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_focal": {
                    "description": "Extensions for focal", 
                    "$ref": "#/definitions/Element"
                }, 
                "coverage": {
                    "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "businessArrangement": {
                    "description": "A business agreement number established between the provider and the insurer for special business processing purposes.", 
                    "$ref": "#/definitions/string"
                }, 
                "_businessArrangement": {
                    "description": "Extensions for businessArrangement", 
                    "$ref": "#/definitions/Element"
                }, 
                "claimResponse": {
                    "description": "The result of the adjudication of the line items for the Coverage specified in this insurance.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "coverage"
            ], 
            "type": "object"
        }, 
        "ClaimResponse_Error": {
            "description": "This resource provides the adjudication details from the processing of a Claim resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "itemSequence": {
                    "description": "The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_itemSequence": {
                    "description": "Extensions for itemSequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "detailSequence": {
                    "description": "The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_detailSequence": {
                    "description": "Extensions for detailSequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "subDetailSequence": {
                    "description": "The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_subDetailSequence": {
                    "description": "Extensions for subDetailSequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "An error code, from a specified code system, which details why the claim could not be adjudicated.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "ClinicalImpression_Investigation": {
            "description": "A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \"ClinicalImpression\" rather than \"ClinicalAssessment\" to avoid confusion with the recording of assessment tools such as Apgar score.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A name/code for the group (\"set\") of investigations. Typically, this will be something like \"signs\", \"symptoms\", \"clinical\", \"diagnostic\", but the list is not constrained, and others such groups such as (exposure|family|travel|nutritional) history may be used.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "item": {
                    "description": "A record of a specific investigation that was undertaken.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "ClinicalImpression_Finding": {
            "description": "A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \"ClinicalImpression\" rather than \"ClinicalAssessment\" to avoid confusion with the recording of assessment tools such as Apgar score.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "itemCodeableConcept": {
                    "description": "Specific text or code for finding or diagnosis, which may include ruled-out or resolved conditions.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "itemReference": {
                    "description": "Specific reference for finding or diagnosis, which may include ruled-out or resolved conditions.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "basis": {
                    "description": "Which investigations support finding or diagnosis.", 
                    "$ref": "#/definitions/string"
                }, 
                "_basis": {
                    "description": "Extensions for basis", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ClinicalUseDefinition_Contraindication": {
            "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "diseaseSymptomProcedure": {
                    "description": "The situation that is being documented as contraindicating against this item.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "diseaseStatus": {
                    "description": "The status of the disease or symptom for the contraindication, for example \"chronic\" or \"metastatic\".", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "comorbidity": {
                    "description": "A comorbidity (concurrent condition) or coinfection.", 
                    "items": {
                        "$ref": "#/definitions/CodeableReference"
                    }, 
                    "type": "array"
                }, 
                "indication": {
                    "description": "The indication which this is a contraidication for.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "otherTherapy": {
                    "description": "Information about the use of the medicinal product in relation to other therapies described as part of the contraindication.", 
                    "items": {
                        "$ref": "#/definitions/ClinicalUseDefinition_OtherTherapy"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ClinicalUseDefinition_OtherTherapy": {
            "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "relationshipType": {
                    "description": "The type of relationship between the medicinal product indication or contraindication and another therapy.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "therapy": {
                    "description": "Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication.", 
                    "$ref": "#/definitions/CodeableReference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "relationshipType", 
                "therapy"
            ], 
            "type": "object"
        }, 
        "ClinicalUseDefinition_Indication": {
            "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "diseaseSymptomProcedure": {
                    "description": "The situation that is being documented as an indicaton for this item.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "diseaseStatus": {
                    "description": "The status of the disease or symptom for the indication, for example \"chronic\" or \"metastatic\".", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "comorbidity": {
                    "description": "A comorbidity (concurrent condition) or coinfection as part of the indication.", 
                    "items": {
                        "$ref": "#/definitions/CodeableReference"
                    }, 
                    "type": "array"
                }, 
                "intendedEffect": {
                    "description": "The intended effect, aim or strategy to be achieved.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "durationRange": {
                    "description": "Timing or duration information, that may be associated with use with the indicated condition e.g. Adult patients suffering from myocardial infarction (from a few days until less than 35 days), ischaemic stroke (from 7 days until less than 6 months).", 
                    "$ref": "#/definitions/Range"
                }, 
                "durationString": {
                    "description": "Timing or duration information, that may be associated with use with the indicated condition e.g. Adult patients suffering from myocardial infarction (from a few days until less than 35 days), ischaemic stroke (from 7 days until less than 6 months).", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_durationString": {
                    "description": "Extensions for durationString", 
                    "$ref": "#/definitions/Element"
                }, 
                "undesirableEffect": {
                    "description": "An unwanted side effect or negative outcome that may happen if you use the drug (or other subject of this resource) for this indication.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "otherTherapy": {
                    "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication.", 
                    "items": {
                        "$ref": "#/definitions/ClinicalUseDefinition_OtherTherapy"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ClinicalUseDefinition_Interaction": {
            "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "interactant": {
                    "description": "The specific medication, food, substance or laboratory test that interacts.", 
                    "items": {
                        "$ref": "#/definitions/ClinicalUseDefinition_Interactant"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "effect": {
                    "description": "The effect of the interaction, for example \"reduced gastric absorption of primary medication\".", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "incidence": {
                    "description": "The incidence of the interaction, e.g. theoretical, observed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "management": {
                    "description": "Actions for managing the interaction.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ClinicalUseDefinition_Interactant": {
            "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "itemReference": {
                    "description": "The specific medication, food or laboratory test that interacts.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "itemCodeableConcept": {
                    "description": "The specific medication, food or laboratory test that interacts.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ClinicalUseDefinition_UndesirableEffect": {
            "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "symptomConditionEffect": {
                    "description": "The situation in which the undesirable effect may manifest.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "classification": {
                    "description": "High level classification of the effect.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "frequencyOfOccurrence": {
                    "description": "How often the effect is seen.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ClinicalUseDefinition_Warning": {
            "description": "A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "A textual definition of this warning, with formatting.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A coded or unformatted textual definition of this warning.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CodeSystem_Filter": {
            "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The code that identifies this filter when it is used as a filter in [ValueSet](valueset.html#).compose.include.filter.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A description of how or why the filter is used.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "operator": {
                    "description": "A list of operators that can be used with the filter.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_operator": {
                    "description": "Extensions for operator", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "A description of what the value for the filter should be.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CodeSystem_Property": {
            "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A code that is used to identify the property. The code is used internally (in CodeSystem.concept.property.code) and also externally, such as in property filters.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "uri": {
                    "description": "Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_uri": {
                    "description": "Extensions for uri", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A description of the property- why it is defined, and how its value might be used.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type of the property value. Properties of type \"code\" contain a code defined by the code system (e.g. a reference to another defined concept).", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CodeSystem_Concept": {
            "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A code - a text symbol - that uniquely identifies the concept within the code system.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "A human readable string that is the recommended default way to present this concept to a user.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }, 
                "definition": {
                    "description": "The formal definition of the concept. The code system resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.", 
                    "$ref": "#/definitions/string"
                }, 
                "_definition": {
                    "description": "Extensions for definition", 
                    "$ref": "#/definitions/Element"
                }, 
                "designation": {
                    "description": "Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc.", 
                    "items": {
                        "$ref": "#/definitions/CodeSystem_Designation"
                    }, 
                    "type": "array"
                }, 
                "property": {
                    "description": "A property value for this concept.", 
                    "items": {
                        "$ref": "#/definitions/CodeSystem_Property1"
                    }, 
                    "type": "array"
                }, 
                "concept": {
                    "description": "Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) - see hierarchyMeaning.", 
                    "items": {
                        "$ref": "#/definitions/CodeSystem_Concept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CodeSystem_Designation": {
            "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "language": {
                    "description": "The language this designation is defined for.", 
                    "$ref": "#/definitions/code"
                }, 
                "_language": {
                    "description": "Extensions for language", 
                    "$ref": "#/definitions/Element"
                }, 
                "use": {
                    "description": "A code that details how this designation would be used.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "value": {
                    "description": "The text value for this designation.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CodeSystem_Property1": {
            "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A code that is a reference to CodeSystem.property.code.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCode": {
                    "description": "The value of this property.", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_valueCode": {
                    "description": "Extensions for valueCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCoding": {
                    "description": "The value of this property.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueString": {
                    "description": "The value of this property.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "The value of this property.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "The value of this property.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "The value of this property.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "The value of this property.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Communication_Payload": {
            "description": "An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "contentString": {
                    "description": "A communicated content (or for multi-part communications, one portion of the communication).", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_contentString": {
                    "description": "Extensions for contentString", 
                    "$ref": "#/definitions/Element"
                }, 
                "contentAttachment": {
                    "description": "A communicated content (or for multi-part communications, one portion of the communication).", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "contentReference": {
                    "description": "A communicated content (or for multi-part communications, one portion of the communication).", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CommunicationRequest_Payload": {
            "description": "A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "contentString": {
                    "description": "The communicated content (or for multi-part communications, one portion of the communication).", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_contentString": {
                    "description": "Extensions for contentString", 
                    "$ref": "#/definitions/Element"
                }, 
                "contentAttachment": {
                    "description": "The communicated content (or for multi-part communications, one portion of the communication).", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "contentReference": {
                    "description": "The communicated content (or for multi-part communications, one portion of the communication).", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CompartmentDefinition_Resource": {
            "description": "A compartment definition that defines how resources are accessed on a server.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The name of a resource supported by the server.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "param": {
                    "description": "The name of a search parameter that represents the link to the compartment. More than one may be listed because a resource may be linked to a compartment in more than one way,.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_param": {
                    "description": "Extensions for param", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "documentation": {
                    "description": "Additional documentation about the resource and compartment.", 
                    "$ref": "#/definitions/string"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Composition_Attester": {
            "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "mode": {
                    "description": "The type of attestation the authenticator offers.", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "time": {
                    "description": "When the composition was attested by the party.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_time": {
                    "description": "Extensions for time", 
                    "$ref": "#/definitions/Element"
                }, 
                "party": {
                    "description": "Who attested the composition in the specified way.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Composition_RelatesTo": {
            "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The type of relationship that this composition has with anther composition or document.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "targetIdentifier": {
                    "description": "The target composition/document of this relationship.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "targetReference": {
                    "description": "The target composition/document of this relationship.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Composition_Event": {
            "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the typeCode, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "period": {
                    "description": "The period of time covered by the documentation. There is no assertion that the documentation is a complete representation for this period, only that it documents events during this time.", 
                    "$ref": "#/definitions/Period"
                }, 
                "detail": {
                    "description": "The description and/or reference of the event(s) being documented. For example, this could be used to document such a colonoscopy or an appendectomy.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Composition_Section": {
            "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "title": {
                    "description": "The label for this particular section.  This will be part of the rendered content for the document, and is often used to build a table of contents.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A code identifying the kind of content contained within the section. This must be consistent with the section title.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "author": {
                    "description": "Identifies who is responsible for the information in this section, not necessarily who typed it in.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "focus": {
                    "description": "The actual focus of the section when it is not the subject of the composition, but instead represents something or someone associated with the subject such as (for a patient subject) a spouse, parent, fetus, or donor. If not focus is specified, the focus is assumed to be focus of the parent section, or, for a section in the Composition itself, the subject of the composition. Sections with a focus SHALL only include resources where the logical subject (patient, subject, focus, etc.) matches the section focus, or the resources have no logical subject (few resources).", 
                    "$ref": "#/definitions/Reference"
                }, 
                "text": {
                    "description": "A human-readable narrative that contains the attested content of the section, used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative.", 
                    "$ref": "#/definitions/Narrative"
                }, 
                "mode": {
                    "description": "How the entry list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "orderedBy": {
                    "description": "Specifies the order applied to the items in the section entries.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "entry": {
                    "description": "A reference to the actual resource from which the narrative in the section is derived.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "emptyReason": {
                    "description": "If the section is empty, why the list is empty. An empty section typically has some text explaining the empty reason.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "section": {
                    "description": "A nested sub-section within this section.", 
                    "items": {
                        "$ref": "#/definitions/Composition_Section"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ConceptMap_Group": {
            "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "source": {
                    "description": "An absolute URI that identifies the source system where the concepts to be mapped are defined.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_source": {
                    "description": "Extensions for source", 
                    "$ref": "#/definitions/Element"
                }, 
                "sourceVersion": {
                    "description": "The specific version of the code system, as determined by the code system authority.", 
                    "$ref": "#/definitions/string"
                }, 
                "_sourceVersion": {
                    "description": "Extensions for sourceVersion", 
                    "$ref": "#/definitions/Element"
                }, 
                "target": {
                    "description": "An absolute URI that identifies the target system that the concepts will be mapped to.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_target": {
                    "description": "Extensions for target", 
                    "$ref": "#/definitions/Element"
                }, 
                "targetVersion": {
                    "description": "The specific version of the code system, as determined by the code system authority.", 
                    "$ref": "#/definitions/string"
                }, 
                "_targetVersion": {
                    "description": "Extensions for targetVersion", 
                    "$ref": "#/definitions/Element"
                }, 
                "element": {
                    "description": "Mappings for an individual concept in the source to one or more concepts in the target.", 
                    "items": {
                        "$ref": "#/definitions/ConceptMap_Element"
                    }, 
                    "type": "array"
                }, 
                "unmapped": {
                    "description": "What to do when there is no mapping for the source concept. \"Unmapped\" does not include codes that are unmatched, and the unmapped element is ignored in a code is specified to have equivalence = unmatched.", 
                    "$ref": "#/definitions/ConceptMap_Unmapped"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "element"
            ], 
            "type": "object"
        }, 
        "ConceptMap_Element": {
            "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Identity (code or path) or the element/item being mapped.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "The display for the code. The display is only provided to help editors when editing the concept map.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }, 
                "target": {
                    "description": "A concept from the target value set that this concept maps to.", 
                    "items": {
                        "$ref": "#/definitions/ConceptMap_Target"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ConceptMap_Target": {
            "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Identity (code or path) or the element/item that the map refers to.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "The display for the code. The display is only provided to help editors when editing the concept map.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }, 
                "equivalence": {
                    "description": "The equivalence between the source and target concepts (counting for the dependencies and products). The equivalence is read from target to source (e.g. the target is 'wider' than the source).", 
                    "$ref": "#/definitions/code"
                }, 
                "_equivalence": {
                    "description": "Extensions for equivalence", 
                    "$ref": "#/definitions/Element"
                }, 
                "comment": {
                    "description": "A description of status/issues in mapping that conveys additional information not represented in  the structured data.", 
                    "$ref": "#/definitions/string"
                }, 
                "_comment": {
                    "description": "Extensions for comment", 
                    "$ref": "#/definitions/Element"
                }, 
                "dependsOn": {
                    "description": "A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value.", 
                    "items": {
                        "$ref": "#/definitions/ConceptMap_DependsOn"
                    }, 
                    "type": "array"
                }, 
                "product": {
                    "description": "A set of additional outcomes from this mapping to other elements. To properly execute this mapping, the specified element must be mapped to some data element or source that is in context. The mapping may still be useful without a place for the additional data elements, but the equivalence cannot be relied on.", 
                    "items": {
                        "$ref": "#/definitions/ConceptMap_DependsOn"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ConceptMap_DependsOn": {
            "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "property": {
                    "description": "A reference to an element that holds a coded value that corresponds to a code system property. The idea is that the information model carries an element somewhere that is labeled to correspond with a code system property.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_property": {
                    "description": "Extensions for property", 
                    "$ref": "#/definitions/Element"
                }, 
                "system": {
                    "description": "An absolute URI that identifies the code system of the dependency code (if the source/dependency is a value set that crosses code systems).", 
                    "$ref": "#/definitions/canonical"
                }, 
                "value": {
                    "description": "Identity (code or path) or the element/item/ValueSet/text that the map depends on / refers to.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "The display for the code. The display is only provided to help editors when editing the concept map.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ConceptMap_Unmapped": {
            "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "mode": {
                    "description": "Defines which action to take if there is no match for the source concept in the target system designated for the group. One of 3 actions are possible: use the unmapped code (this is useful when doing a mapping between versions, and only a few codes have changed), use a fixed code (a default code), or alternatively, a reference to a different concept map can be provided (by canonical URL).", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "The fixed code to use when the mode = 'fixed'  - all unmapped codes are mapped to a single fixed code.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "The display for the code. The display is only provided to help editors when editing the concept map.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }, 
                "url": {
                    "description": "The canonical reference to an additional ConceptMap resource instance to use for mapping if this ConceptMap resource contains no matching mapping for the source concept.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Condition_Stage": {
            "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "summary": {
                    "description": "A simple summary of the stage such as \"Stage 3\". The determination of the stage is disease-specific.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "assessment": {
                    "description": "Reference to a formal record of the evidence on which the staging assessment is based.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The kind of staging, such as pathological or clinical staging.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Condition_Evidence": {
            "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A manifestation or symptom that led to the recording of this condition.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "detail": {
                    "description": "Links to other relevant information, including pathology reports.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Consent_Policy": {
            "description": "A record of a healthcare consumer\u2019s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "authority": {
                    "description": "Entity or Organization having regulatory jurisdiction or accountability for  enforcing policies pertaining to Consent Directives.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_authority": {
                    "description": "Extensions for authority", 
                    "$ref": "#/definitions/Element"
                }, 
                "uri": {
                    "description": "The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_uri": {
                    "description": "Extensions for uri", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Consent_Verification": {
            "description": "A record of a healthcare consumer\u2019s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "verified": {
                    "description": "Has the instruction been verified.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_verified": {
                    "description": "Extensions for verified", 
                    "$ref": "#/definitions/Element"
                }, 
                "verifiedWith": {
                    "description": "Who verified the instruction (Patient, Relative or other Authorized Person).", 
                    "$ref": "#/definitions/Reference"
                }, 
                "verificationDate": {
                    "description": "Date verification was collected.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_verificationDate": {
                    "description": "Extensions for verificationDate", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Consent_Provision": {
            "description": "A record of a healthcare consumer\u2019s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Action  to take - permit or deny - when the rule conditions are met.  Not permitted in root rule, required in all nested rules.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "The timeframe in this rule is valid.", 
                    "$ref": "#/definitions/Period"
                }, 
                "actor": {
                    "description": "Who or what is controlled by this rule. Use group to identify a set of actors by some property they share (e.g. 'admitting officers').", 
                    "items": {
                        "$ref": "#/definitions/Consent_Actor"
                    }, 
                    "type": "array"
                }, 
                "action": {
                    "description": "Actions controlled by this Rule.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "securityLabel": {
                    "description": "A security label, comprised of 0..* security label fields (Privacy tags), which define which resources are controlled by this exception.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "purpose": {
                    "description": "The context of the activities a user is taking - why the user is accessing the data - that are controlled by this rule.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "class": {
                    "description": "The class of information covered by this rule. The type can be a FHIR resource type, a profile on a type, or a CDA document, or some other type that indicates what sort of information the consent relates to.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "If this code is found in an instance, then the rule applies.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "dataPeriod": {
                    "description": "Clinical or Operational Relevant period of time that bounds the data controlled by this rule.", 
                    "$ref": "#/definitions/Period"
                }, 
                "data": {
                    "description": "The resources controlled by this rule if specific resources are referenced.", 
                    "items": {
                        "$ref": "#/definitions/Consent_Data"
                    }, 
                    "type": "array"
                }, 
                "provision": {
                    "description": "Rules which provide exceptions to the base rule or subrules.", 
                    "items": {
                        "$ref": "#/definitions/Consent_Provision"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Consent_Actor": {
            "description": "A record of a healthcare consumer\u2019s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "role": {
                    "description": "How the individual is involved in the resources content that is described in the exception.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reference": {
                    "description": "The resource that identifies the actor. To identify actors by type, use group to identify a set of actors by some property they share (e.g. 'admitting officers').", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "reference", 
                "role"
            ], 
            "type": "object"
        }, 
        "Consent_Data": {
            "description": "A record of a healthcare consumer\u2019s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "meaning": {
                    "description": "How the resource reference is interpreted when testing consent restrictions.", 
                    "$ref": "#/definitions/code"
                }, 
                "_meaning": {
                    "description": "Extensions for meaning", 
                    "$ref": "#/definitions/Element"
                }, 
                "reference": {
                    "description": "A reference to a specific resource that defines which resources are covered by this consent.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "reference"
            ], 
            "type": "object"
        }, 
        "Contract_ContentDefinition": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Precusory content structure and use, i.e., a boilerplate, template, application for a contract such as an insurance policy or benefits under a program, e.g., workers compensation.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "subType": {
                    "description": "Detailed Precusory content type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "publisher": {
                    "description": "The  individual or organization that published the Contract precursor content.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "publicationDate": {
                    "description": "The date (and optionally time) when the contract was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the contract changes.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_publicationDate": {
                    "description": "Extensions for publicationDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "publicationStatus": {
                    "description": "amended | appended | cancelled | disputed | entered-in-error | executable | executed | negotiable | offered | policy | rejected | renewed | revoked | resolved | terminated.", 
                    "$ref": "#/definitions/code"
                }, 
                "_publicationStatus": {
                    "description": "Extensions for publicationStatus", 
                    "$ref": "#/definitions/Element"
                }, 
                "copyright": {
                    "description": "A copyright statement relating to Contract precursor content. Copyright statements are generally legal restrictions on the use and publishing of the Contract precursor content.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_copyright": {
                    "description": "Extensions for copyright", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "Contract_Term": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "Unique identifier for this particular Contract Provision.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "issued": {
                    "description": "When this Contract Provision was issued.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_issued": {
                    "description": "Extensions for issued", 
                    "$ref": "#/definitions/Element"
                }, 
                "applies": {
                    "description": "Relevant time or time-period when this Contract Provision is applicable.", 
                    "$ref": "#/definitions/Period"
                }, 
                "topicCodeableConcept": {
                    "description": "The entity that the term applies to.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "topicReference": {
                    "description": "The entity that the term applies to.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "type": {
                    "description": "A legal clause or condition contained within a contract that requires one or both parties to perform a particular requirement by some specified time or prevents one or both parties from performing a particular requirement by some specified time.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "subType": {
                    "description": "A specialized legal clause or condition based on overarching contract type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "text": {
                    "description": "Statement of a provision in a policy or a contract.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "securityLabel": {
                    "description": "Security labels that protect the handling of information about the term and its elements, which may be specifically identified..", 
                    "items": {
                        "$ref": "#/definitions/Contract_SecurityLabel"
                    }, 
                    "type": "array"
                }, 
                "offer": {
                    "description": "The matter of concern in the context of this provision of the agrement.", 
                    "$ref": "#/definitions/Contract_Offer"
                }, 
                "asset": {
                    "description": "Contract Term Asset List.", 
                    "items": {
                        "$ref": "#/definitions/Contract_Asset"
                    }, 
                    "type": "array"
                }, 
                "action": {
                    "description": "An actor taking a role in an activity for which it can be assigned some degree of responsibility for the activity taking place.", 
                    "items": {
                        "$ref": "#/definitions/Contract_Action"
                    }, 
                    "type": "array"
                }, 
                "group": {
                    "description": "Nested group of Contract Provisions.", 
                    "items": {
                        "$ref": "#/definitions/Contract_Term"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "offer"
            ], 
            "type": "object"
        }, 
        "Contract_SecurityLabel": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "number": {
                    "description": "Number used to link this term or term element to the applicable Security Label.", 
                    "items": {
                        "$ref": "#/definitions/unsignedInt"
                    }, 
                    "type": "array"
                }, 
                "_number": {
                    "description": "Extensions for number", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "classification": {
                    "description": "Security label privacy tag that species the level of confidentiality protection required for this term and/or term elements.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "category": {
                    "description": "Security label privacy tag that species the applicable privacy and security policies governing this term and/or term elements.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "control": {
                    "description": "Security label privacy tag that species the manner in which term and/or term elements are to be protected.", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "classification"
            ], 
            "type": "object"
        }, 
        "Contract_Offer": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "Unique identifier for this particular Contract Provision.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "party": {
                    "description": "Offer Recipient.", 
                    "items": {
                        "$ref": "#/definitions/Contract_Party"
                    }, 
                    "type": "array"
                }, 
                "topic": {
                    "description": "The owner of an asset has the residual control rights over the asset: the right to decide all usages of the asset in any way not inconsistent with a prior contract, custom, or law (Hart, 1995, p. 30).", 
                    "$ref": "#/definitions/Reference"
                }, 
                "type": {
                    "description": "Type of Contract Provision such as specific requirements, purposes for actions, obligations, prohibitions, e.g. life time maximum benefit.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "decision": {
                    "description": "Type of choice made by accepting party with respect to an offer made by an offeror/ grantee.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "decisionMode": {
                    "description": "How the decision about a Contract was conveyed.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "answer": {
                    "description": "Response to offer text.", 
                    "items": {
                        "$ref": "#/definitions/Contract_Answer"
                    }, 
                    "type": "array"
                }, 
                "text": {
                    "description": "Human readable form of this Contract Offer.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "linkId": {
                    "description": "The id of the clause or question text of the offer in the referenced questionnaire/response.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_linkId": {
                    "description": "Extensions for linkId", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "securityLabelNumber": {
                    "description": "Security labels that protects the offer.", 
                    "items": {
                        "$ref": "#/definitions/unsignedInt"
                    }, 
                    "type": "array"
                }, 
                "_securityLabelNumber": {
                    "description": "Extensions for securityLabelNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Contract_Party": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "reference": {
                    "description": "Participant in the offer.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "role": {
                    "description": "How the party participates in the offer.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "reference", 
                "role"
            ], 
            "type": "object"
        }, 
        "Contract_Answer": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "valueBoolean": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDate": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueTime": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_valueTime": {
                    "description": "Extensions for valueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUri": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUri": {
                    "description": "Extensions for valueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAttachment": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueCoding": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueQuantity": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueReference": {
                    "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Contract_Asset": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "scope": {
                    "description": "Differentiates the kind of the asset .", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "type": {
                    "description": "Target entity type about which the term may be concerned.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "typeReference": {
                    "description": "Associated entities.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "subtype": {
                    "description": "May be a subtype or part of an offered asset.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "relationship": {
                    "description": "Specifies the applicability of the term to an asset resource instance, and instances it refers to orinstances that refer to it, and/or are owned by the offeree.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "context": {
                    "description": "Circumstance of the asset.", 
                    "items": {
                        "$ref": "#/definitions/Contract_Context"
                    }, 
                    "type": "array"
                }, 
                "condition": {
                    "description": "Description of the quality and completeness of the asset that imay be a factor in its valuation.", 
                    "$ref": "#/definitions/string"
                }, 
                "_condition": {
                    "description": "Extensions for condition", 
                    "$ref": "#/definitions/Element"
                }, 
                "periodType": {
                    "description": "Type of Asset availability for use or ownership.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "period": {
                    "description": "Asset relevant contractual time period.", 
                    "items": {
                        "$ref": "#/definitions/Period"
                    }, 
                    "type": "array"
                }, 
                "usePeriod": {
                    "description": "Time period of asset use.", 
                    "items": {
                        "$ref": "#/definitions/Period"
                    }, 
                    "type": "array"
                }, 
                "text": {
                    "description": "Clause or question text (Prose Object) concerning the asset in a linked form, such as a QuestionnaireResponse used in the formation of the contract.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "linkId": {
                    "description": "Id [identifier??] of the clause or question text about the asset in the referenced form or QuestionnaireResponse.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_linkId": {
                    "description": "Extensions for linkId", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "answer": {
                    "description": "Response to assets.", 
                    "items": {
                        "$ref": "#/definitions/Contract_Answer"
                    }, 
                    "type": "array"
                }, 
                "securityLabelNumber": {
                    "description": "Security labels that protects the asset.", 
                    "items": {
                        "$ref": "#/definitions/unsignedInt"
                    }, 
                    "type": "array"
                }, 
                "_securityLabelNumber": {
                    "description": "Extensions for securityLabelNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "valuedItem": {
                    "description": "Contract Valued Item List.", 
                    "items": {
                        "$ref": "#/definitions/Contract_ValuedItem"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Contract_Context": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "reference": {
                    "description": "Asset context reference may include the creator, custodian, or owning Person or Organization (e.g., bank, repository),  location held, e.g., building,  jurisdiction.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "code": {
                    "description": "Coded representation of the context generally or of the Referenced entity, such as the asset holder type or location.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "text": {
                    "description": "Context description.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Contract_ValuedItem": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "entityCodeableConcept": {
                    "description": "Specific type of Contract Valued Item that may be priced.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "entityReference": {
                    "description": "Specific type of Contract Valued Item that may be priced.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "identifier": {
                    "description": "Identifies a Contract Valued Item instance.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "effectiveTime": {
                    "description": "Indicates the time during which this Contract ValuedItem information is effective.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_effectiveTime": {
                    "description": "Extensions for effectiveTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "quantity": {
                    "description": "Specifies the units by which the Contract Valued Item is measured or counted, and quantifies the countable or measurable Contract Valued Item instances.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "A Contract Valued Item unit valuation measure.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of the Contract Valued Item delivered. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "points": {
                    "description": "An amount that expresses the weighting (based on difficulty, cost and/or resource intensiveness) associated with the Contract Valued Item delivered. The concept of Points allows for assignment of point values for a Contract Valued Item, such that a monetary amount can be assigned to each point.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_points": {
                    "description": "Extensions for points", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "Expresses the product of the Contract Valued Item unitQuantity and the unitPriceAmt. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.", 
                    "$ref": "#/definitions/Money"
                }, 
                "payment": {
                    "description": "Terms of valuation.", 
                    "$ref": "#/definitions/string"
                }, 
                "_payment": {
                    "description": "Extensions for payment", 
                    "$ref": "#/definitions/Element"
                }, 
                "paymentDate": {
                    "description": "When payment is due.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_paymentDate": {
                    "description": "Extensions for paymentDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "responsible": {
                    "description": "Who will make payment.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "recipient": {
                    "description": "Who will receive payment.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "linkId": {
                    "description": "Id  of the clause or question text related to the context of this valuedItem in the referenced form or QuestionnaireResponse.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_linkId": {
                    "description": "Extensions for linkId", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "securityLabelNumber": {
                    "description": "A set of security labels that define which terms are controlled by this condition.", 
                    "items": {
                        "$ref": "#/definitions/unsignedInt"
                    }, 
                    "type": "array"
                }, 
                "_securityLabelNumber": {
                    "description": "Extensions for securityLabelNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Contract_Action": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "doNotPerform": {
                    "description": "True if the term prohibits the  action.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_doNotPerform": {
                    "description": "Extensions for doNotPerform", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "Activity or service obligation to be done or not done, performed or not performed, effectuated or not by this Contract term.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "subject": {
                    "description": "Entity of the action.", 
                    "items": {
                        "$ref": "#/definitions/Contract_Subject"
                    }, 
                    "type": "array"
                }, 
                "intent": {
                    "description": "Reason or purpose for the action stipulated by this Contract Provision.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "linkId": {
                    "description": "Id [identifier??] of the clause or question text related to this action in the referenced form or QuestionnaireResponse.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_linkId": {
                    "description": "Extensions for linkId", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "status": {
                    "description": "Current state of the term action.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "context": {
                    "description": "Encounter or Episode with primary association to specified term activity.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "contextLinkId": {
                    "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_contextLinkId": {
                    "description": "Extensions for contextLinkId", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "occurrenceDateTime": {
                    "description": "When action happens.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_occurrenceDateTime": {
                    "description": "Extensions for occurrenceDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "occurrencePeriod": {
                    "description": "When action happens.", 
                    "$ref": "#/definitions/Period"
                }, 
                "occurrenceTiming": {
                    "description": "When action happens.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "requester": {
                    "description": "Who or what initiated the action and has responsibility for its activation.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "requesterLinkId": {
                    "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_requesterLinkId": {
                    "description": "Extensions for requesterLinkId", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "performerType": {
                    "description": "The type of individual that is desired or required to perform or not perform the action.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "performerRole": {
                    "description": "The type of role or competency of an individual desired or required to perform or not perform the action.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "performer": {
                    "description": "Indicates who or what is being asked to perform (or not perform) the ction.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "performerLinkId": {
                    "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_performerLinkId": {
                    "description": "Extensions for performerLinkId", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "reasonCode": {
                    "description": "Rationale for the action to be performed or not performed. Describes why the action is permitted or prohibited.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "reasonReference": {
                    "description": "Indicates another resource whose existence justifies permitting or not permitting this action.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "reason": {
                    "description": "Describes why the action is to be performed or not performed in textual form.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_reason": {
                    "description": "Extensions for reason", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "reasonLinkId": {
                    "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_reasonLinkId": {
                    "description": "Extensions for reasonLinkId", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "note": {
                    "description": "Comments made about the term action made by the requester, performer, subject or other participants.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }, 
                "securityLabelNumber": {
                    "description": "Security labels that protects the action.", 
                    "items": {
                        "$ref": "#/definitions/unsignedInt"
                    }, 
                    "type": "array"
                }, 
                "_securityLabelNumber": {
                    "description": "Extensions for securityLabelNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type", 
                "intent", 
                "status"
            ], 
            "type": "object"
        }, 
        "Contract_Subject": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "reference": {
                    "description": "The entity the action is performed or not performed on or for.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "role": {
                    "description": "Role type of agent assigned roles in this Contract.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "reference"
            ], 
            "type": "object"
        }, 
        "Contract_Signer": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Role of this Contract signer, e.g. notary, grantee.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "party": {
                    "description": "Party which is a signator to this Contract.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "signature": {
                    "description": "Legally binding Contract DSIG signature contents in Base64.", 
                    "items": {
                        "$ref": "#/definitions/Signature"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "signature", 
                "type", 
                "party"
            ], 
            "type": "object"
        }, 
        "Contract_Friendly": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "contentAttachment": {
                    "description": "Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "contentReference": {
                    "description": "Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Contract_Legal": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "contentAttachment": {
                    "description": "Contract legal text in human renderable form.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "contentReference": {
                    "description": "Contract legal text in human renderable form.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Contract_Rule": {
            "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "contentAttachment": {
                    "description": "Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal).", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "contentReference": {
                    "description": "Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal).", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Coverage_Class": {
            "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "value": {
                    "description": "The alphanumeric string value associated with the insurer issued label.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "A short description for the class.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "Coverage_CostToBeneficiary": {
            "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The category of patient centric costs associated with treatment.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "The amount due from the patient for the cost category.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueMoney": {
                    "description": "The amount due from the patient for the cost category.", 
                    "$ref": "#/definitions/Money"
                }, 
                "exception": {
                    "description": "A suite of codes indicating exceptions or reductions to patient costs and their effective periods.", 
                    "items": {
                        "$ref": "#/definitions/Coverage_Exception"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Coverage_Exception": {
            "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The code for the specific exception.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "period": {
                    "description": "The timeframe during when the exception is in force.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "CoverageEligibilityRequest_SupportingInfo": {
            "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify supporting information entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "information": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "appliesToAll": {
                    "description": "The supporting materials are applicable for all detail items, product/servce categories and specific billing codes.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_appliesToAll": {
                    "description": "Extensions for appliesToAll", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "information"
            ], 
            "type": "object"
        }, 
        "CoverageEligibilityRequest_Insurance": {
            "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "focal": {
                    "description": "A flag to indicate that this Coverage is to be used for evaluation of this request when set to true.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_focal": {
                    "description": "Extensions for focal", 
                    "$ref": "#/definitions/Element"
                }, 
                "coverage": {
                    "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "businessArrangement": {
                    "description": "A business agreement number established between the provider and the insurer for special business processing purposes.", 
                    "$ref": "#/definitions/string"
                }, 
                "_businessArrangement": {
                    "description": "Extensions for businessArrangement", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "coverage"
            ], 
            "type": "object"
        }, 
        "CoverageEligibilityRequest_Item": {
            "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "supportingInfoSequence": {
                    "description": "Exceptions, special conditions and supporting information applicable for this service or product line.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_supportingInfoSequence": {
                    "description": "Extensions for supportingInfoSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "Code to identify the general type of benefits under which products and services are provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productOrService": {
                    "description": "This contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "provider": {
                    "description": "The practitioner who is responsible for the product or service to be rendered to the patient.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "The amount charged to the patient by the provider for a single unit.", 
                    "$ref": "#/definitions/Money"
                }, 
                "facility": {
                    "description": "Facility where the services will be provided.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "diagnosis": {
                    "description": "Patient diagnosis for which care is sought.", 
                    "items": {
                        "$ref": "#/definitions/CoverageEligibilityRequest_Diagnosis"
                    }, 
                    "type": "array"
                }, 
                "detail": {
                    "description": "The plan/proposal/order describing the proposed service in detail.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CoverageEligibilityRequest_Diagnosis": {
            "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "diagnosisCodeableConcept": {
                    "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "diagnosisReference": {
                    "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CoverageEligibilityResponse_Insurance": {
            "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "coverage": {
                    "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "inforce": {
                    "description": "Flag indicating if the coverage provided is inforce currently if no service date(s) specified or for the whole duration of the service dates.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_inforce": {
                    "description": "Extensions for inforce", 
                    "$ref": "#/definitions/Element"
                }, 
                "benefitPeriod": {
                    "description": "The term of the benefits documented in this response.", 
                    "$ref": "#/definitions/Period"
                }, 
                "item": {
                    "description": "Benefits and optionally current balances, and authorization details by category or service.", 
                    "items": {
                        "$ref": "#/definitions/CoverageEligibilityResponse_Item"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "coverage"
            ], 
            "type": "object"
        }, 
        "CoverageEligibilityResponse_Item": {
            "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "Code to identify the general type of benefits under which products and services are provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productOrService": {
                    "description": "This contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "provider": {
                    "description": "The practitioner who is eligible for the provision of the product or service.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "excluded": {
                    "description": "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_excluded": {
                    "description": "Extensions for excluded", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "A short name or tag for the benefit.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A richer description of the benefit or services covered.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "network": {
                    "description": "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "unit": {
                    "description": "Indicates if the benefits apply to an individual or to the family.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "term": {
                    "description": "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "benefit": {
                    "description": "Benefits used to date.", 
                    "items": {
                        "$ref": "#/definitions/CoverageEligibilityResponse_Benefit"
                    }, 
                    "type": "array"
                }, 
                "authorizationRequired": {
                    "description": "A boolean flag indicating whether a preauthorization is required prior to actual service delivery.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_authorizationRequired": {
                    "description": "Extensions for authorizationRequired", 
                    "$ref": "#/definitions/Element"
                }, 
                "authorizationSupporting": {
                    "description": "Codes or comments regarding information or actions associated with the preauthorization.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "authorizationUrl": {
                    "description": "A web location for obtaining requirements or descriptive information regarding the preauthorization.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_authorizationUrl": {
                    "description": "Extensions for authorizationUrl", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "CoverageEligibilityResponse_Benefit": {
            "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Classification of benefit being provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "allowedUnsignedInt": {
                    "description": "The quantity of the benefit which is permitted under the coverage.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_allowedUnsignedInt": {
                    "description": "Extensions for allowedUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "allowedString": {
                    "description": "The quantity of the benefit which is permitted under the coverage.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_allowedString": {
                    "description": "Extensions for allowedString", 
                    "$ref": "#/definitions/Element"
                }, 
                "allowedMoney": {
                    "description": "The quantity of the benefit which is permitted under the coverage.", 
                    "$ref": "#/definitions/Money"
                }, 
                "usedUnsignedInt": {
                    "description": "The quantity of the benefit which have been consumed to date.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_usedUnsignedInt": {
                    "description": "Extensions for usedUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "usedString": {
                    "description": "The quantity of the benefit which have been consumed to date.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_usedString": {
                    "description": "Extensions for usedString", 
                    "$ref": "#/definitions/Element"
                }, 
                "usedMoney": {
                    "description": "The quantity of the benefit which have been consumed to date.", 
                    "$ref": "#/definitions/Money"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "CoverageEligibilityResponse_Error": {
            "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "An error code,from a specified code system, which details why the eligibility check could not be performed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "DetectedIssue_Evidence": {
            "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A manifestation that led to the recording of this detected issue.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "detail": {
                    "description": "Links to resources that constitute evidence for the detected issue such as a GuidanceResponse or MeasureReport.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DetectedIssue_Mitigation": {
            "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "action": {
                    "description": "Describes the action that was taken or the observation that was made that reduces/eliminates the risk associated with the identified issue.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "date": {
                    "description": "Indicates when the mitigating action was documented.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "author": {
                    "description": "Identifies the practitioner who determined the mitigation and takes responsibility for the mitigation step occurring.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "action"
            ], 
            "type": "object"
        }, 
        "Device_UdiCarrier": {
            "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "deviceIdentifier": {
                    "description": "The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.", 
                    "$ref": "#/definitions/string"
                }, 
                "_deviceIdentifier": {
                    "description": "Extensions for deviceIdentifier", 
                    "$ref": "#/definitions/Element"
                }, 
                "issuer": {
                    "description": "Organization that is charged with issuing UDIs for devices.  For example, the US FDA issuers include :\n1) GS1: \nhttp://hl7.org/fhir/NamingSystem/gs1-di, \n2) HIBCC:\nhttp://hl7.org/fhir/NamingSystem/hibcc-dI, \n3) ICCBBA for blood containers:\nhttp://hl7.org/fhir/NamingSystem/iccbba-blood-di, \n4) ICCBA for other devices:\nhttp://hl7.org/fhir/NamingSystem/iccbba-other-di.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_issuer": {
                    "description": "Extensions for issuer", 
                    "$ref": "#/definitions/Element"
                }, 
                "jurisdiction": {
                    "description": "The identity of the authoritative source for UDI generation within a  jurisdiction.  All UDIs are globally unique within a single namespace with the appropriate repository uri as the system.  For example,  UDIs of devices managed in the U.S. by the FDA, the value is  http://hl7.org/fhir/NamingSystem/fda-udi.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_jurisdiction": {
                    "description": "Extensions for jurisdiction", 
                    "$ref": "#/definitions/Element"
                }, 
                "carrierAIDC": {
                    "description": "The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID.   Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.", 
                    "$ref": "#/definitions/base64Binary"
                }, 
                "_carrierAIDC": {
                    "description": "Extensions for carrierAIDC", 
                    "$ref": "#/definitions/Element"
                }, 
                "carrierHRF": {
                    "description": "The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.", 
                    "$ref": "#/definitions/string"
                }, 
                "_carrierHRF": {
                    "description": "Extensions for carrierHRF", 
                    "$ref": "#/definitions/Element"
                }, 
                "entryType": {
                    "description": "A coded entry to indicate how the data was entered.", 
                    "$ref": "#/definitions/code"
                }, 
                "_entryType": {
                    "description": "Extensions for entryType", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Device_DeviceName": {
            "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name that identifies the device.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Device_Specialization": {
            "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "systemType": {
                    "description": "The standard that is used to operate and communicate.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "version": {
                    "description": "The version of the standard that is used to operate and communicate.", 
                    "$ref": "#/definitions/string"
                }, 
                "_version": {
                    "description": "Extensions for version", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "systemType"
            ], 
            "type": "object"
        }, 
        "Device_Version": {
            "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of the device version, e.g. manufacturer, approved, internal.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "component": {
                    "description": "A single component of the device version.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "value": {
                    "description": "The version text.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Device_Property": {
            "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Code that specifies the property DeviceDefinitionPropetyCode (Extensible).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "Property value as a quantity.", 
                    "items": {
                        "$ref": "#/definitions/Quantity"
                    }, 
                    "type": "array"
                }, 
                "valueCode": {
                    "description": "Property value as a code, e.g., NTP4 (synced to NTP).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "DeviceDefinition_UdiDeviceIdentifier": {
            "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "deviceIdentifier": {
                    "description": "The identifier that is to be associated with every Device that references this DeviceDefintiion for the issuer and jurisdication porvided in the DeviceDefinition.udiDeviceIdentifier.", 
                    "$ref": "#/definitions/string"
                }, 
                "_deviceIdentifier": {
                    "description": "Extensions for deviceIdentifier", 
                    "$ref": "#/definitions/Element"
                }, 
                "issuer": {
                    "description": "The organization that assigns the identifier algorithm.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_issuer": {
                    "description": "Extensions for issuer", 
                    "$ref": "#/definitions/Element"
                }, 
                "jurisdiction": {
                    "description": "The jurisdiction to which the deviceIdentifier applies.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_jurisdiction": {
                    "description": "Extensions for jurisdiction", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DeviceDefinition_DeviceName": {
            "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name of the device.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DeviceDefinition_Specialization": {
            "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "systemType": {
                    "description": "The standard that is used to operate and communicate.", 
                    "$ref": "#/definitions/string"
                }, 
                "_systemType": {
                    "description": "Extensions for systemType", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "The version of the standard that is used to operate and communicate.", 
                    "$ref": "#/definitions/string"
                }, 
                "_version": {
                    "description": "Extensions for version", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DeviceDefinition_Capability": {
            "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of capability.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "description": {
                    "description": "Description of capability.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "DeviceDefinition_Property": {
            "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Code that specifies the property DeviceDefinitionPropetyCode (Extensible).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "Property value as a quantity.", 
                    "items": {
                        "$ref": "#/definitions/Quantity"
                    }, 
                    "type": "array"
                }, 
                "valueCode": {
                    "description": "Property value as a code, e.g., NTP4 (synced to NTP).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "DeviceDefinition_Material": {
            "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "substance": {
                    "description": "The substance.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "alternate": {
                    "description": "Indicates an alternative material of the device.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_alternate": {
                    "description": "Extensions for alternate", 
                    "$ref": "#/definitions/Element"
                }, 
                "allergenicIndicator": {
                    "description": "Whether the substance is a known or suspected allergen.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_allergenicIndicator": {
                    "description": "Extensions for allergenicIndicator", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "substance"
            ], 
            "type": "object"
        }, 
        "DeviceMetric_Calibration": {
            "description": "Describes a measurement, calculation or setting capability of a medical device.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Describes the type of the calibration method.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "state": {
                    "description": "Describes the state of the calibration.", 
                    "$ref": "#/definitions/code"
                }, 
                "_state": {
                    "description": "Extensions for state", 
                    "$ref": "#/definitions/Element"
                }, 
                "time": {
                    "description": "Describes the time last calibration has been performed.", 
                    "$ref": "#/definitions/instant"
                }, 
                "_time": {
                    "description": "Extensions for time", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DeviceRequest_Parameter": {
            "description": "Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A code or string that identifies the device detail being asserted.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "The value of the device detail.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "The value of the device detail.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "The value of the device detail.", 
                    "$ref": "#/definitions/Range"
                }, 
                "valueBoolean": {
                    "description": "The value of the device detail.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DiagnosticReport_Media": {
            "description": "The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "comment": {
                    "description": "A comment about the image. Typically, this is used to provide an explanation for why the image is included, or to draw the viewer's attention to important features.", 
                    "$ref": "#/definitions/string"
                }, 
                "_comment": {
                    "description": "Extensions for comment", 
                    "$ref": "#/definitions/Element"
                }, 
                "link": {
                    "description": "Reference to the image source.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "link"
            ], 
            "type": "object"
        }, 
        "DocumentManifest_Related": {
            "description": "A collection of documents compiled for a purpose together with metadata that applies to the collection.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "Related identifier to this DocumentManifest.  For example, Order numbers, accession numbers, XDW workflow numbers.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "ref": {
                    "description": "Related Resource to this DocumentManifest. For example, Order, ServiceRequest,  Procedure, EligibilityRequest, etc.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "DocumentReference_RelatesTo": {
            "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The type of relationship that this document has with anther document.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "target": {
                    "description": "The target document of this relationship.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "target"
            ], 
            "type": "object"
        }, 
        "DocumentReference_Content": {
            "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "attachment": {
                    "description": "The document or URL of the document along with critical metadata to prove content has integrity.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "format": {
                    "description": "An identifier of the document encoding, structure, and template that the document conforms to beyond the base format indicated in the mimeType.", 
                    "$ref": "#/definitions/Coding"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "attachment"
            ], 
            "type": "object"
        }, 
        "DocumentReference_Context": {
            "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "encounter": {
                    "description": "Describes the clinical encounter or type of care that the document content is associated with.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "event": {
                    "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the type Code, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "period": {
                    "description": "The time period over which the service that is described by the document was provided.", 
                    "$ref": "#/definitions/Period"
                }, 
                "facilityType": {
                    "description": "The kind of facility where the patient was seen.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "practiceSetting": {
                    "description": "This property may convey specifics about the practice setting where the content was created, often reflecting the clinical specialty.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "sourcePatientInfo": {
                    "description": "The Patient Information as known when the document was published. May be a reference to a version specific, or contained.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "related": {
                    "description": "Related identifiers or resources associated with the DocumentReference.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Encounter_StatusHistory": {
            "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "status": {
                    "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +.", 
                    "$ref": "#/definitions/code"
                }, 
                "_status": {
                    "description": "Extensions for status", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "The time that the episode was in the specified status.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "period"
            ], 
            "type": "object"
        }, 
        "Encounter_ClassHistory": {
            "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "class": {
                    "description": "inpatient | outpatient | ambulatory | emergency +.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "period": {
                    "description": "The time that the episode was in the specified class.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "period", 
                "class"
            ], 
            "type": "object"
        }, 
        "Encounter_Participant": {
            "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Role of participant in encounter.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "period": {
                    "description": "The period of time that the specified participant participated in the encounter. These can overlap or be sub-sets of the overall encounter's period.", 
                    "$ref": "#/definitions/Period"
                }, 
                "individual": {
                    "description": "Persons involved in the encounter other than the patient.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Encounter_Diagnosis": {
            "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "condition": {
                    "description": "Reason the encounter takes place, as specified using information from another resource. For admissions, this is the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "use": {
                    "description": "Role that this diagnosis has within the encounter (e.g. admission, billing, discharge \u2026).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "rank": {
                    "description": "Ranking of the diagnosis (for each role type).", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_rank": {
                    "description": "Extensions for rank", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "condition"
            ], 
            "type": "object"
        }, 
        "Encounter_Hospitalization": {
            "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "preAdmissionIdentifier": {
                    "description": "Pre-admission identifier.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "origin": {
                    "description": "The location/organization from which the patient came before admission.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "admitSource": {
                    "description": "From where patient was admitted (physician referral, transfer).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reAdmission": {
                    "description": "Whether this hospitalization is a readmission and why if known.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "dietPreference": {
                    "description": "Diet preferences reported by the patient.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "specialCourtesy": {
                    "description": "Special courtesies (VIP, board member).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "specialArrangement": {
                    "description": "Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "destination": {
                    "description": "Location/organization to which the patient is discharged.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "dischargeDisposition": {
                    "description": "Category or kind of location after discharge.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Encounter_Location": {
            "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "location": {
                    "description": "The location where the encounter takes place.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "status": {
                    "description": "The status of the participants' presence at the specified location during the period specified. If the participant is no longer at the location, then the period will have an end date/time.", 
                    "$ref": "#/definitions/code"
                }, 
                "_status": {
                    "description": "Extensions for status", 
                    "$ref": "#/definitions/Element"
                }, 
                "physicalType": {
                    "description": "This will be used to specify the required levels (bed/ward/room/etc.) desired to be recorded to simplify either messaging or query.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "period": {
                    "description": "Time period during which the patient was present at the location.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "location"
            ], 
            "type": "object"
        }, 
        "EpisodeOfCare_StatusHistory": {
            "description": "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "status": {
                    "description": "planned | waitlist | active | onhold | finished | cancelled.", 
                    "$ref": "#/definitions/code"
                }, 
                "_status": {
                    "description": "Extensions for status", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "The period during this EpisodeOfCare that the specific status applied.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "period"
            ], 
            "type": "object"
        }, 
        "EpisodeOfCare_Diagnosis": {
            "description": "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "condition": {
                    "description": "A list of conditions/problems/diagnoses that this episode of care is intended to be providing care for.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "role": {
                    "description": "Role that this diagnosis has within the episode of care (e.g. admission, billing, discharge \u2026).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "rank": {
                    "description": "Ranking of the diagnosis (for each role type).", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_rank": {
                    "description": "Extensions for rank", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "condition"
            ], 
            "type": "object"
        }, 
        "Evidence_VariableDefinition": {
            "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "A text description or summary of the variable.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "note": {
                    "description": "Footnotes and/or explanatory notes.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }, 
                "variableRole": {
                    "description": "population | subpopulation | exposure | referenceExposure | measuredVariable | confounder.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "observed": {
                    "description": "Definition of the actual variable related to the statistic(s).", 
                    "$ref": "#/definitions/Reference"
                }, 
                "intended": {
                    "description": "Definition of the intended variable related to the Evidence.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "directnessMatch": {
                    "description": "Indication of quality of match between intended variable to actual variable.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "variableRole"
            ], 
            "type": "object"
        }, 
        "Evidence_Statistic": {
            "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "A description of the content value of the statistic.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "note": {
                    "description": "Footnotes and/or explanatory notes.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }, 
                "statisticType": {
                    "description": "Type of statistic, eg relative risk.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "category": {
                    "description": "When the measured variable is handled categorically, the category element is used to define which category the statistic is reporting.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "quantity": {
                    "description": "Statistic value.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "numberOfEvents": {
                    "description": "The number of events associated with the statistic, where the unit of analysis is different from numberAffected, sampleSize.knownDataCount and sampleSize.numberOfParticipants.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_numberOfEvents": {
                    "description": "Extensions for numberOfEvents", 
                    "$ref": "#/definitions/Element"
                }, 
                "numberAffected": {
                    "description": "The number of participants affected where the unit of analysis is the same as sampleSize.knownDataCount and sampleSize.numberOfParticipants.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_numberAffected": {
                    "description": "Extensions for numberAffected", 
                    "$ref": "#/definitions/Element"
                }, 
                "sampleSize": {
                    "description": "Number of samples in the statistic.", 
                    "$ref": "#/definitions/Evidence_SampleSize"
                }, 
                "attributeEstimate": {
                    "description": "A statistical attribute of the statistic such as a measure of heterogeneity.", 
                    "items": {
                        "$ref": "#/definitions/Evidence_AttributeEstimate"
                    }, 
                    "type": "array"
                }, 
                "modelCharacteristic": {
                    "description": "A component of the method to generate the statistic.", 
                    "items": {
                        "$ref": "#/definitions/Evidence_ModelCharacteristic"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Evidence_SampleSize": {
            "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Human-readable summary of population sample size.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "note": {
                    "description": "Footnote or explanatory note about the sample size.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }, 
                "numberOfStudies": {
                    "description": "Number of participants in the population.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_numberOfStudies": {
                    "description": "Extensions for numberOfStudies", 
                    "$ref": "#/definitions/Element"
                }, 
                "numberOfParticipants": {
                    "description": "A human-readable string to clarify or explain concepts about the sample size.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_numberOfParticipants": {
                    "description": "Extensions for numberOfParticipants", 
                    "$ref": "#/definitions/Element"
                }, 
                "knownDataCount": {
                    "description": "Number of participants with known results for measured variables.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_knownDataCount": {
                    "description": "Extensions for knownDataCount", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Evidence_AttributeEstimate": {
            "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Human-readable summary of the estimate.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "note": {
                    "description": "Footnote or explanatory note about the estimate.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of attribute estimate, eg confidence interval or p value.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "quantity": {
                    "description": "The singular quantity of the attribute estimate, for attribute estimates represented as single values; also used to report unit of measure.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "level": {
                    "description": "Use 95 for a 95% confidence interval.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_level": {
                    "description": "Extensions for level", 
                    "$ref": "#/definitions/Element"
                }, 
                "range": {
                    "description": "Lower bound of confidence interval.", 
                    "$ref": "#/definitions/Range"
                }, 
                "attributeEstimate": {
                    "description": "A nested attribute estimate; which is the attribute estimate of an attribute estimate.", 
                    "items": {
                        "$ref": "#/definitions/Evidence_AttributeEstimate"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Evidence_ModelCharacteristic": {
            "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Description of a component of the method to generate the statistic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "value": {
                    "description": "Further specification of the quantified value of the component of the method to generate the statistic.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "variable": {
                    "description": "A variable adjusted for in the adjusted analysis.", 
                    "items": {
                        "$ref": "#/definitions/Evidence_Variable"
                    }, 
                    "type": "array"
                }, 
                "attributeEstimate": {
                    "description": "An attribute of the statistic used as a model characteristic.", 
                    "items": {
                        "$ref": "#/definitions/Evidence_AttributeEstimate"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "Evidence_Variable": {
            "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "variableDefinition": {
                    "description": "Description of the variable.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "handling": {
                    "description": "How the variable is classified for use in adjusted analysis.", 
                    "$ref": "#/definitions/code"
                }, 
                "_handling": {
                    "description": "Extensions for handling", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCategory": {
                    "description": "Description for grouping of ordinal or polychotomous variables.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "valueQuantity": {
                    "description": "Discrete value for grouping of ordinal or polychotomous variables.", 
                    "items": {
                        "$ref": "#/definitions/Quantity"
                    }, 
                    "type": "array"
                }, 
                "valueRange": {
                    "description": "Range of values for grouping of ordinal or polychotomous variables.", 
                    "items": {
                        "$ref": "#/definitions/Range"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "variableDefinition"
            ], 
            "type": "object"
        }, 
        "Evidence_Certainty": {
            "description": "The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Textual description of certainty.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "note": {
                    "description": "Footnotes and/or explanatory notes.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Aspect of certainty being rated.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "rating": {
                    "description": "Assessment or judgement of the aspect.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "rater": {
                    "description": "Individual or group who did the rating.", 
                    "$ref": "#/definitions/string"
                }, 
                "_rater": {
                    "description": "Extensions for rater", 
                    "$ref": "#/definitions/Element"
                }, 
                "subcomponent": {
                    "description": "A domain or subdomain of certainty.", 
                    "items": {
                        "$ref": "#/definitions/Evidence_Certainty"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "EvidenceReport_Subject": {
            "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "characteristic": {
                    "description": "Characteristic.", 
                    "items": {
                        "$ref": "#/definitions/EvidenceReport_Characteristic"
                    }, 
                    "type": "array"
                }, 
                "note": {
                    "description": "Used for general notes and annotations not coded elsewhere.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "EvidenceReport_Characteristic": {
            "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Characteristic code.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueReference": {
                    "description": "Characteristic value.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "valueCodeableConcept": {
                    "description": "Characteristic value.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueBoolean": {
                    "description": "Characteristic value.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueQuantity": {
                    "description": "Characteristic value.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "Characteristic value.", 
                    "$ref": "#/definitions/Range"
                }, 
                "exclude": {
                    "description": "Is used to express not the characteristic.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_exclude": {
                    "description": "Extensions for exclude", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "Timeframe for the characteristic.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "EvidenceReport_RelatesTo": {
            "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The type of relationship that this composition has with anther composition or document.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "targetIdentifier": {
                    "description": "The target composition/document of this relationship.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "targetReference": {
                    "description": "The target composition/document of this relationship.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "EvidenceReport_Section": {
            "description": "The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "title": {
                    "description": "The label for this particular section.  This will be part of the rendered content for the document, and is often used to build a table of contents.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "focus": {
                    "description": "A code identifying the kind of content contained within the section. This should be consistent with the section title.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "focusReference": {
                    "description": "A definitional Resource identifying the kind of content contained within the section. This should be consistent with the section title.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "author": {
                    "description": "Identifies who is responsible for the information in this section, not necessarily who typed it in.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "text": {
                    "description": "A human-readable narrative that contains the attested content of the section, used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is peferred to contain sufficient detail to make it acceptable for a human to just read the narrative.", 
                    "$ref": "#/definitions/Narrative"
                }, 
                "mode": {
                    "description": "How the entry list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "orderedBy": {
                    "description": "Specifies the order applied to the items in the section entries.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "entryClassifier": {
                    "description": "Specifies any type of classification of the evidence report.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "entryReference": {
                    "description": "A reference to the actual resource from which the narrative in the section is derived.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "entryQuantity": {
                    "description": "Quantity as content.", 
                    "items": {
                        "$ref": "#/definitions/Quantity"
                    }, 
                    "type": "array"
                }, 
                "emptyReason": {
                    "description": "If the section is empty, why the list is empty. An empty section typically has some text explaining the empty reason.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "section": {
                    "description": "A nested sub-section within this section.", 
                    "items": {
                        "$ref": "#/definitions/EvidenceReport_Section"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "EvidenceVariable_Characteristic": {
            "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "A short, natural language description of the characteristic that could be used to communicate the criteria to an end-user.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "definitionReference": {
                    "description": "Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).", 
                    "$ref": "#/definitions/Reference"
                }, 
                "definitionCanonical": {
                    "description": "Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_definitionCanonical": {
                    "description": "Extensions for definitionCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "definitionCodeableConcept": {
                    "description": "Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "definitionExpression": {
                    "description": "Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).", 
                    "$ref": "#/definitions/Expression"
                }, 
                "method": {
                    "description": "Method used for describing characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "device": {
                    "description": "Device used for determining characteristic.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "exclude": {
                    "description": "When true, members with this characteristic are excluded from the element.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_exclude": {
                    "description": "Extensions for exclude", 
                    "$ref": "#/definitions/Element"
                }, 
                "timeFromStart": {
                    "description": "Indicates duration, period, or point of observation from the participant's study entry.", 
                    "$ref": "#/definitions/EvidenceVariable_TimeFromStart"
                }, 
                "groupMeasure": {
                    "description": "Indicates how elements are aggregated within the study effective period.", 
                    "$ref": "#/definitions/code"
                }, 
                "_groupMeasure": {
                    "description": "Extensions for groupMeasure", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "EvidenceVariable_TimeFromStart": {
            "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "A short, natural language description.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "quantity": {
                    "description": "Used to express the observation at a defined amount of time after the study start.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "range": {
                    "description": "Used to express the observation within a period after the study start.", 
                    "$ref": "#/definitions/Range"
                }, 
                "note": {
                    "description": "A human-readable string to clarify or explain concepts about the resource.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "EvidenceVariable_Category": {
            "description": "The EvidenceVariable resource describes an element that knowledge (Evidence) is about.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "A human-readable title or representation of the grouping.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCodeableConcept": {
                    "description": "Value or set of values that define the grouping.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "Value or set of values that define the grouping.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "Value or set of values that define the grouping.", 
                    "$ref": "#/definitions/Range"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExampleScenario_Actor": {
            "description": "Example of workflow instance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "actorId": {
                    "description": "ID or acronym of actor.", 
                    "$ref": "#/definitions/string"
                }, 
                "_actorId": {
                    "description": "Extensions for actorId", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type of actor - person or system.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "The name of the actor as shown in the page.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "The description of the actor.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExampleScenario_Instance": {
            "description": "Example of workflow instance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "resourceId": {
                    "description": "The id of the resource for referencing.", 
                    "$ref": "#/definitions/string"
                }, 
                "_resourceId": {
                    "description": "Extensions for resourceId", 
                    "$ref": "#/definitions/Element"
                }, 
                "resourceType": {
                    "description": "The type of the resource.", 
                    "$ref": "#/definitions/code"
                }, 
                "_resourceType": {
                    "description": "Extensions for resourceType", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "A short name for the resource instance.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "Human-friendly description of the resource instance.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "A specific version of the resource.", 
                    "items": {
                        "$ref": "#/definitions/ExampleScenario_Version"
                    }, 
                    "type": "array"
                }, 
                "containedInstance": {
                    "description": "Resources contained in the instance (e.g. the observations contained in a bundle).", 
                    "items": {
                        "$ref": "#/definitions/ExampleScenario_ContainedInstance"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExampleScenario_Version": {
            "description": "Example of workflow instance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "versionId": {
                    "description": "The identifier of a specific version of a resource.", 
                    "$ref": "#/definitions/string"
                }, 
                "_versionId": {
                    "description": "Extensions for versionId", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "The description of the resource version.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExampleScenario_ContainedInstance": {
            "description": "Example of workflow instance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "resourceId": {
                    "description": "Each resource contained in the instance.", 
                    "$ref": "#/definitions/string"
                }, 
                "_resourceId": {
                    "description": "Extensions for resourceId", 
                    "$ref": "#/definitions/Element"
                }, 
                "versionId": {
                    "description": "A specific version of a resource contained in the instance.", 
                    "$ref": "#/definitions/string"
                }, 
                "_versionId": {
                    "description": "Extensions for versionId", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExampleScenario_Process": {
            "description": "Example of workflow instance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "title": {
                    "description": "The diagram title of the group of operations.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A longer description of the group of operations.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "preConditions": {
                    "description": "Description of initial status before the process starts.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_preConditions": {
                    "description": "Extensions for preConditions", 
                    "$ref": "#/definitions/Element"
                }, 
                "postConditions": {
                    "description": "Description of final status after the process ends.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_postConditions": {
                    "description": "Extensions for postConditions", 
                    "$ref": "#/definitions/Element"
                }, 
                "step": {
                    "description": "Each step of the process.", 
                    "items": {
                        "$ref": "#/definitions/ExampleScenario_Step"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExampleScenario_Step": {
            "description": "Example of workflow instance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "process": {
                    "description": "Nested process.", 
                    "items": {
                        "$ref": "#/definitions/ExampleScenario_Process"
                    }, 
                    "type": "array"
                }, 
                "pause": {
                    "description": "If there is a pause in the flow.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_pause": {
                    "description": "Extensions for pause", 
                    "$ref": "#/definitions/Element"
                }, 
                "operation": {
                    "description": "Each interaction or action.", 
                    "$ref": "#/definitions/ExampleScenario_Operation"
                }, 
                "alternative": {
                    "description": "Indicates an alternative step that can be taken instead of the operations on the base step in exceptional/atypical circumstances.", 
                    "items": {
                        "$ref": "#/definitions/ExampleScenario_Alternative"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExampleScenario_Operation": {
            "description": "Example of workflow instance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "number": {
                    "description": "The sequential number of the interaction, e.g. 1.2.5.", 
                    "$ref": "#/definitions/string"
                }, 
                "_number": {
                    "description": "Extensions for number", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type of operation - CRUD.", 
                    "$ref": "#/definitions/string"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "The human-friendly name of the interaction.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "initiator": {
                    "description": "Who starts the transaction.", 
                    "$ref": "#/definitions/string"
                }, 
                "_initiator": {
                    "description": "Extensions for initiator", 
                    "$ref": "#/definitions/Element"
                }, 
                "receiver": {
                    "description": "Who receives the transaction.", 
                    "$ref": "#/definitions/string"
                }, 
                "_receiver": {
                    "description": "Extensions for receiver", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A comment to be inserted in the diagram.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "initiatorActive": {
                    "description": "Whether the initiator is deactivated right after the transaction.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_initiatorActive": {
                    "description": "Extensions for initiatorActive", 
                    "$ref": "#/definitions/Element"
                }, 
                "receiverActive": {
                    "description": "Whether the receiver is deactivated right after the transaction.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_receiverActive": {
                    "description": "Extensions for receiverActive", 
                    "$ref": "#/definitions/Element"
                }, 
                "request": {
                    "description": "Each resource instance used by the initiator.", 
                    "$ref": "#/definitions/ExampleScenario_ContainedInstance"
                }, 
                "response": {
                    "description": "Each resource instance used by the responder.", 
                    "$ref": "#/definitions/ExampleScenario_ContainedInstance"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExampleScenario_Alternative": {
            "description": "Example of workflow instance.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "title": {
                    "description": "The label to display for the alternative that gives a sense of the circumstance in which the alternative should be invoked.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A human-readable description of the alternative explaining when the alternative should occur rather than the base step.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "step": {
                    "description": "What happens in each alternative option.", 
                    "items": {
                        "$ref": "#/definitions/ExampleScenario_Step"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Related": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "claim": {
                    "description": "Reference to a related claim.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "relationship": {
                    "description": "A code to convey how the claims are related.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reference": {
                    "description": "An alternate organizational reference to the case or file to which this particular claim pertains.", 
                    "$ref": "#/definitions/Identifier"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Payee": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of Party to be reimbursed: Subscriber, provider, other.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "party": {
                    "description": "Reference to the individual or organization to whom any payment will be made.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExplanationOfBenefit_CareTeam": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify care team entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "provider": {
                    "description": "Member of the team who provided the product or service.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "responsible": {
                    "description": "The party who is billing and/or responsible for the claimed products or services.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_responsible": {
                    "description": "Extensions for responsible", 
                    "$ref": "#/definitions/Element"
                }, 
                "role": {
                    "description": "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "qualification": {
                    "description": "The qualification of the practitioner which is applicable for this service.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "provider"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_SupportingInfo": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify supporting information entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "category": {
                    "description": "The general class of the information supplied: information; exception; accident, employment; onset, etc.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "code": {
                    "description": "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "timingDate": {
                    "description": "The date when or period to which this information refers.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_timingDate": {
                    "description": "Extensions for timingDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "timingPeriod": {
                    "description": "The date when or period to which this information refers.", 
                    "$ref": "#/definitions/Period"
                }, 
                "valueBoolean": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueQuantity": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueAttachment": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueReference": {
                    "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "reason": {
                    "description": "Provides the reason in the situation where a reason code is required in addition to the content.", 
                    "$ref": "#/definitions/Coding"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "category"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Diagnosis": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify diagnosis entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "diagnosisCodeableConcept": {
                    "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "diagnosisReference": {
                    "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "type": {
                    "description": "When the condition was observed or the relative ranking.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "onAdmission": {
                    "description": "Indication of whether the diagnosis was present on admission to a facility.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "packageCode": {
                    "description": "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Procedure": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify procedure entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "When the condition was observed or the relative ranking.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "date": {
                    "description": "Date and optionally time the procedure was performed.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "procedureCodeableConcept": {
                    "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "procedureReference": {
                    "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "udi": {
                    "description": "Unique Device Identifiers associated with this line item.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Insurance": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "focal": {
                    "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_focal": {
                    "description": "Extensions for focal", 
                    "$ref": "#/definitions/Element"
                }, 
                "coverage": {
                    "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "preAuthRef": {
                    "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_preAuthRef": {
                    "description": "Extensions for preAuthRef", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "coverage"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Accident": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "date": {
                    "description": "Date of an accident event  related to the products and services contained in the claim.", 
                    "$ref": "#/definitions/date"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "locationAddress": {
                    "description": "The physical location of the accident event.", 
                    "$ref": "#/definitions/Address"
                }, 
                "locationReference": {
                    "description": "The physical location of the accident event.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Item": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A number to uniquely identify item entries.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "careTeamSequence": {
                    "description": "Care team members related to this service or product.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_careTeamSequence": {
                    "description": "Extensions for careTeamSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "diagnosisSequence": {
                    "description": "Diagnoses applicable for this service or product.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_diagnosisSequence": {
                    "description": "Extensions for diagnosisSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "procedureSequence": {
                    "description": "Procedures applicable for this service or product.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_procedureSequence": {
                    "description": "Extensions for procedureSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "informationSequence": {
                    "description": "Exceptions, special conditions and supporting information applicable for this service or product.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_informationSequence": {
                    "description": "Extensions for informationSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "revenue": {
                    "description": "The type of revenue or cost center providing the product and/or service.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "category": {
                    "description": "Code to identify the general type of benefits under which products and services are provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "programCode": {
                    "description": "Identifies the program under which this may be recovered.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "servicedDate": {
                    "description": "The date or dates when the service or product was supplied, performed or completed.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_servicedDate": {
                    "description": "Extensions for servicedDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "servicedPeriod": {
                    "description": "The date or dates when the service or product was supplied, performed or completed.", 
                    "$ref": "#/definitions/Period"
                }, 
                "locationCodeableConcept": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "locationAddress": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/Address"
                }, 
                "locationReference": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "udi": {
                    "description": "Unique Device Identifiers associated with this line item.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "bodySite": {
                    "description": "Physical service site on the patient (limb, tooth, etc.).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "subSite": {
                    "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "encounter": {
                    "description": "A billed item may include goods or services provided in multiple encounters.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
                    }, 
                    "type": "array"
                }, 
                "detail": {
                    "description": "Second-tier of goods and services.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_Detail"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Adjudication": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reason": {
                    "description": "A code supporting the understanding of the adjudication result and explaining variance from expected amount.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "amount": {
                    "description": "Monetary amount associated with the category.", 
                    "$ref": "#/definitions/Money"
                }, 
                "value": {
                    "description": "A non-monetary value associated with the category. Mutually exclusive to the amount element above.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "category"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Detail": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "revenue": {
                    "description": "The type of revenue or cost center providing the product and/or service.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "category": {
                    "description": "Code to identify the general type of benefits under which products and services are provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "programCode": {
                    "description": "Identifies the program under which this may be recovered.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "udi": {
                    "description": "Unique Device Identifiers associated with this line item.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
                    }, 
                    "type": "array"
                }, 
                "subDetail": {
                    "description": "Third-tier of goods and services.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_SubDetail"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_SubDetail": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "revenue": {
                    "description": "The type of revenue or cost center providing the product and/or service.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "category": {
                    "description": "Code to identify the general type of benefits under which products and services are provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "programCode": {
                    "description": "Identifies the program under which this may be recovered.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "udi": {
                    "description": "Unique Device Identifiers associated with this line item.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_AddItem": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "itemSequence": {
                    "description": "Claim items which this service line is intended to replace.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_itemSequence": {
                    "description": "Extensions for itemSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "detailSequence": {
                    "description": "The sequence number of the details within the claim item which this line is intended to replace.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_detailSequence": {
                    "description": "Extensions for detailSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "subDetailSequence": {
                    "description": "The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_subDetailSequence": {
                    "description": "Extensions for subDetailSequence", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "provider": {
                    "description": "The providers who are authorized for the services rendered to the patient.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "programCode": {
                    "description": "Identifies the program under which this may be recovered.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "servicedDate": {
                    "description": "The date or dates when the service or product was supplied, performed or completed.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_servicedDate": {
                    "description": "Extensions for servicedDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "servicedPeriod": {
                    "description": "The date or dates when the service or product was supplied, performed or completed.", 
                    "$ref": "#/definitions/Period"
                }, 
                "locationCodeableConcept": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "locationAddress": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/Address"
                }, 
                "locationReference": {
                    "description": "Where the product or service was provided.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "bodySite": {
                    "description": "Physical service site on the patient (limb, tooth, etc.).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "subSite": {
                    "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
                    }, 
                    "type": "array"
                }, 
                "detail": {
                    "description": "The second-tier service adjudications for payor added services.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_Detail1"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Detail1": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
                    }, 
                    "type": "array"
                }, 
                "subDetail": {
                    "description": "The third-tier service adjudications for payor added services.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_SubDetail1"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_SubDetail1": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "productOrService": {
                    "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "modifier": {
                    "description": "Item typification or modifiers codes to convey additional context for the product or service.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The number of repetitions of a service or product.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "unitPrice": {
                    "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.", 
                    "$ref": "#/definitions/Money"
                }, 
                "factor": {
                    "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "net": {
                    "description": "The quantity times the unit price for an additional service or product or charge.", 
                    "$ref": "#/definitions/Money"
                }, 
                "noteNumber": {
                    "description": "The numbers associated with notes below which apply to the adjudication of this item.", 
                    "items": {
                        "$ref": "#/definitions/positiveInt"
                    }, 
                    "type": "array"
                }, 
                "_noteNumber": {
                    "description": "Extensions for noteNumber", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "adjudication": {
                    "description": "The adjudication results.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_Adjudication"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "productOrService"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Total": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "amount": {
                    "description": "Monetary total amount associated with the category.", 
                    "$ref": "#/definitions/Money"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "amount", 
                "category"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Payment": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Whether this represents partial or complete payment of the benefits payable.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "adjustment": {
                    "description": "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.", 
                    "$ref": "#/definitions/Money"
                }, 
                "adjustmentReason": {
                    "description": "Reason for the payment adjustment.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "date": {
                    "description": "Estimated date the payment will be issued or the actual issue date of payment.", 
                    "$ref": "#/definitions/date"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "amount": {
                    "description": "Benefits payable less any payment adjustment.", 
                    "$ref": "#/definitions/Money"
                }, 
                "identifier": {
                    "description": "Issuer's unique identifier for the payment instrument.", 
                    "$ref": "#/definitions/Identifier"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExplanationOfBenefit_ProcessNote": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "number": {
                    "description": "A number to uniquely identify a note entry.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_number": {
                    "description": "Extensions for number", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The business purpose of the note text.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "The explanation or description associated with the processing.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "language": {
                    "description": "A code to define the language used in the text of the note.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ExplanationOfBenefit_BenefitBalance": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "Code to identify the general type of benefits under which products and services are provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "excluded": {
                    "description": "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_excluded": {
                    "description": "Extensions for excluded", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "A short name or tag for the benefit.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A richer description of the benefit or services covered.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "network": {
                    "description": "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "unit": {
                    "description": "Indicates if the benefits apply to an individual or to the family.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "term": {
                    "description": "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "financial": {
                    "description": "Benefits Used to date.", 
                    "items": {
                        "$ref": "#/definitions/ExplanationOfBenefit_Financial"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "category"
            ], 
            "type": "object"
        }, 
        "ExplanationOfBenefit_Financial": {
            "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Classification of benefit being provided.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "allowedUnsignedInt": {
                    "description": "The quantity of the benefit which is permitted under the coverage.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_allowedUnsignedInt": {
                    "description": "Extensions for allowedUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "allowedString": {
                    "description": "The quantity of the benefit which is permitted under the coverage.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_allowedString": {
                    "description": "Extensions for allowedString", 
                    "$ref": "#/definitions/Element"
                }, 
                "allowedMoney": {
                    "description": "The quantity of the benefit which is permitted under the coverage.", 
                    "$ref": "#/definitions/Money"
                }, 
                "usedUnsignedInt": {
                    "description": "The quantity of the benefit which have been consumed to date.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_usedUnsignedInt": {
                    "description": "Extensions for usedUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "usedMoney": {
                    "description": "The quantity of the benefit which have been consumed to date.", 
                    "$ref": "#/definitions/Money"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "FamilyMemberHistory_Condition": {
            "description": "Significant health conditions for a person related to the patient relevant in the context of care for the patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The actual condition specified. Could be a coded condition (like MI or Diabetes) or a less specific string like 'cancer' depending on how much is known about the condition and the capabilities of the creating system.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "outcome": {
                    "description": "Indicates what happened following the condition.  If the condition resulted in death, deceased date is captured on the relation.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "contributedToDeath": {
                    "description": "This condition contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_contributedToDeath": {
                    "description": "Extensions for contributedToDeath", 
                    "$ref": "#/definitions/Element"
                }, 
                "onsetAge": {
                    "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.", 
                    "$ref": "#/definitions/Age"
                }, 
                "onsetRange": {
                    "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.", 
                    "$ref": "#/definitions/Range"
                }, 
                "onsetPeriod": {
                    "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.", 
                    "$ref": "#/definitions/Period"
                }, 
                "onsetString": {
                    "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_onsetString": {
                    "description": "Extensions for onsetString", 
                    "$ref": "#/definitions/Element"
                }, 
                "note": {
                    "description": "An area where general notes can be placed about this specific condition.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "Goal_Target": {
            "description": "Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "measure": {
                    "description": "The parameter whose value is being tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "detailQuantity": {
                    "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "detailRange": {
                    "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.", 
                    "$ref": "#/definitions/Range"
                }, 
                "detailCodeableConcept": {
                    "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "detailString": {
                    "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_detailString": {
                    "description": "Extensions for detailString", 
                    "$ref": "#/definitions/Element"
                }, 
                "detailBoolean": {
                    "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_detailBoolean": {
                    "description": "Extensions for detailBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "detailInteger": {
                    "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_detailInteger": {
                    "description": "Extensions for detailInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "detailRatio": {
                    "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "dueDate": {
                    "description": "Indicates either the date or the duration after start by which the goal should be met.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_dueDate": {
                    "description": "Extensions for dueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "dueDuration": {
                    "description": "Indicates either the date or the duration after start by which the goal should be met.", 
                    "$ref": "#/definitions/Duration"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "GraphDefinition_Link": {
            "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "path": {
                    "description": "A FHIR expression that identifies one of FHIR References to other resources.", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "sliceName": {
                    "description": "Which slice (if profiled).", 
                    "$ref": "#/definitions/string"
                }, 
                "_sliceName": {
                    "description": "Extensions for sliceName", 
                    "$ref": "#/definitions/Element"
                }, 
                "min": {
                    "description": "Minimum occurrences for this link.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_min": {
                    "description": "Extensions for min", 
                    "$ref": "#/definitions/Element"
                }, 
                "max": {
                    "description": "Maximum occurrences for this link.", 
                    "$ref": "#/definitions/string"
                }, 
                "_max": {
                    "description": "Extensions for max", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "Information about why this link is of interest in this graph definition.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "target": {
                    "description": "Potential target for the link.", 
                    "items": {
                        "$ref": "#/definitions/GraphDefinition_Target"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "GraphDefinition_Target": {
            "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of resource this link refers to.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "params": {
                    "description": "A set of parameters to look up.", 
                    "$ref": "#/definitions/string"
                }, 
                "_params": {
                    "description": "Extensions for params", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "Profile for the target resource.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "compartment": {
                    "description": "Compartment Consistency Rules.", 
                    "items": {
                        "$ref": "#/definitions/GraphDefinition_Compartment"
                    }, 
                    "type": "array"
                }, 
                "link": {
                    "description": "Additional links from target resource.", 
                    "items": {
                        "$ref": "#/definitions/GraphDefinition_Link"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "GraphDefinition_Compartment": {
            "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "use": {
                    "description": "Defines how the compartment rule is used - whether it it is used to test whether resources are subject to the rule, or whether it is a rule that must be followed.", 
                    "$ref": "#/definitions/code"
                }, 
                "_use": {
                    "description": "Extensions for use", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "Identifies the compartment.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "rule": {
                    "description": "identical | matching | different | no-rule | custom.", 
                    "$ref": "#/definitions/code"
                }, 
                "_rule": {
                    "description": "Extensions for rule", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "Custom rule, as a FHIRPath expression.", 
                    "$ref": "#/definitions/string"
                }, 
                "_expression": {
                    "description": "Extensions for expression", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "Documentation for FHIRPath expression.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Group_Characteristic": {
            "description": "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A code that identifies the kind of trait being asserted.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "The value of the trait that holds (or does not hold - see 'exclude') for members of the group.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueBoolean": {
                    "description": "The value of the trait that holds (or does not hold - see 'exclude') for members of the group.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueQuantity": {
                    "description": "The value of the trait that holds (or does not hold - see 'exclude') for members of the group.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "The value of the trait that holds (or does not hold - see 'exclude') for members of the group.", 
                    "$ref": "#/definitions/Range"
                }, 
                "valueReference": {
                    "description": "The value of the trait that holds (or does not hold - see 'exclude') for members of the group.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "exclude": {
                    "description": "If true, indicates the characteristic is one that is NOT held by members of the group.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_exclude": {
                    "description": "Extensions for exclude", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "The period over which the characteristic is tested; e.g. the patient had an operation during the month of June.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "Group_Member": {
            "description": "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "entity": {
                    "description": "A reference to the entity that is a member of the group. Must be consistent with Group.type. If the entity is another group, then the type must be the same.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "period": {
                    "description": "The period that the member was in the group, if known.", 
                    "$ref": "#/definitions/Period"
                }, 
                "inactive": {
                    "description": "A flag to indicate that the member is no longer in the group, but previously may have been a member.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_inactive": {
                    "description": "Extensions for inactive", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "entity"
            ], 
            "type": "object"
        }, 
        "HealthcareService_Eligibility": {
            "description": "The details of a healthcare service available at a location.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Coded value for the eligibility.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "comment": {
                    "description": "Describes the eligibility conditions for the service.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_comment": {
                    "description": "Extensions for comment", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "HealthcareService_AvailableTime": {
            "description": "The details of a healthcare service available at a location.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "daysOfWeek": {
                    "description": "Indicates which days of the week are available between the start and end Times.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_daysOfWeek": {
                    "description": "Extensions for daysOfWeek", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "allDay": {
                    "description": "Is this always available? (hence times are irrelevant) e.g. 24 hour service.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_allDay": {
                    "description": "Extensions for allDay", 
                    "$ref": "#/definitions/Element"
                }, 
                "availableStartTime": {
                    "description": "The opening time of day. Note: If the AllDay flag is set, then this time is ignored.", 
                    "$ref": "#/definitions/time"
                }, 
                "_availableStartTime": {
                    "description": "Extensions for availableStartTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "availableEndTime": {
                    "description": "The closing time of day. Note: If the AllDay flag is set, then this time is ignored.", 
                    "$ref": "#/definitions/time"
                }, 
                "_availableEndTime": {
                    "description": "Extensions for availableEndTime", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "HealthcareService_NotAvailable": {
            "description": "The details of a healthcare service available at a location.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "The reason that can be presented to the user as to why this time is not available.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "during": {
                    "description": "Service is not available (seasonally or for a public holiday) from this date.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ImagingStudy_Series": {
            "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "uid": {
                    "description": "The DICOM Series Instance UID for the series.", 
                    "$ref": "#/definitions/id"
                }, 
                "_uid": {
                    "description": "Extensions for uid", 
                    "$ref": "#/definitions/Element"
                }, 
                "number": {
                    "description": "The numeric identifier of this series in the study.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_number": {
                    "description": "Extensions for number", 
                    "$ref": "#/definitions/Element"
                }, 
                "modality": {
                    "description": "The modality of this series sequence.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "description": {
                    "description": "A description of the series.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "numberOfInstances": {
                    "description": "Number of SOP Instances in the Study. The value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_numberOfInstances": {
                    "description": "Extensions for numberOfInstances", 
                    "$ref": "#/definitions/Element"
                }, 
                "endpoint": {
                    "description": "The network service providing access (e.g., query, view, or retrieval) for this series. See implementation notes for information about using DICOM endpoints. A series-level endpoint, if present, has precedence over a study-level endpoint with the same Endpoint.connectionType.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "bodySite": {
                    "description": "The anatomic structures examined. See DICOM Part 16 Annex L (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html) for DICOM to SNOMED-CT mappings. The bodySite may indicate the laterality of body part imaged; if so, it shall be consistent with any content of ImagingStudy.series.laterality.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "laterality": {
                    "description": "The laterality of the (possibly paired) anatomic structures examined. E.g., the left knee, both lungs, or unpaired abdomen. If present, shall be consistent with any laterality information indicated in ImagingStudy.series.bodySite.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "specimen": {
                    "description": "The specimen imaged, e.g., for whole slide imaging of a biopsy.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "started": {
                    "description": "The date and time the series was started.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_started": {
                    "description": "Extensions for started", 
                    "$ref": "#/definitions/Element"
                }, 
                "performer": {
                    "description": "Indicates who or what performed the series and how they were involved.", 
                    "items": {
                        "$ref": "#/definitions/ImagingStudy_Performer"
                    }, 
                    "type": "array"
                }, 
                "instance": {
                    "description": "A single SOP instance within the series, e.g. an image, or presentation state.", 
                    "items": {
                        "$ref": "#/definitions/ImagingStudy_Instance"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "modality"
            ], 
            "type": "object"
        }, 
        "ImagingStudy_Performer": {
            "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "function": {
                    "description": "Distinguishes the type of involvement of the performer in the series.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "actor": {
                    "description": "Indicates who or what performed the series.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "actor"
            ], 
            "type": "object"
        }, 
        "ImagingStudy_Instance": {
            "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "uid": {
                    "description": "The DICOM SOP Instance UID for this image or other DICOM content.", 
                    "$ref": "#/definitions/id"
                }, 
                "_uid": {
                    "description": "Extensions for uid", 
                    "$ref": "#/definitions/Element"
                }, 
                "sopClass": {
                    "description": "DICOM instance  type.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "number": {
                    "description": "The number of instance in the series.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_number": {
                    "description": "Extensions for number", 
                    "$ref": "#/definitions/Element"
                }, 
                "title": {
                    "description": "The description of the instance.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "sopClass"
            ], 
            "type": "object"
        }, 
        "Immunization_Performer": {
            "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "function": {
                    "description": "Describes the type of performance (e.g. ordering provider, administering provider, etc.).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "actor": {
                    "description": "The practitioner or organization who performed the action.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "actor"
            ], 
            "type": "object"
        }, 
        "Immunization_Education": {
            "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "documentType": {
                    "description": "Identifier of the material presented to the patient.", 
                    "$ref": "#/definitions/string"
                }, 
                "_documentType": {
                    "description": "Extensions for documentType", 
                    "$ref": "#/definitions/Element"
                }, 
                "reference": {
                    "description": "Reference pointer to the educational material given to the patient if the information was on line.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_reference": {
                    "description": "Extensions for reference", 
                    "$ref": "#/definitions/Element"
                }, 
                "publicationDate": {
                    "description": "Date the educational material was published.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_publicationDate": {
                    "description": "Extensions for publicationDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "presentationDate": {
                    "description": "Date the educational material was given to the patient.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_presentationDate": {
                    "description": "Extensions for presentationDate", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Immunization_Reaction": {
            "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "date": {
                    "description": "Date of reaction to the immunization.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "detail": {
                    "description": "Details of the reaction.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "reported": {
                    "description": "Self-reported indicator.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_reported": {
                    "description": "Extensions for reported", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Immunization_ProtocolApplied": {
            "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "series": {
                    "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority.", 
                    "$ref": "#/definitions/string"
                }, 
                "_series": {
                    "description": "Extensions for series", 
                    "$ref": "#/definitions/Element"
                }, 
                "authority": {
                    "description": "Indicates the authority who published the protocol (e.g. ACIP) that is being followed.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "targetDisease": {
                    "description": "The vaccine preventable disease the dose is being administered against.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "doseNumberPositiveInt": {
                    "description": "Nominal position in a series.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_doseNumberPositiveInt": {
                    "description": "Extensions for doseNumberPositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "doseNumberString": {
                    "description": "Nominal position in a series.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_doseNumberString": {
                    "description": "Extensions for doseNumberString", 
                    "$ref": "#/definitions/Element"
                }, 
                "seriesDosesPositiveInt": {
                    "description": "The recommended number of doses to achieve immunity.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_seriesDosesPositiveInt": {
                    "description": "Extensions for seriesDosesPositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "seriesDosesString": {
                    "description": "The recommended number of doses to achieve immunity.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_seriesDosesString": {
                    "description": "Extensions for seriesDosesString", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ImmunizationRecommendation_Recommendation": {
            "description": "A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "vaccineCode": {
                    "description": "Vaccine(s) or vaccine group that pertain to the recommendation.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "targetDisease": {
                    "description": "The targeted disease for the recommendation.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "contraindicatedVaccineCode": {
                    "description": "Vaccine(s) which should not be used to fulfill the recommendation.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "forecastStatus": {
                    "description": "Indicates the patient status with respect to the path to immunity for the target disease.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "forecastReason": {
                    "description": "The reason for the assigned forecast status.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "dateCriterion": {
                    "description": "Vaccine date recommendations.  For example, earliest date to administer, latest date to administer, etc.", 
                    "items": {
                        "$ref": "#/definitions/ImmunizationRecommendation_DateCriterion"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Contains the description about the protocol under which the vaccine was administered.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "series": {
                    "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority.", 
                    "$ref": "#/definitions/string"
                }, 
                "_series": {
                    "description": "Extensions for series", 
                    "$ref": "#/definitions/Element"
                }, 
                "doseNumberPositiveInt": {
                    "description": "Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose).", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_doseNumberPositiveInt": {
                    "description": "Extensions for doseNumberPositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "doseNumberString": {
                    "description": "Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose).", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_doseNumberString": {
                    "description": "Extensions for doseNumberString", 
                    "$ref": "#/definitions/Element"
                }, 
                "seriesDosesPositiveInt": {
                    "description": "The recommended number of doses to achieve immunity.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_seriesDosesPositiveInt": {
                    "description": "Extensions for seriesDosesPositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "seriesDosesString": {
                    "description": "The recommended number of doses to achieve immunity.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_seriesDosesString": {
                    "description": "Extensions for seriesDosesString", 
                    "$ref": "#/definitions/Element"
                }, 
                "supportingImmunization": {
                    "description": "Immunization event history and/or evaluation that supports the status and recommendation.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "supportingPatientInformation": {
                    "description": "Patient Information that supports the status and recommendation.  This includes patient observations, adverse reactions and allergy/intolerance information.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "forecastStatus"
            ], 
            "type": "object"
        }, 
        "ImmunizationRecommendation_DateCriterion": {
            "description": "A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Date classification of recommendation.  For example, earliest date to give, latest date to give, etc.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "value": {
                    "description": "The date whose meaning is specified by dateCriterion.code.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "ImplementationGuide_DependsOn": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "uri": {
                    "description": "A canonical reference to the Implementation guide for the dependency.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "packageId": {
                    "description": "The NPM package name for the Implementation Guide that this IG depends on.", 
                    "$ref": "#/definitions/id"
                }, 
                "_packageId": {
                    "description": "Extensions for packageId", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "The version of the IG that is depended on, when the correct version is required to understand the IG correctly.", 
                    "$ref": "#/definitions/string"
                }, 
                "_version": {
                    "description": "Extensions for version", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "uri"
            ], 
            "type": "object"
        }, 
        "ImplementationGuide_Global": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of resource that all instances must conform to.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "A reference to the profile that all instances must conform to.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "profile"
            ], 
            "type": "object"
        }, 
        "ImplementationGuide_Definition": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "grouping": {
                    "description": "A logical group of resources. Logical groups can be used when building pages.", 
                    "items": {
                        "$ref": "#/definitions/ImplementationGuide_Grouping"
                    }, 
                    "type": "array"
                }, 
                "resource": {
                    "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.", 
                    "items": {
                        "$ref": "#/definitions/ImplementationGuide_Resource"
                    }, 
                    "type": "array"
                }, 
                "page": {
                    "description": "A page / section in the implementation guide. The root page is the implementation guide home page.", 
                    "$ref": "#/definitions/ImplementationGuide_Page"
                }, 
                "parameter": {
                    "description": "Defines how IG is built by tools.", 
                    "items": {
                        "$ref": "#/definitions/ImplementationGuide_Parameter"
                    }, 
                    "type": "array"
                }, 
                "template": {
                    "description": "A template for building resources.", 
                    "items": {
                        "$ref": "#/definitions/ImplementationGuide_Template"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "resource"
            ], 
            "type": "object"
        }, 
        "ImplementationGuide_Grouping": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The human-readable title to display for the package of resources when rendering the implementation guide.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "Human readable text describing the package.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ImplementationGuide_Resource": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "reference": {
                    "description": "Where this resource is found.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "fhirVersion": {
                    "description": "Indicates the FHIR Version(s) this artifact is intended to apply to. If no versions are specified, the resource is assumed to apply to all the versions stated in ImplementationGuide.fhirVersion.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_fhirVersion": {
                    "description": "Extensions for fhirVersion", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "A human assigned name for the resource. All resources SHOULD have a name, but the name may be extracted from the resource (e.g. ValueSet.name).", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A description of the reason that a resource has been included in the implementation guide.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "exampleBoolean": {
                    "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_exampleBoolean": {
                    "description": "Extensions for exampleBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "exampleCanonical": {
                    "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_exampleCanonical": {
                    "description": "Extensions for exampleCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "groupingId": {
                    "description": "Reference to the id of the grouping this resource appears in.", 
                    "$ref": "#/definitions/id"
                }, 
                "_groupingId": {
                    "description": "Extensions for groupingId", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "reference"
            ], 
            "type": "object"
        }, 
        "ImplementationGuide_Page": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "nameUrl": {
                    "description": "The source address for the page.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_nameUrl": {
                    "description": "Extensions for nameUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "nameReference": {
                    "description": "The source address for the page.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "title": {
                    "description": "A short title used to represent this page in navigational structures such as table of contents, bread crumbs, etc.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "generation": {
                    "description": "A code that indicates how the page is generated.", 
                    "$ref": "#/definitions/code"
                }, 
                "_generation": {
                    "description": "Extensions for generation", 
                    "$ref": "#/definitions/Element"
                }, 
                "page": {
                    "description": "Nested Pages/Sections under this page.", 
                    "items": {
                        "$ref": "#/definitions/ImplementationGuide_Page"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ImplementationGuide_Parameter": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "apply | path-resource | path-pages | path-tx-cache | expansion-parameter | rule-broken-links | generate-xml | generate-json | generate-turtle | html-template.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "value": {
                    "description": "Value for named type.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ImplementationGuide_Template": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Type of template specified.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "source": {
                    "description": "The source location for the template.", 
                    "$ref": "#/definitions/string"
                }, 
                "_source": {
                    "description": "Extensions for source", 
                    "$ref": "#/definitions/Element"
                }, 
                "scope": {
                    "description": "The scope in which the template applies.", 
                    "$ref": "#/definitions/string"
                }, 
                "_scope": {
                    "description": "Extensions for scope", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ImplementationGuide_Manifest": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "rendering": {
                    "description": "A pointer to official web page, PDF or other rendering of the implementation guide.", 
                    "$ref": "#/definitions/url"
                }, 
                "_rendering": {
                    "description": "Extensions for rendering", 
                    "$ref": "#/definitions/Element"
                }, 
                "resource": {
                    "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.", 
                    "items": {
                        "$ref": "#/definitions/ImplementationGuide_Resource1"
                    }, 
                    "type": "array"
                }, 
                "page": {
                    "description": "Information about a page within the IG.", 
                    "items": {
                        "$ref": "#/definitions/ImplementationGuide_Page1"
                    }, 
                    "type": "array"
                }, 
                "image": {
                    "description": "Indicates a relative path to an image that exists within the IG.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_image": {
                    "description": "Extensions for image", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "other": {
                    "description": "Indicates the relative path of an additional non-page, non-image file that is part of the IG - e.g. zip, jar and similar files that could be the target of a hyperlink in a derived IG.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_other": {
                    "description": "Extensions for other", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "resource"
            ], 
            "type": "object"
        }, 
        "ImplementationGuide_Resource1": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "reference": {
                    "description": "Where this resource is found.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "exampleBoolean": {
                    "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_exampleBoolean": {
                    "description": "Extensions for exampleBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "exampleCanonical": {
                    "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_exampleCanonical": {
                    "description": "Extensions for exampleCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "relativePath": {
                    "description": "The relative path for primary page for this resource within the IG.", 
                    "$ref": "#/definitions/url"
                }, 
                "_relativePath": {
                    "description": "Extensions for relativePath", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "reference"
            ], 
            "type": "object"
        }, 
        "ImplementationGuide_Page1": {
            "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Relative path to the page.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "title": {
                    "description": "Label for the page intended for human display.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "anchor": {
                    "description": "The name of an anchor available on the page.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_anchor": {
                    "description": "Extensions for anchor", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Ingredient_Manufacturer": {
            "description": "An ingredient of a manufactured item or pharmaceutical product.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "role": {
                    "description": "The way in which this manufacturer is associated with the ingredient. For example whether it is a possible one (others allowed), or an exclusive authorized one for this ingredient. Note that this is not the manufacturing process role.", 
                    "$ref": "#/definitions/code"
                }, 
                "_role": {
                    "description": "Extensions for role", 
                    "$ref": "#/definitions/Element"
                }, 
                "manufacturer": {
                    "description": "An organization that manufactures this ingredient.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "manufacturer"
            ], 
            "type": "object"
        }, 
        "Ingredient_Substance": {
            "description": "An ingredient of a manufactured item or pharmaceutical product.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A code or full resource that represents the ingredient's substance.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "strength": {
                    "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. The allowed repetitions do not represent different strengths, but are different representations - mathematically equivalent - of a single strength.", 
                    "items": {
                        "$ref": "#/definitions/Ingredient_Strength"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "Ingredient_Strength": {
            "description": "An ingredient of a manufactured item or pharmaceutical product.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "presentationRatio": {
                    "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "presentationRatioRange": {
                    "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item. Unit of presentation refers to the quantity that the item occurs in e.g. a strength per tablet size, perhaps 'per 20mg' (the size of the tablet). It is not generally normalized as a unitary unit, which would be 'per mg').", 
                    "$ref": "#/definitions/RatioRange"
                }, 
                "textPresentation": {
                    "description": "A textual represention of either the whole of the presentation strength or a part of it - with the rest being in Strength.presentation as a ratio.", 
                    "$ref": "#/definitions/string"
                }, 
                "_textPresentation": {
                    "description": "Extensions for textPresentation", 
                    "$ref": "#/definitions/Element"
                }, 
                "concentrationRatio": {
                    "description": "The strength per unitary volume (or mass).", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "concentrationRatioRange": {
                    "description": "The strength per unitary volume (or mass).", 
                    "$ref": "#/definitions/RatioRange"
                }, 
                "textConcentration": {
                    "description": "A textual represention of either the whole of the concentration strength or a part of it - with the rest being in Strength.concentration as a ratio.", 
                    "$ref": "#/definitions/string"
                }, 
                "_textConcentration": {
                    "description": "Extensions for textConcentration", 
                    "$ref": "#/definitions/Element"
                }, 
                "measurementPoint": {
                    "description": "For when strength is measured at a particular point or distance. There are products where strength is measured at a particular point. For example, the strength of the ingredient in some inhalers is measured at a particular position relative to the point of aerosolization.", 
                    "$ref": "#/definitions/string"
                }, 
                "_measurementPoint": {
                    "description": "Extensions for measurementPoint", 
                    "$ref": "#/definitions/Element"
                }, 
                "country": {
                    "description": "The country or countries for which the strength range applies.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "referenceStrength": {
                    "description": "Strength expressed in terms of a reference substance. For when the ingredient strength is additionally expressed as equivalent to the strength of some other closely related substance (e.g. salt vs. base). Reference strength represents the strength (quantitative composition) of the active moiety of the active substance. There are situations when the active substance and active moiety are different, therefore both a strength and a reference strength are needed.", 
                    "items": {
                        "$ref": "#/definitions/Ingredient_ReferenceStrength"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Ingredient_ReferenceStrength": {
            "description": "An ingredient of a manufactured item or pharmaceutical product.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "substance": {
                    "description": "Relevant reference substance.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "strengthRatio": {
                    "description": "Strength expressed in terms of a reference substance.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "strengthRatioRange": {
                    "description": "Strength expressed in terms of a reference substance.", 
                    "$ref": "#/definitions/RatioRange"
                }, 
                "measurementPoint": {
                    "description": "For when strength is measured at a particular point or distance.", 
                    "$ref": "#/definitions/string"
                }, 
                "_measurementPoint": {
                    "description": "Extensions for measurementPoint", 
                    "$ref": "#/definitions/Element"
                }, 
                "country": {
                    "description": "The country or countries for which the strength range applies.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "InsurancePlan_Contact": {
            "description": "Details of a Health Insurance product/plan provided by an organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "purpose": {
                    "description": "Indicates a purpose for which the contact can be reached.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "name": {
                    "description": "A name associated with the contact.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "telecom": {
                    "description": "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.", 
                    "items": {
                        "$ref": "#/definitions/ContactPoint"
                    }, 
                    "type": "array"
                }, 
                "address": {
                    "description": "Visiting or postal addresses for the contact.", 
                    "$ref": "#/definitions/Address"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "InsurancePlan_Coverage": {
            "description": "Details of a Health Insurance product/plan provided by an organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of coverage  (Medical; Dental; Mental Health; Substance Abuse; Vision; Drug; Short Term; Long Term Care; Hospice; Home Health).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "network": {
                    "description": "Reference to the network that providing the type of coverage.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "benefit": {
                    "description": "Specific benefits under this type of coverage.", 
                    "items": {
                        "$ref": "#/definitions/InsurancePlan_Benefit"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type", 
                "benefit"
            ], 
            "type": "object"
        }, 
        "InsurancePlan_Benefit": {
            "description": "Details of a Health Insurance product/plan provided by an organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of benefit (primary care; speciality care; inpatient; outpatient).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "requirement": {
                    "description": "The referral requirements to have access/coverage for this benefit.", 
                    "$ref": "#/definitions/string"
                }, 
                "_requirement": {
                    "description": "Extensions for requirement", 
                    "$ref": "#/definitions/Element"
                }, 
                "limit": {
                    "description": "The specific limits on the benefit.", 
                    "items": {
                        "$ref": "#/definitions/InsurancePlan_Limit"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "InsurancePlan_Limit": {
            "description": "Details of a Health Insurance product/plan provided by an organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "The maximum amount of a service item a plan will pay for a covered benefit.  For examples. wellness visits, or eyeglasses.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "code": {
                    "description": "The specific limit on the benefit.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "InsurancePlan_Plan": {
            "description": "Details of a Health Insurance product/plan provided by an organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "Business identifiers assigned to this health insurance plan which remain constant as the resource is updated and propagates from server to server.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of plan. For example, \"Platinum\" or \"High Deductable\".", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "coverageArea": {
                    "description": "The geographic region in which a health insurance plan's benefits apply.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "network": {
                    "description": "Reference to the network that providing the type of coverage.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "generalCost": {
                    "description": "Overall costs associated with the plan.", 
                    "items": {
                        "$ref": "#/definitions/InsurancePlan_GeneralCost"
                    }, 
                    "type": "array"
                }, 
                "specificCost": {
                    "description": "Costs associated with the coverage provided by the product.", 
                    "items": {
                        "$ref": "#/definitions/InsurancePlan_SpecificCost"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "InsurancePlan_GeneralCost": {
            "description": "Details of a Health Insurance product/plan provided by an organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of cost.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "groupSize": {
                    "description": "Number of participants enrolled in the plan.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_groupSize": {
                    "description": "Extensions for groupSize", 
                    "$ref": "#/definitions/Element"
                }, 
                "cost": {
                    "description": "Value of the cost.", 
                    "$ref": "#/definitions/Money"
                }, 
                "comment": {
                    "description": "Additional information about the general costs associated with this plan.", 
                    "$ref": "#/definitions/string"
                }, 
                "_comment": {
                    "description": "Extensions for comment", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "InsurancePlan_SpecificCost": {
            "description": "Details of a Health Insurance product/plan provided by an organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "General category of benefit (Medical; Dental; Vision; Drug; Mental Health; Substance Abuse; Hospice, Home Health).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "benefit": {
                    "description": "List of the specific benefits under this category of benefit.", 
                    "items": {
                        "$ref": "#/definitions/InsurancePlan_Benefit1"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "category"
            ], 
            "type": "object"
        }, 
        "InsurancePlan_Benefit1": {
            "description": "Details of a Health Insurance product/plan provided by an organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of specific benefit (preventative; primary care office visit; speciality office visit; hospitalization; emergency room; urgent care).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "cost": {
                    "description": "List of the costs associated with a specific benefit.", 
                    "items": {
                        "$ref": "#/definitions/InsurancePlan_Cost"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "InsurancePlan_Cost": {
            "description": "Details of a Health Insurance product/plan provided by an organization.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of cost (copay; individual cap; family cap; coinsurance; deductible).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "applicability": {
                    "description": "Whether the cost applies to in-network or out-of-network providers (in-network; out-of-network; other).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "qualifiers": {
                    "description": "Additional information about the cost, such as information about funding sources (e.g. HSA, HRA, FSA, RRA).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "The actual cost value. (some of the costs may be represented as percentages rather than currency, e.g. 10% coinsurance).", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "Invoice_Participant": {
            "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "role": {
                    "description": "Describes the type of involvement (e.g. transcriptionist, creator etc.). If the invoice has been created automatically, the Participant may be a billing engine or another kind of device.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "actor": {
                    "description": "The device, practitioner, etc. who performed or participated in the service.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "actor"
            ], 
            "type": "object"
        }, 
        "Invoice_LineItem": {
            "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "sequence": {
                    "description": "Sequence in which the items appear on the invoice.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_sequence": {
                    "description": "Extensions for sequence", 
                    "$ref": "#/definitions/Element"
                }, 
                "chargeItemReference": {
                    "description": "The ChargeItem contains information such as the billing code, date, amount etc. If no further details are required for the lineItem, inline billing codes can be added using the CodeableConcept data type instead of the Reference.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "chargeItemCodeableConcept": {
                    "description": "The ChargeItem contains information such as the billing code, date, amount etc. If no further details are required for the lineItem, inline billing codes can be added using the CodeableConcept data type instead of the Reference.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "priceComponent": {
                    "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice as to how the prices have been calculated.", 
                    "items": {
                        "$ref": "#/definitions/Invoice_PriceComponent"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Invoice_PriceComponent": {
            "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "This code identifies the type of the component.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A code that identifies the component. Codes may be used to differentiate between kinds of taxes, surcharges, discounts etc.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "factor": {
                    "description": "The factor that has been applied on the base price for calculating this component.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_factor": {
                    "description": "Extensions for factor", 
                    "$ref": "#/definitions/Element"
                }, 
                "amount": {
                    "description": "The amount calculated for this component.", 
                    "$ref": "#/definitions/Money"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Linkage_Item": {
            "description": "Identifies two or more records (resource instances) that refer to the same real-world \"occurrence\".", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Distinguishes which item is \"source of truth\" (if any) and which items are no longer considered to be current representations.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "resource": {
                    "description": "The resource instance being linked as part of the group.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "resource"
            ], 
            "type": "object"
        }, 
        "List_Entry": {
            "description": "A list is a curated collection of resources.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "flag": {
                    "description": "The flag allows the system constructing the list to indicate the role and significance of the item in the list.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "deleted": {
                    "description": "True if this item is marked as deleted in the list.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_deleted": {
                    "description": "Extensions for deleted", 
                    "$ref": "#/definitions/Element"
                }, 
                "date": {
                    "description": "When this item was added to the list.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "item": {
                    "description": "A reference to the actual resource from which data was derived.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "item"
            ], 
            "type": "object"
        }, 
        "Location_Position": {
            "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "longitude": {
                    "description": "Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes below).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_longitude": {
                    "description": "Extensions for longitude", 
                    "$ref": "#/definitions/Element"
                }, 
                "latitude": {
                    "description": "Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes below).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_latitude": {
                    "description": "Extensions for latitude", 
                    "$ref": "#/definitions/Element"
                }, 
                "altitude": {
                    "description": "Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes below).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_altitude": {
                    "description": "Extensions for altitude", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Location_HoursOfOperation": {
            "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "daysOfWeek": {
                    "description": "Indicates which days of the week are available between the start and end Times.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_daysOfWeek": {
                    "description": "Extensions for daysOfWeek", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "allDay": {
                    "description": "The Location is open all day.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_allDay": {
                    "description": "Extensions for allDay", 
                    "$ref": "#/definitions/Element"
                }, 
                "openingTime": {
                    "description": "Time that the Location opens.", 
                    "$ref": "#/definitions/time"
                }, 
                "_openingTime": {
                    "description": "Extensions for openingTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "closingTime": {
                    "description": "Time that the Location closes.", 
                    "$ref": "#/definitions/time"
                }, 
                "_closingTime": {
                    "description": "Extensions for closingTime", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ManufacturedItemDefinition_Property": {
            "description": "The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A code expressing the type of characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueDate": {
                    "description": "A value for the characteristic.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "A value for the characteristic.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAttachment": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/Attachment"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "Measure_Group": {
            "description": "The Measure resource provides the definition of a quality measure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Indicates a meaning for the group. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing groups to be correlated across measures.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "description": {
                    "description": "The human readable description of this population group.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "population": {
                    "description": "A population criteria for the measure.", 
                    "items": {
                        "$ref": "#/definitions/Measure_Population"
                    }, 
                    "type": "array"
                }, 
                "stratifier": {
                    "description": "The stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path.", 
                    "items": {
                        "$ref": "#/definitions/Measure_Stratifier"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Measure_Population": {
            "description": "The Measure resource provides the definition of a quality measure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The type of population criteria.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "description": {
                    "description": "The human readable description of this population criteria.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "criteria": {
                    "description": "An expression that specifies the criteria for the population, typically the name of an expression in a library.", 
                    "$ref": "#/definitions/Expression"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "criteria"
            ], 
            "type": "object"
        }, 
        "Measure_Stratifier": {
            "description": "The Measure resource provides the definition of a quality measure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Indicates a meaning for the stratifier. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing stratifiers to be correlated across measures.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "description": {
                    "description": "The human readable description of this stratifier criteria.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "criteria": {
                    "description": "An expression that specifies the criteria for the stratifier. This is typically the name of an expression defined within a referenced library, but it may also be a path to a stratifier element.", 
                    "$ref": "#/definitions/Expression"
                }, 
                "component": {
                    "description": "A component of the stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path.", 
                    "items": {
                        "$ref": "#/definitions/Measure_Component"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Measure_Component": {
            "description": "The Measure resource provides the definition of a quality measure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Indicates a meaning for the stratifier component. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing stratifiers to be correlated across measures.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "description": {
                    "description": "The human readable description of this stratifier criteria component.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "criteria": {
                    "description": "An expression that specifies the criteria for this component of the stratifier. This is typically the name of an expression defined within a referenced library, but it may also be a path to a stratifier element.", 
                    "$ref": "#/definitions/Expression"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "criteria"
            ], 
            "type": "object"
        }, 
        "Measure_SupplementalData": {
            "description": "The Measure resource provides the definition of a quality measure.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Indicates a meaning for the supplemental data. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing supplemental data to be correlated across measures.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "usage": {
                    "description": "An indicator of the intended usage for the supplemental data element. Supplemental data indicates the data is additional information requested to augment the measure information. Risk adjustment factor indicates the data is additional information used to calculate risk adjustment factors when applying a risk model to the measure calculation.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "The human readable description of this supplemental data.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "criteria": {
                    "description": "The criteria for the supplemental data. This is typically the name of a valid expression defined within a referenced library, but it may also be a path to a specific data element. The criteria defines the data to be returned for this element.", 
                    "$ref": "#/definitions/Expression"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "criteria"
            ], 
            "type": "object"
        }, 
        "MeasureReport_Group": {
            "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The meaning of the population group as defined in the measure definition.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "population": {
                    "description": "The populations that make up the population group, one for each type of population appropriate for the measure.", 
                    "items": {
                        "$ref": "#/definitions/MeasureReport_Population"
                    }, 
                    "type": "array"
                }, 
                "measureScore": {
                    "description": "The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "stratifier": {
                    "description": "When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure.", 
                    "items": {
                        "$ref": "#/definitions/MeasureReport_Stratifier"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MeasureReport_Population": {
            "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The type of the population.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "count": {
                    "description": "The number of members of the population.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_count": {
                    "description": "Extensions for count", 
                    "$ref": "#/definitions/Element"
                }, 
                "subjectResults": {
                    "description": "This element refers to a List of subject level MeasureReport resources, one for each subject in this population.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MeasureReport_Stratifier": {
            "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The meaning of this stratifier, as defined in the measure definition.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "stratum": {
                    "description": "This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value.", 
                    "items": {
                        "$ref": "#/definitions/MeasureReport_Stratum"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MeasureReport_Stratum": {
            "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "value": {
                    "description": "The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "component": {
                    "description": "A stratifier component value.", 
                    "items": {
                        "$ref": "#/definitions/MeasureReport_Component"
                    }, 
                    "type": "array"
                }, 
                "population": {
                    "description": "The populations that make up the stratum, one for each type of population appropriate to the measure.", 
                    "items": {
                        "$ref": "#/definitions/MeasureReport_Population1"
                    }, 
                    "type": "array"
                }, 
                "measureScore": {
                    "description": "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MeasureReport_Component": {
            "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The code for the stratum component value.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "value": {
                    "description": "The stratum component value.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code", 
                "value"
            ], 
            "type": "object"
        }, 
        "MeasureReport_Population1": {
            "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The type of the population.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "count": {
                    "description": "The number of members of the population in this stratum.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_count": {
                    "description": "Extensions for count", 
                    "$ref": "#/definitions/Element"
                }, 
                "subjectResults": {
                    "description": "This element refers to a List of subject level MeasureReport resources, one for each subject in this population in this stratum.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Medication_Ingredient": {
            "description": "This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "itemCodeableConcept": {
                    "description": "The actual ingredient - either a substance (simple ingredient) or another medication of a medication.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "itemReference": {
                    "description": "The actual ingredient - either a substance (simple ingredient) or another medication of a medication.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "isActive": {
                    "description": "Indication of whether this ingredient affects the therapeutic action of the drug.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_isActive": {
                    "description": "Extensions for isActive", 
                    "$ref": "#/definitions/Element"
                }, 
                "strength": {
                    "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.", 
                    "$ref": "#/definitions/Ratio"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Medication_Batch": {
            "description": "This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "lotNumber": {
                    "description": "The assigned lot number of a batch of the specified product.", 
                    "$ref": "#/definitions/string"
                }, 
                "_lotNumber": {
                    "description": "Extensions for lotNumber", 
                    "$ref": "#/definitions/Element"
                }, 
                "expirationDate": {
                    "description": "When this specific batch of product will expire.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_expirationDate": {
                    "description": "Extensions for expirationDate", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationAdministration_Performer": {
            "description": "Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "function": {
                    "description": "Distinguishes the type of involvement of the performer in the medication administration.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "actor": {
                    "description": "Indicates who or what performed the medication administration.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "actor"
            ], 
            "type": "object"
        }, 
        "MedicationAdministration_Dosage": {
            "description": "Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "text": {
                    "description": "Free text dosage can be used for cases where the dosage administered is too complex to code. When coded dosage is present, the free text dosage may still be present for display to humans.\r\rThe dosage instructions should reflect the dosage of the medication that was administered.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "site": {
                    "description": "A coded specification of the anatomic site where the medication first entered the body.  For example, \"left arm\".", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "route": {
                    "description": "A code specifying the route or physiological path of administration of a therapeutic agent into or onto the patient.  For example, topical, intravenous, etc.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "method": {
                    "description": "A coded value indicating the method by which the medication is intended to be or was introduced into or on the body.  This attribute will most often NOT be populated.  It is most commonly used for injections.  For example, Slow Push, Deep IV.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "dose": {
                    "description": "The amount of the medication given at one administration event.   Use this value when the administration is essentially an instantaneous event such as a swallowing a tablet or giving an injection.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "rateRatio": {
                    "description": "Identifies the speed with which the medication was or will be introduced into the patient.  Typically, the rate for an infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a rate per unit of time, e.g. 500 ml per 2 hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "rateQuantity": {
                    "description": "Identifies the speed with which the medication was or will be introduced into the patient.  Typically, the rate for an infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a rate per unit of time, e.g. 500 ml per 2 hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationDispense_Performer": {
            "description": "Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "function": {
                    "description": "Distinguishes the type of performer in the dispense.  For example, date enterer, packager, final checker.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "actor": {
                    "description": "The device, practitioner, etc. who performed the action.  It should be assumed that the actor is the dispenser of the medication.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "actor"
            ], 
            "type": "object"
        }, 
        "MedicationDispense_Substitution": {
            "description": "Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "wasSubstituted": {
                    "description": "True if the dispenser dispensed a different drug or product from what was prescribed.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_wasSubstituted": {
                    "description": "Extensions for wasSubstituted", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "A code signifying whether a different drug was dispensed from what was prescribed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reason": {
                    "description": "Indicates the reason for the substitution (or lack of substitution) from what was prescribed.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "responsibleParty": {
                    "description": "The person or organization that has primary responsibility for the substitution.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationKnowledge_RelatedMedicationKnowledge": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The category of the associated medication knowledge reference.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reference": {
                    "description": "Associated documentation about the associated medication knowledge.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "reference", 
                "type"
            ], 
            "type": "object"
        }, 
        "MedicationKnowledge_Monograph": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The category of documentation about the medication. (e.g. professional monograph, patient education monograph).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "source": {
                    "description": "Associated documentation about the medication.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationKnowledge_Ingredient": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "itemCodeableConcept": {
                    "description": "The actual ingredient - either a substance (simple ingredient) or another medication.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "itemReference": {
                    "description": "The actual ingredient - either a substance (simple ingredient) or another medication.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "isActive": {
                    "description": "Indication of whether this ingredient affects the therapeutic action of the drug.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_isActive": {
                    "description": "Extensions for isActive", 
                    "$ref": "#/definitions/Element"
                }, 
                "strength": {
                    "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.", 
                    "$ref": "#/definitions/Ratio"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationKnowledge_Cost": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The category of the cost information.  For example, manufacturers' cost, patient cost, claim reimbursement cost, actual acquisition cost.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "source": {
                    "description": "The source or owner that assigns the price to the medication.", 
                    "$ref": "#/definitions/string"
                }, 
                "_source": {
                    "description": "Extensions for source", 
                    "$ref": "#/definitions/Element"
                }, 
                "cost": {
                    "description": "The price of the medication.", 
                    "$ref": "#/definitions/Money"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "cost", 
                "type"
            ], 
            "type": "object"
        }, 
        "MedicationKnowledge_MonitoringProgram": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Type of program under which the medication is monitored.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "name": {
                    "description": "Name of the reviewing program.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationKnowledge_AdministrationGuidelines": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "dosage": {
                    "description": "Dosage for the medication for the specific guidelines.", 
                    "items": {
                        "$ref": "#/definitions/MedicationKnowledge_Dosage"
                    }, 
                    "type": "array"
                }, 
                "indicationCodeableConcept": {
                    "description": "Indication for use that apply to the specific administration guidelines.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "indicationReference": {
                    "description": "Indication for use that apply to the specific administration guidelines.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "patientCharacteristics": {
                    "description": "Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).", 
                    "items": {
                        "$ref": "#/definitions/MedicationKnowledge_PatientCharacteristics"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationKnowledge_Dosage": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of dosage (for example, prophylaxis, maintenance, therapeutic, etc.).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "dosage": {
                    "description": "Dosage for the medication for the specific guidelines.", 
                    "items": {
                        "$ref": "#/definitions/Dosage"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "dosage", 
                "type"
            ], 
            "type": "object"
        }, 
        "MedicationKnowledge_PatientCharacteristics": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "characteristicCodeableConcept": {
                    "description": "Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "characteristicQuantity": {
                    "description": "Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "value": {
                    "description": "The specific characteristic (e.g. height, weight, gender, etc.).", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationKnowledge_MedicineClassification": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "classification": {
                    "description": "Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "MedicationKnowledge_Packaging": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A code that defines the specific type of packaging that the medication can be found in (e.g. blister sleeve, tube, bottle).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "quantity": {
                    "description": "The number of product units the package would contain if fully loaded.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationKnowledge_DrugCharacteristic": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A code specifying which characteristic of the medicine is being described (for example, colour, shape, imprint).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "Description of the characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueString": {
                    "description": "Description of the characteristic.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueQuantity": {
                    "description": "Description of the characteristic.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueBase64Binary": {
                    "description": "Description of the characteristic.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationKnowledge_Regulatory": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "regulatoryAuthority": {
                    "description": "The authority that is specifying the regulations.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "substitution": {
                    "description": "Specifies if changes are allowed when dispensing a medication from a regulatory perspective.", 
                    "items": {
                        "$ref": "#/definitions/MedicationKnowledge_Substitution"
                    }, 
                    "type": "array"
                }, 
                "schedule": {
                    "description": "Specifies the schedule of a medication in jurisdiction.", 
                    "items": {
                        "$ref": "#/definitions/MedicationKnowledge_Schedule"
                    }, 
                    "type": "array"
                }, 
                "maxDispense": {
                    "description": "The maximum number of units of the medication that can be dispensed in a period.", 
                    "$ref": "#/definitions/MedicationKnowledge_MaxDispense"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "regulatoryAuthority"
            ], 
            "type": "object"
        }, 
        "MedicationKnowledge_Substitution": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Specifies the type of substitution allowed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "allowed": {
                    "description": "Specifies if regulation allows for changes in the medication when dispensing.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_allowed": {
                    "description": "Extensions for allowed", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "MedicationKnowledge_Schedule": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "schedule": {
                    "description": "Specifies the specific drug schedule.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "schedule"
            ], 
            "type": "object"
        }, 
        "MedicationKnowledge_MaxDispense": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The maximum number of units of the medication that can be dispensed.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "period": {
                    "description": "The period that applies to the maximum number of units.", 
                    "$ref": "#/definitions/Duration"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "quantity"
            ], 
            "type": "object"
        }, 
        "MedicationKnowledge_Kinetics": {
            "description": "Information about a medication that is used to support knowledge.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "areaUnderCurve": {
                    "description": "The drug concentration measured at certain discrete points in time.", 
                    "items": {
                        "$ref": "#/definitions/Quantity"
                    }, 
                    "type": "array"
                }, 
                "lethalDose50": {
                    "description": "The median lethal dose of a drug.", 
                    "items": {
                        "$ref": "#/definitions/Quantity"
                    }, 
                    "type": "array"
                }, 
                "halfLifePeriod": {
                    "description": "The time required for any specified property (e.g., the concentration of a substance in the body) to decrease by half.", 
                    "$ref": "#/definitions/Duration"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationRequest_DispenseRequest": {
            "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "initialFill": {
                    "description": "Indicates the quantity or duration for the first dispense of the medication.", 
                    "$ref": "#/definitions/MedicationRequest_InitialFill"
                }, 
                "dispenseInterval": {
                    "description": "The minimum period of time that must occur between dispenses of the medication.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "validityPeriod": {
                    "description": "This indicates the validity period of a prescription (stale dating the Prescription).", 
                    "$ref": "#/definitions/Period"
                }, 
                "numberOfRepeatsAllowed": {
                    "description": "An integer indicating the number of times, in addition to the original dispense, (aka refills or repeats) that the patient can receive the prescribed medication. Usage Notes: This integer does not include the original order dispense. This means that if an order indicates dispense 30 tablets plus \"3 repeats\", then the order can be dispensed a total of 4 times and the patient can receive a total of 120 tablets.  A prescriber may explicitly say that zero refills are permitted after the initial dispense.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_numberOfRepeatsAllowed": {
                    "description": "Extensions for numberOfRepeatsAllowed", 
                    "$ref": "#/definitions/Element"
                }, 
                "quantity": {
                    "description": "The amount that is to be dispensed for one fill.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "expectedSupplyDuration": {
                    "description": "Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "performer": {
                    "description": "Indicates the intended dispensing Organization specified by the prescriber.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationRequest_InitialFill": {
            "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The amount or quantity to provide as part of the first dispense.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "duration": {
                    "description": "The length of time that the first dispense is expected to last.", 
                    "$ref": "#/definitions/Duration"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicationRequest_Substitution": {
            "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "allowedBoolean": {
                    "description": "True if the prescriber allows a different drug to be dispensed from what was prescribed.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_allowedBoolean": {
                    "description": "Extensions for allowedBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "allowedCodeableConcept": {
                    "description": "True if the prescriber allows a different drug to be dispensed from what was prescribed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "reason": {
                    "description": "Indicates the reason for the substitution, or why substitution must or must not be performed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicinalProductDefinition_Contact": {
            "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Allows the contact to be classified, for example QPPV, Pharmacovigilance Enquiry Information.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "contact": {
                    "description": "A product specific contact, person (in a role), or an organization.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "contact"
            ], 
            "type": "object"
        }, 
        "MedicinalProductDefinition_Name": {
            "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "productName": {
                    "description": "The full product name.", 
                    "$ref": "#/definitions/string"
                }, 
                "_productName": {
                    "description": "Extensions for productName", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "Type of product name, such as rINN, BAN, Proprietary, Non-Proprietary.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "namePart": {
                    "description": "Coding words or phrases of the name.", 
                    "items": {
                        "$ref": "#/definitions/MedicinalProductDefinition_NamePart"
                    }, 
                    "type": "array"
                }, 
                "countryLanguage": {
                    "description": "Country and jurisdiction where the name applies, and associated language.", 
                    "items": {
                        "$ref": "#/definitions/MedicinalProductDefinition_CountryLanguage"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicinalProductDefinition_NamePart": {
            "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "part": {
                    "description": "A fragment of a product name.", 
                    "$ref": "#/definitions/string"
                }, 
                "_part": {
                    "description": "Extensions for part", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "Identifying type for this part of the name (e.g. strength part).", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "MedicinalProductDefinition_CountryLanguage": {
            "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "country": {
                    "description": "Country code for where this name applies.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "jurisdiction": {
                    "description": "Jurisdiction code for where this name applies. A jurisdiction may be a sub- or supra-national entity (e.g. a state or a geographic region).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "language": {
                    "description": "Language code for this name.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "country", 
                "language"
            ], 
            "type": "object"
        }, 
        "MedicinalProductDefinition_CrossReference": {
            "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "product": {
                    "description": "Reference to another product, e.g. for linking authorised to investigational product.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "type": {
                    "description": "The type of relationship, for instance branded to generic, virtual to actual product, product to development product (investigational), parallel import version.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "product"
            ], 
            "type": "object"
        }, 
        "MedicinalProductDefinition_Operation": {
            "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of manufacturing operation e.g. manufacturing itself, re-packaging. For the authorization of this, a RegulatedAuthorization would point to the same plan or activity referenced here.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "effectiveDate": {
                    "description": "Date range of applicability.", 
                    "$ref": "#/definitions/Period"
                }, 
                "organization": {
                    "description": "The organization or establishment responsible for (or associated with) the particular process or step, examples include the manufacturer, importer, agent.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "confidentialityIndicator": {
                    "description": "Specifies whether this particular business or manufacturing process is considered proprietary or confidential.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MedicinalProductDefinition_Characteristic": {
            "description": "A medicinal product, being a substance or combination of substances that is intended to treat, prevent or diagnose a disease, or to restore, correct or modify physiological functions by exerting a pharmacological, immunological or metabolic action. This resource is intended to define and detail such products and their properties, for uses other than direct patient care (e.g. regulatory use, or drug catalogs).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A code expressing the type of characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueDate": {
                    "description": "A value for the characteristic.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "A value for the characteristic.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAttachment": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/Attachment"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "MessageDefinition_Focus": {
            "description": "Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The kind of resource that must be the focus for this message.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "A profile that reflects constraints for the focal resource (and potentially for related resources).", 
                    "$ref": "#/definitions/canonical"
                }, 
                "min": {
                    "description": "Identifies the minimum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition.", 
                    "$ref": "#/definitions/unsignedInt"
                }, 
                "_min": {
                    "description": "Extensions for min", 
                    "$ref": "#/definitions/Element"
                }, 
                "max": {
                    "description": "Identifies the maximum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition.", 
                    "$ref": "#/definitions/string"
                }, 
                "_max": {
                    "description": "Extensions for max", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MessageDefinition_AllowedResponse": {
            "description": "Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "message": {
                    "description": "A reference to the message definition that must be adhered to by this supported response.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "situation": {
                    "description": "Provides a description of the circumstances in which this response should be used (as opposed to one of the alternative responses).", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_situation": {
                    "description": "Extensions for situation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "message"
            ], 
            "type": "object"
        }, 
        "MessageHeader_Destination": {
            "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Human-readable name for the target system.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "target": {
                    "description": "Identifies the target end system in situations where the initial message transmission is to an intermediary system.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "endpoint": {
                    "description": "Indicates where the message should be routed to.", 
                    "$ref": "#/definitions/url"
                }, 
                "_endpoint": {
                    "description": "Extensions for endpoint", 
                    "$ref": "#/definitions/Element"
                }, 
                "receiver": {
                    "description": "Allows data conveyed by a message to be addressed to a particular person or department when routing to a specific application isn't sufficient.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MessageHeader_Source": {
            "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Human-readable name for the source system.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "software": {
                    "description": "May include configuration or other information useful in debugging.", 
                    "$ref": "#/definitions/string"
                }, 
                "_software": {
                    "description": "Extensions for software", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "Can convey versions of multiple systems in situations where a message passes through multiple hands.", 
                    "$ref": "#/definitions/string"
                }, 
                "_version": {
                    "description": "Extensions for version", 
                    "$ref": "#/definitions/Element"
                }, 
                "contact": {
                    "description": "An e-mail, phone, website or other contact point to use to resolve issues with message communications.", 
                    "$ref": "#/definitions/ContactPoint"
                }, 
                "endpoint": {
                    "description": "Identifies the routing target to send acknowledgements to.", 
                    "$ref": "#/definitions/url"
                }, 
                "_endpoint": {
                    "description": "Extensions for endpoint", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MessageHeader_Response": {
            "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "The MessageHeader.id of the message to which this message is a response.", 
                    "$ref": "#/definitions/id"
                }, 
                "_identifier": {
                    "description": "Extensions for identifier", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "Code that identifies the type of response to the message - whether it was successful or not, and whether it should be resent or not.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "details": {
                    "description": "Full details of any issues found in the message.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MolecularSequence_ReferenceSeq": {
            "description": "Raw data describing a biological sequence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "chromosome": {
                    "description": "Structural unit composed of a nucleic acid molecule which controls its own replication through the interaction of specific proteins at one or more origins of replication ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340)).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "genomeBuild": {
                    "description": "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'.  Version number must be included if a versioned release of a primary build was used.", 
                    "$ref": "#/definitions/string"
                }, 
                "_genomeBuild": {
                    "description": "Extensions for genomeBuild", 
                    "$ref": "#/definitions/Element"
                }, 
                "orientation": {
                    "description": "A relative reference to a DNA strand based on gene orientation. The strand that contains the open reading frame of the gene is the \"sense\" strand, and the opposite complementary strand is the \"antisense\" strand.", 
                    "$ref": "#/definitions/code"
                }, 
                "_orientation": {
                    "description": "Extensions for orientation", 
                    "$ref": "#/definitions/Element"
                }, 
                "referenceSeqId": {
                    "description": "Reference identifier of reference sequence submitted to NCBI. It must match the type in the MolecularSequence.type field. For example, the prefix, \u201cNG_\u201d identifies reference sequence for genes, \u201cNM_\u201d for messenger RNA transcripts, and \u201cNP_\u201d for amino acid sequences.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "referenceSeqPointer": {
                    "description": "A pointer to another MolecularSequence entity as reference sequence.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "referenceSeqString": {
                    "description": "A string like \"ACGT\".", 
                    "$ref": "#/definitions/string"
                }, 
                "_referenceSeqString": {
                    "description": "Extensions for referenceSeqString", 
                    "$ref": "#/definitions/Element"
                }, 
                "strand": {
                    "description": "An absolute reference to a strand. The Watson strand is the strand whose 5'-end is on the short arm of the chromosome, and the Crick strand as the one whose 5'-end is on the long arm.", 
                    "$ref": "#/definitions/code"
                }, 
                "_strand": {
                    "description": "Extensions for strand", 
                    "$ref": "#/definitions/Element"
                }, 
                "windowStart": {
                    "description": "Start position of the window on the reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_windowStart": {
                    "description": "Extensions for windowStart", 
                    "$ref": "#/definitions/Element"
                }, 
                "windowEnd": {
                    "description": "End position of the window on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_windowEnd": {
                    "description": "Extensions for windowEnd", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MolecularSequence_Variant": {
            "description": "Raw data describing a biological sequence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "start": {
                    "description": "Start position of the variant on the  reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_start": {
                    "description": "Extensions for start", 
                    "$ref": "#/definitions/Element"
                }, 
                "end": {
                    "description": "End position of the variant on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_end": {
                    "description": "Extensions for end", 
                    "$ref": "#/definitions/Element"
                }, 
                "observedAllele": {
                    "description": "An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).  Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the observed  sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.", 
                    "$ref": "#/definitions/string"
                }, 
                "_observedAllele": {
                    "description": "Extensions for observedAllele", 
                    "$ref": "#/definitions/Element"
                }, 
                "referenceAllele": {
                    "description": "An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)). Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the reference sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.", 
                    "$ref": "#/definitions/string"
                }, 
                "_referenceAllele": {
                    "description": "Extensions for referenceAllele", 
                    "$ref": "#/definitions/Element"
                }, 
                "cigar": {
                    "description": "Extended CIGAR string for aligning the sequence with reference bases. See detailed documentation [here](http://support.illumina.com/help/SequencingAnalysisWorkflow/Content/Vault/Informatics/Sequencing_Analysis/CASAVA/swSEQ_mCA_ExtendedCIGARFormat.htm).", 
                    "$ref": "#/definitions/string"
                }, 
                "_cigar": {
                    "description": "Extensions for cigar", 
                    "$ref": "#/definitions/Element"
                }, 
                "variantPointer": {
                    "description": "A pointer to an Observation containing variant information.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MolecularSequence_Quality": {
            "description": "Raw data describing a biological sequence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "INDEL / SNP / Undefined variant.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "standardSequence": {
                    "description": "Gold standard sequence used for comparing against.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "start": {
                    "description": "Start position of the sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_start": {
                    "description": "Extensions for start", 
                    "$ref": "#/definitions/Element"
                }, 
                "end": {
                    "description": "End position of the sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_end": {
                    "description": "Extensions for end", 
                    "$ref": "#/definitions/Element"
                }, 
                "score": {
                    "description": "The score of an experimentally derived feature such as a p-value ([SO:0001685](http://www.sequenceontology.org/browser/current_svn/term/SO:0001685)).", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "method": {
                    "description": "Which method is used to get sequence quality.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "truthTP": {
                    "description": "True positives, from the perspective of the truth data, i.e. the number of sites in the Truth Call Set for which there are paths through the Query Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_truthTP": {
                    "description": "Extensions for truthTP", 
                    "$ref": "#/definitions/Element"
                }, 
                "queryTP": {
                    "description": "True positives, from the perspective of the query data, i.e. the number of sites in the Query Call Set for which there are paths through the Truth Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_queryTP": {
                    "description": "Extensions for queryTP", 
                    "$ref": "#/definitions/Element"
                }, 
                "truthFN": {
                    "description": "False negatives, i.e. the number of sites in the Truth Call Set for which there is no path through the Query Call Set that is consistent with all of the alleles at this site, or sites for which there is an inaccurate genotype call for the event. Sites with correct variant but incorrect genotype are counted here.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_truthFN": {
                    "description": "Extensions for truthFN", 
                    "$ref": "#/definitions/Element"
                }, 
                "queryFP": {
                    "description": "False positives, i.e. the number of sites in the Query Call Set for which there is no path through the Truth Call Set that is consistent with this site. Sites with correct variant but incorrect genotype are counted here.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_queryFP": {
                    "description": "Extensions for queryFP", 
                    "$ref": "#/definitions/Element"
                }, 
                "gtFP": {
                    "description": "The number of false positives where the non-REF alleles in the Truth and Query Call Sets match (i.e. cases where the truth is 1/1 and the query is 0/1 or similar).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_gtFP": {
                    "description": "Extensions for gtFP", 
                    "$ref": "#/definitions/Element"
                }, 
                "precision": {
                    "description": "QUERY.TP / (QUERY.TP + QUERY.FP).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_precision": {
                    "description": "Extensions for precision", 
                    "$ref": "#/definitions/Element"
                }, 
                "recall": {
                    "description": "TRUTH.TP / (TRUTH.TP + TRUTH.FN).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_recall": {
                    "description": "Extensions for recall", 
                    "$ref": "#/definitions/Element"
                }, 
                "fScore": {
                    "description": "Harmonic mean of Recall and Precision, computed as: 2 * precision * recall / (precision + recall).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_fScore": {
                    "description": "Extensions for fScore", 
                    "$ref": "#/definitions/Element"
                }, 
                "roc": {
                    "description": "Receiver Operator Characteristic (ROC) Curve  to give sensitivity/specificity tradeoff.", 
                    "$ref": "#/definitions/MolecularSequence_Roc"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MolecularSequence_Roc": {
            "description": "Raw data describing a biological sequence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "score": {
                    "description": "Invidual data point representing the GQ (genotype quality) score threshold.", 
                    "items": {
                        "$ref": "#/definitions/integer"
                    }, 
                    "type": "array"
                }, 
                "_score": {
                    "description": "Extensions for score", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "numTP": {
                    "description": "The number of true positives if the GQ score threshold was set to \"score\" field value.", 
                    "items": {
                        "$ref": "#/definitions/integer"
                    }, 
                    "type": "array"
                }, 
                "_numTP": {
                    "description": "Extensions for numTP", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "numFP": {
                    "description": "The number of false positives if the GQ score threshold was set to \"score\" field value.", 
                    "items": {
                        "$ref": "#/definitions/integer"
                    }, 
                    "type": "array"
                }, 
                "_numFP": {
                    "description": "Extensions for numFP", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "numFN": {
                    "description": "The number of false negatives if the GQ score threshold was set to \"score\" field value.", 
                    "items": {
                        "$ref": "#/definitions/integer"
                    }, 
                    "type": "array"
                }, 
                "_numFN": {
                    "description": "Extensions for numFN", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "precision": {
                    "description": "Calculated precision if the GQ score threshold was set to \"score\" field value.", 
                    "items": {
                        "$ref": "#/definitions/decimal"
                    }, 
                    "type": "array"
                }, 
                "_precision": {
                    "description": "Extensions for precision", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "sensitivity": {
                    "description": "Calculated sensitivity if the GQ score threshold was set to \"score\" field value.", 
                    "items": {
                        "$ref": "#/definitions/decimal"
                    }, 
                    "type": "array"
                }, 
                "_sensitivity": {
                    "description": "Extensions for sensitivity", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "fMeasure": {
                    "description": "Calculated fScore if the GQ score threshold was set to \"score\" field value.", 
                    "items": {
                        "$ref": "#/definitions/decimal"
                    }, 
                    "type": "array"
                }, 
                "_fMeasure": {
                    "description": "Extensions for fMeasure", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MolecularSequence_Repository": {
            "description": "Raw data describing a biological sequence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Click and see / RESTful API / Need login to see / RESTful API with authentication / Other ways to see resource.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "url": {
                    "description": "URI of an external repository which contains further details about the genetics data.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "URI of an external repository which contains further details about the genetics data.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "datasetId": {
                    "description": "Id of the variant in this external repository. The server will understand how to use this id to call for more info about datasets in external repository.", 
                    "$ref": "#/definitions/string"
                }, 
                "_datasetId": {
                    "description": "Extensions for datasetId", 
                    "$ref": "#/definitions/Element"
                }, 
                "variantsetId": {
                    "description": "Id of the variantset in this external repository. The server will understand how to use this id to call for more info about variantsets in external repository.", 
                    "$ref": "#/definitions/string"
                }, 
                "_variantsetId": {
                    "description": "Extensions for variantsetId", 
                    "$ref": "#/definitions/Element"
                }, 
                "readsetId": {
                    "description": "Id of the read in this external repository.", 
                    "$ref": "#/definitions/string"
                }, 
                "_readsetId": {
                    "description": "Extensions for readsetId", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MolecularSequence_StructureVariant": {
            "description": "Raw data describing a biological sequence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "variantType": {
                    "description": "Information about chromosome structure variation DNA change type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "exact": {
                    "description": "Used to indicate if the outer and inner start-end values have the same meaning.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_exact": {
                    "description": "Extensions for exact", 
                    "$ref": "#/definitions/Element"
                }, 
                "length": {
                    "description": "Length of the variant chromosome.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_length": {
                    "description": "Extensions for length", 
                    "$ref": "#/definitions/Element"
                }, 
                "outer": {
                    "description": "Structural variant outer.", 
                    "$ref": "#/definitions/MolecularSequence_Outer"
                }, 
                "inner": {
                    "description": "Structural variant inner.", 
                    "$ref": "#/definitions/MolecularSequence_Inner"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MolecularSequence_Outer": {
            "description": "Raw data describing a biological sequence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "start": {
                    "description": "Structural variant outer start. If the coordinate system is either 0-based or 1-based, then start position is inclusive.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_start": {
                    "description": "Extensions for start", 
                    "$ref": "#/definitions/Element"
                }, 
                "end": {
                    "description": "Structural variant outer end. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_end": {
                    "description": "Extensions for end", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "MolecularSequence_Inner": {
            "description": "Raw data describing a biological sequence.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "start": {
                    "description": "Structural variant inner start. If the coordinate system is either 0-based or 1-based, then start position is inclusive.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_start": {
                    "description": "Extensions for start", 
                    "$ref": "#/definitions/Element"
                }, 
                "end": {
                    "description": "Structural variant inner end. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_end": {
                    "description": "Extensions for end", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "NamingSystem_UniqueId": {
            "description": "A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a \"System\" used within the Identifier and Coding data types.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Identifies the unique identifier scheme used for this particular identifier.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "value": {
                    "description": "The string that should be sent over the wire to identify the code system or identifier system.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "preferred": {
                    "description": "Indicates whether this identifier is the \"preferred\" identifier of this type.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_preferred": {
                    "description": "Extensions for preferred", 
                    "$ref": "#/definitions/Element"
                }, 
                "comment": {
                    "description": "Notes about the past or intended usage of this identifier.", 
                    "$ref": "#/definitions/string"
                }, 
                "_comment": {
                    "description": "Extensions for comment", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "Identifies the period of time over which this identifier is considered appropriate to refer to the naming system.  Outside of this window, the identifier might be non-deterministic.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "NutritionOrder_OralDiet": {
            "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The kind of diet or dietary restriction such as fiber restricted diet or diabetic diet.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "schedule": {
                    "description": "The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present.", 
                    "items": {
                        "$ref": "#/definitions/Timing"
                    }, 
                    "type": "array"
                }, 
                "nutrient": {
                    "description": "Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet.", 
                    "items": {
                        "$ref": "#/definitions/NutritionOrder_Nutrient"
                    }, 
                    "type": "array"
                }, 
                "texture": {
                    "description": "Class that describes any texture modifications required for the patient to safely consume various types of solid foods.", 
                    "items": {
                        "$ref": "#/definitions/NutritionOrder_Texture"
                    }, 
                    "type": "array"
                }, 
                "fluidConsistencyType": {
                    "description": "The required consistency (e.g. honey-thick, nectar-thick, thin, thickened.) of liquids or fluids served to the patient.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "instruction": {
                    "description": "Free text or additional instructions or information pertaining to the oral diet.", 
                    "$ref": "#/definitions/string"
                }, 
                "_instruction": {
                    "description": "Extensions for instruction", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "NutritionOrder_Nutrient": {
            "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifier": {
                    "description": "The nutrient that is being modified such as carbohydrate or sodium.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "amount": {
                    "description": "The quantity of the specified nutrient to include in diet.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "NutritionOrder_Texture": {
            "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifier": {
                    "description": "Any texture modifications (for solid foods) that should be made, e.g. easy to chew, chopped, ground, and pureed.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "foodType": {
                    "description": "The food type(s) (e.g. meats, all foods)  that the texture modification applies to.  This could be all foods types.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "NutritionOrder_Supplement": {
            "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The kind of nutritional supplement product required such as a high protein or pediatric clear liquid supplement.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "productName": {
                    "description": "The product or brand name of the nutritional supplement such as \"Acme Protein Shake\".", 
                    "$ref": "#/definitions/string"
                }, 
                "_productName": {
                    "description": "Extensions for productName", 
                    "$ref": "#/definitions/Element"
                }, 
                "schedule": {
                    "description": "The time period and frequency at which the supplement(s) should be given.  The supplement should be given for the combination of all schedules if more than one schedule is present.", 
                    "items": {
                        "$ref": "#/definitions/Timing"
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The amount of the nutritional supplement to be given.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "instruction": {
                    "description": "Free text or additional instructions or information pertaining to the oral supplement.", 
                    "$ref": "#/definitions/string"
                }, 
                "_instruction": {
                    "description": "Extensions for instruction", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "NutritionOrder_EnteralFormula": {
            "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "baseFormulaType": {
                    "description": "The type of enteral or infant formula such as an adult standard formula with fiber or a soy-based infant formula.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "baseFormulaProductName": {
                    "description": "The product or brand name of the enteral or infant formula product such as \"ACME Adult Standard Formula\".", 
                    "$ref": "#/definitions/string"
                }, 
                "_baseFormulaProductName": {
                    "description": "Extensions for baseFormulaProductName", 
                    "$ref": "#/definitions/Element"
                }, 
                "additiveType": {
                    "description": "Indicates the type of modular component such as protein, carbohydrate, fat or fiber to be provided in addition to or mixed with the base formula.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "additiveProductName": {
                    "description": "The product or brand name of the type of modular component to be added to the formula.", 
                    "$ref": "#/definitions/string"
                }, 
                "_additiveProductName": {
                    "description": "Extensions for additiveProductName", 
                    "$ref": "#/definitions/Element"
                }, 
                "caloricDensity": {
                    "description": "The amount of energy (calories) that the formula should provide per specified volume, typically per mL or fluid oz.  For example, an infant may require a formula that provides 24 calories per fluid ounce or an adult may require an enteral formula that provides 1.5 calorie/mL.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "routeofAdministration": {
                    "description": "The route or physiological path of administration into the patient's gastrointestinal  tract for purposes of providing the formula feeding, e.g. nasogastric tube.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "administration": {
                    "description": "Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours.", 
                    "items": {
                        "$ref": "#/definitions/NutritionOrder_Administration"
                    }, 
                    "type": "array"
                }, 
                "maxVolumeToDeliver": {
                    "description": "The maximum total quantity of formula that may be administered to a subject over the period of time, e.g. 1440 mL over 24 hours.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "administrationInstruction": {
                    "description": "Free text formula administration, feeding instructions or additional instructions or information.", 
                    "$ref": "#/definitions/string"
                }, 
                "_administrationInstruction": {
                    "description": "Extensions for administrationInstruction", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "NutritionOrder_Administration": {
            "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "schedule": {
                    "description": "The time period and frequency at which the enteral formula should be delivered to the patient.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "quantity": {
                    "description": "The volume of formula to provide to the patient per the specified administration schedule.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "rateQuantity": {
                    "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "rateRatio": {
                    "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.", 
                    "$ref": "#/definitions/Ratio"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "NutritionProduct_Nutrient": {
            "description": "A food or fluid product that is consumed by patients.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "item": {
                    "description": "The (relevant) nutrients in the product.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "amount": {
                    "description": "The amount of nutrient expressed in one or more units: X per pack / per serving / per dose.", 
                    "items": {
                        "$ref": "#/definitions/Ratio"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "NutritionProduct_Ingredient": {
            "description": "A food or fluid product that is consumed by patients.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "item": {
                    "description": "The ingredient contained in the product.", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "amount": {
                    "description": "The amount of ingredient that is in the product.", 
                    "items": {
                        "$ref": "#/definitions/Ratio"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "item"
            ], 
            "type": "object"
        }, 
        "NutritionProduct_ProductCharacteristic": {
            "description": "A food or fluid product that is consumed by patients.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A code specifying which characteristic of the product is being described (for example, colour, shape).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "The actual characteristic value corresponding to the type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueString": {
                    "description": "The actual characteristic value corresponding to the type.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueQuantity": {
                    "description": "The actual characteristic value corresponding to the type.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueBase64Binary": {
                    "description": "The actual characteristic value corresponding to the type.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAttachment": {
                    "description": "The actual characteristic value corresponding to the type.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueBoolean": {
                    "description": "The actual characteristic value corresponding to the type.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "NutritionProduct_Instance": {
            "description": "A food or fluid product that is consumed by patients.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The amount of items or instances that the resource considers, for instance when referring to 2 identical units together.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "identifier": {
                    "description": "The identifier for the physical instance, typically a serial number.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "lotNumber": {
                    "description": "The identification of the batch or lot of the product.", 
                    "$ref": "#/definitions/string"
                }, 
                "_lotNumber": {
                    "description": "Extensions for lotNumber", 
                    "$ref": "#/definitions/Element"
                }, 
                "expiry": {
                    "description": "The time after which the product is no longer expected to be in proper condition, or its use is not advised or not allowed.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_expiry": {
                    "description": "Extensions for expiry", 
                    "$ref": "#/definitions/Element"
                }, 
                "useBy": {
                    "description": "The time after which the product is no longer expected to be in proper condition, or its use is not advised or not allowed.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_useBy": {
                    "description": "Extensions for useBy", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Observation_ReferenceRange": {
            "description": "Measurements and simple assertions made about a patient, device or other subject.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "low": {
                    "description": "The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is <=2.3).", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "high": {
                    "description": "The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is >= 2.3).", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "type": {
                    "description": "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "appliesTo": {
                    "description": "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an \"AND\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "age": {
                    "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.", 
                    "$ref": "#/definitions/Range"
                }, 
                "text": {
                    "description": "Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation.  An example would be a reference value of \"Negative\" or a list or table of \"normals\".", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Observation_Component": {
            "description": "Measurements and simple assertions made about a patient, device or other subject.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Describes what was observed. Sometimes this is called the observation \"code\".", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueCodeableConcept": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueString": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueRange": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "$ref": "#/definitions/Range"
                }, 
                "valueRatio": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "valueSampledData": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "$ref": "#/definitions/SampledData"
                }, 
                "valueTime": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_valueTime": {
                    "description": "Extensions for valueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valuePeriod": {
                    "description": "The information determined as a result of making the observation, if the information has a simple value.", 
                    "$ref": "#/definitions/Period"
                }, 
                "dataAbsentReason": {
                    "description": "Provides a reason why the expected value in the element Observation.component.value[x] is missing.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "interpretation": {
                    "description": "A categorical assessment of an observation value.  For example, high, low, normal.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "referenceRange": {
                    "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.", 
                    "items": {
                        "$ref": "#/definitions/Observation_ReferenceRange"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "ObservationDefinition_QuantitativeDetails": {
            "description": "Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "customaryUnit": {
                    "description": "Customary unit used to report quantitative results of observations conforming to this ObservationDefinition.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "unit": {
                    "description": "SI unit used to report quantitative results of observations conforming to this ObservationDefinition.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "conversionFactor": {
                    "description": "Factor for converting value expressed with SI unit to value expressed with customary unit.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_conversionFactor": {
                    "description": "Extensions for conversionFactor", 
                    "$ref": "#/definitions/Element"
                }, 
                "decimalPrecision": {
                    "description": "Number of digits after decimal separator when the results of such observations are of type Quantity.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_decimalPrecision": {
                    "description": "Extensions for decimalPrecision", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ObservationDefinition_QualifiedInterval": {
            "description": "Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "The category of interval of values for continuous or ordinal observations conforming to this ObservationDefinition.", 
                    "$ref": "#/definitions/code"
                }, 
                "_category": {
                    "description": "Extensions for category", 
                    "$ref": "#/definitions/Element"
                }, 
                "range": {
                    "description": "The low and high values determining the interval. There may be only one of the two.", 
                    "$ref": "#/definitions/Range"
                }, 
                "context": {
                    "description": "Codes to indicate the health context the range applies to. For example, the normal or therapeutic range.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "appliesTo": {
                    "description": "Codes to indicate the target population this reference range applies to.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "gender": {
                    "description": "Sex of the population the range applies to.", 
                    "$ref": "#/definitions/code"
                }, 
                "_gender": {
                    "description": "Extensions for gender", 
                    "$ref": "#/definitions/Element"
                }, 
                "age": {
                    "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.", 
                    "$ref": "#/definitions/Range"
                }, 
                "gestationalAge": {
                    "description": "The gestational age to which this reference range is applicable, in the context of pregnancy.", 
                    "$ref": "#/definitions/Range"
                }, 
                "condition": {
                    "description": "Text based condition for which the reference range is valid.", 
                    "$ref": "#/definitions/string"
                }, 
                "_condition": {
                    "description": "Extensions for condition", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "OperationDefinition_Parameter": {
            "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name of used to identify the parameter.", 
                    "$ref": "#/definitions/code"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "use": {
                    "description": "Whether this is an input or an output parameter.", 
                    "$ref": "#/definitions/code"
                }, 
                "_use": {
                    "description": "Extensions for use", 
                    "$ref": "#/definitions/Element"
                }, 
                "min": {
                    "description": "The minimum number of times this parameter SHALL appear in the request or response.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_min": {
                    "description": "Extensions for min", 
                    "$ref": "#/definitions/Element"
                }, 
                "max": {
                    "description": "The maximum number of times this element is permitted to appear in the request or response.", 
                    "$ref": "#/definitions/string"
                }, 
                "_max": {
                    "description": "Extensions for max", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "Describes the meaning or use of this parameter.", 
                    "$ref": "#/definitions/string"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type for this parameter.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "targetProfile": {
                    "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this parameter refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.", 
                    "items": {
                        "$ref": "#/definitions/canonical"
                    }, 
                    "type": "array"
                }, 
                "searchType": {
                    "description": "How the parameter is understood as a search parameter. This is only used if the parameter type is 'string'.", 
                    "$ref": "#/definitions/code"
                }, 
                "_searchType": {
                    "description": "Extensions for searchType", 
                    "$ref": "#/definitions/Element"
                }, 
                "binding": {
                    "description": "Binds to a value set if this parameter is coded (code, Coding, CodeableConcept).", 
                    "$ref": "#/definitions/OperationDefinition_Binding"
                }, 
                "referencedFrom": {
                    "description": "Identifies other resource parameters within the operation invocation that are expected to resolve to this resource.", 
                    "items": {
                        "$ref": "#/definitions/OperationDefinition_ReferencedFrom"
                    }, 
                    "type": "array"
                }, 
                "part": {
                    "description": "The parts of a nested Parameter.", 
                    "items": {
                        "$ref": "#/definitions/OperationDefinition_Parameter"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "OperationDefinition_Binding": {
            "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "strength": {
                    "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.", 
                    "$ref": "#/definitions/code"
                }, 
                "_strength": {
                    "description": "Extensions for strength", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueSet": {
                    "description": "Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "valueSet"
            ], 
            "type": "object"
        }, 
        "OperationDefinition_ReferencedFrom": {
            "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "source": {
                    "description": "The name of the parameter or dot-separated path of parameter names pointing to the resource parameter that is expected to contain a reference to this resource.", 
                    "$ref": "#/definitions/string"
                }, 
                "_source": {
                    "description": "Extensions for source", 
                    "$ref": "#/definitions/Element"
                }, 
                "sourceId": {
                    "description": "The id of the element in the referencing resource that is expected to resolve to this resource.", 
                    "$ref": "#/definitions/string"
                }, 
                "_sourceId": {
                    "description": "Extensions for sourceId", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "OperationDefinition_Overload": {
            "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "parameterName": {
                    "description": "Name of parameter to include in overload.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_parameterName": {
                    "description": "Extensions for parameterName", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "comment": {
                    "description": "Comments to go on overload.", 
                    "$ref": "#/definitions/string"
                }, 
                "_comment": {
                    "description": "Extensions for comment", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "OperationOutcome_Issue": {
            "description": "A collection of error, warning, or information messages that result from a system action.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "severity": {
                    "description": "Indicates whether the issue indicates a variation from successful processing.", 
                    "$ref": "#/definitions/code"
                }, 
                "_severity": {
                    "description": "Extensions for severity", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "details": {
                    "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "diagnostics": {
                    "description": "Additional diagnostic information about the issue.", 
                    "$ref": "#/definitions/string"
                }, 
                "_diagnostics": {
                    "description": "Extensions for diagnostics", 
                    "$ref": "#/definitions/Element"
                }, 
                "location": {
                    "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_location": {
                    "description": "Extensions for location", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "expression": {
                    "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_expression": {
                    "description": "Extensions for expression", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Organization_Contact": {
            "description": "A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "purpose": {
                    "description": "Indicates a purpose for which the contact can be reached.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "name": {
                    "description": "A name associated with the contact.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "telecom": {
                    "description": "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.", 
                    "items": {
                        "$ref": "#/definitions/ContactPoint"
                    }, 
                    "type": "array"
                }, 
                "address": {
                    "description": "Visiting or postal addresses for the contact.", 
                    "$ref": "#/definitions/Address"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PackagedProductDefinition_LegalStatusOfSupply": {
            "description": "A medically related item or items, in a container or package.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The actual status of supply. Conveys in what situation this package type may be supplied for use.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "jurisdiction": {
                    "description": "The place where the legal status of supply applies. When not specified, this indicates it is unknown in this context.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PackagedProductDefinition_Package": {
            "description": "A medically related item or items, in a container or package.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "An identifier that is specific to this particular part of the packaging. Including possibly Data Carrier Identifier (a GS1 barcode).", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The physical type of the container of the items.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "quantity": {
                    "description": "The quantity of this level of packaging in the package that contains it. If specified, the outermost level is always 1.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_quantity": {
                    "description": "Extensions for quantity", 
                    "$ref": "#/definitions/Element"
                }, 
                "material": {
                    "description": "Material type of the package item.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "alternateMaterial": {
                    "description": "A possible alternate material for this part of the packaging, that is allowed to be used instead of the usual material (e.g. different types of plastic for a blister sleeve).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "shelfLifeStorage": {
                    "description": "Shelf Life and storage information.", 
                    "items": {
                        "$ref": "#/definitions/PackagedProductDefinition_ShelfLifeStorage"
                    }, 
                    "type": "array"
                }, 
                "manufacturer": {
                    "description": "Manufacturer of this package Item. When there are multiple it means these are all possible manufacturers.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "property": {
                    "description": "General characteristics of this item.", 
                    "items": {
                        "$ref": "#/definitions/PackagedProductDefinition_Property"
                    }, 
                    "type": "array"
                }, 
                "containedItem": {
                    "description": "The item(s) within the packaging.", 
                    "items": {
                        "$ref": "#/definitions/PackagedProductDefinition_ContainedItem"
                    }, 
                    "type": "array"
                }, 
                "package": {
                    "description": "Allows containers (and parts of containers) parwithin containers, still a single packaged product.  See also PackagedProductDefinition.package.containedItem.item(PackagedProductDefinition).", 
                    "items": {
                        "$ref": "#/definitions/PackagedProductDefinition_Package"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PackagedProductDefinition_ShelfLifeStorage": {
            "description": "A medically related item or items, in a container or package.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "This describes the shelf life, taking into account various scenarios such as shelf life of the packaged Medicinal Product itself, shelf life after transformation where necessary and shelf life after the first opening of a bottle, etc. The shelf life type shall be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "periodDuration": {
                    "description": "The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "periodString": {
                    "description": "The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_periodString": {
                    "description": "Extensions for periodString", 
                    "$ref": "#/definitions/Element"
                }, 
                "specialPrecautionsForStorage": {
                    "description": "Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary. The controlled term and the controlled term identifier shall be specified.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PackagedProductDefinition_Property": {
            "description": "A medically related item or items, in a container or package.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A code expressing the type of characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueDate": {
                    "description": "A value for the characteristic.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "A value for the characteristic.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAttachment": {
                    "description": "A value for the characteristic.", 
                    "$ref": "#/definitions/Attachment"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "PackagedProductDefinition_ContainedItem": {
            "description": "A medically related item or items, in a container or package.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "item": {
                    "description": "The actual item(s) of medication, as manufactured, or a device (typically, but not necessarily, a co-packaged one), or other medically related item (such as food, biologicals, raw materials, medical fluids, gases etc.), as contained in the package. This also allows another whole packaged product to be included, which is solely for the case where a package of other entire packages is wanted - such as a wholesale or distribution pack (for layers within one package, use PackagedProductDefinition.package.package).", 
                    "$ref": "#/definitions/CodeableReference"
                }, 
                "amount": {
                    "description": "The number of this type of item within this packaging.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "item"
            ], 
            "type": "object"
        }, 
        "Parameters_Parameter": {
            "description": "This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name of the parameter (reference to the operation definition).", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBase64Binary": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCanonical": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueCanonical": {
                    "description": "Extensions for valueCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCode": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_valueCode": {
                    "description": "Extensions for valueCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDate": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueId": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
                    "type": "string"
                }, 
                "_valueId": {
                    "description": "Extensions for valueId", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInstant": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_valueInstant": {
                    "description": "Extensions for valueInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueMarkdown": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueOid": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", 
                    "type": "string"
                }, 
                "_valueOid": {
                    "description": "Extensions for valueOid", 
                    "$ref": "#/definitions/Element"
                }, 
                "valuePositiveInt": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueTime": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_valueTime": {
                    "description": "Extensions for valueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUnsignedInt": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUri": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUri": {
                    "description": "Extensions for valueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUrl": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUrl": {
                    "description": "Extensions for valueUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUuid": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", 
                    "type": "string"
                }, 
                "_valueUuid": {
                    "description": "Extensions for valueUuid", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAddress": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Address"
                }, 
                "valueAge": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Age"
                }, 
                "valueAnnotation": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Annotation"
                }, 
                "valueAttachment": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueCodeableConcept": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCoding": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueContactPoint": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/ContactPoint"
                }, 
                "valueCount": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Count"
                }, 
                "valueDistance": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Distance"
                }, 
                "valueDuration": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "valueHumanName": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "valueIdentifier": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "valueMoney": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Money"
                }, 
                "valuePeriod": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Period"
                }, 
                "valueQuantity": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Range"
                }, 
                "valueRatio": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "valueReference": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "valueSampledData": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/SampledData"
                }, 
                "valueSignature": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Signature"
                }, 
                "valueTiming": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "valueContactDetail": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/ContactDetail"
                }, 
                "valueContributor": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Contributor"
                }, 
                "valueDataRequirement": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/DataRequirement"
                }, 
                "valueExpression": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Expression"
                }, 
                "valueParameterDefinition": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/ParameterDefinition"
                }, 
                "valueRelatedArtifact": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/RelatedArtifact"
                }, 
                "valueTriggerDefinition": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/TriggerDefinition"
                }, 
                "valueUsageContext": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/UsageContext"
                }, 
                "valueDosage": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Dosage"
                }, 
                "valueMeta": {
                    "description": "Conveys the content if the parameter is a data type.", 
                    "$ref": "#/definitions/Meta"
                }, 
                "resource": {
                    "description": "If the parameter is a whole resource.", 
                    "$ref": "#/definitions/ResourceList"
                }, 
                "part": {
                    "description": "A named part of a multi-part parameter.", 
                    "items": {
                        "$ref": "#/definitions/Parameters_Parameter"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Patient_Contact": {
            "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "relationship": {
                    "description": "The nature of the relationship between the patient and the contact person.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "A name associated with the contact person.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "telecom": {
                    "description": "A contact detail for the person, e.g. a telephone number or an email address.", 
                    "items": {
                        "$ref": "#/definitions/ContactPoint"
                    }, 
                    "type": "array"
                }, 
                "address": {
                    "description": "Address for the contact person.", 
                    "$ref": "#/definitions/Address"
                }, 
                "gender": {
                    "description": "Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.", 
                    "$ref": "#/definitions/code"
                }, 
                "_gender": {
                    "description": "Extensions for gender", 
                    "$ref": "#/definitions/Element"
                }, 
                "organization": {
                    "description": "Organization on behalf of which the contact is acting or for which the contact is working.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "period": {
                    "description": "The period during which this contact person or organization is valid to be contacted relating to this patient.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Patient_Communication": {
            "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "language": {
                    "description": "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. \"en\" for English, or \"en-US\" for American English versus \"en-EN\" for England English.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "preferred": {
                    "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_preferred": {
                    "description": "Extensions for preferred", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "language"
            ], 
            "type": "object"
        }, 
        "Patient_Link": {
            "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "other": {
                    "description": "The other patient resource that the link refers to.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "type": {
                    "description": "The type of link between this patient resource and another patient resource.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "other"
            ], 
            "type": "object"
        }, 
        "PaymentReconciliation_Detail": {
            "description": "This resource provides the details including amount of a payment and allocates the payment items being paid.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "Unique identifier for the current payment item for the referenced payable.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "predecessor": {
                    "description": "Unique identifier for the prior payment item for the referenced payable.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "type": {
                    "description": "Code to indicate the nature of the payment.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "request": {
                    "description": "A resource, such as a Claim, the evaluation of which could lead to payment.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "submitter": {
                    "description": "The party which submitted the claim or financial transaction.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "response": {
                    "description": "A resource, such as a ClaimResponse, which contains a commitment to payment.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "date": {
                    "description": "The date from the response resource containing a commitment to pay.", 
                    "$ref": "#/definitions/date"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "responsible": {
                    "description": "A reference to the individual who is responsible for inquiries regarding the response and its payment.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "payee": {
                    "description": "The party which is receiving the payment.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "amount": {
                    "description": "The monetary amount allocated from the total payment to the payable.", 
                    "$ref": "#/definitions/Money"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "PaymentReconciliation_ProcessNote": {
            "description": "This resource provides the details including amount of a payment and allocates the payment items being paid.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The business purpose of the note text.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "The explanation or description associated with the processing.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Person_Link": {
            "description": "Demographics and administrative information about a person independent of a specific health-related context.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "target": {
                    "description": "The resource to which this actual person is associated.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "assurance": {
                    "description": "Level of assurance that this link is associated with the target resource.", 
                    "$ref": "#/definitions/code"
                }, 
                "_assurance": {
                    "description": "Extensions for assurance", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "target"
            ], 
            "type": "object"
        }, 
        "PlanDefinition_Goal": {
            "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "category": {
                    "description": "Indicates a category the goal falls within.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "description": {
                    "description": "Human-readable and/or coded description of a specific desired objective of care, such as \"control blood pressure\" or \"negotiate an obstacle course\" or \"dance with child at wedding\".", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "priority": {
                    "description": "Identifies the expected level of importance associated with reaching/sustaining the defined goal.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "start": {
                    "description": "The event after which the goal should begin being pursued.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "addresses": {
                    "description": "Identifies problems, conditions, issues, or concerns the goal is intended to address.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "documentation": {
                    "description": "Didactic or other informational resources associated with the goal that provide further supporting information about the goal. Information resources can include inline text commentary and links to web resources.", 
                    "items": {
                        "$ref": "#/definitions/RelatedArtifact"
                    }, 
                    "type": "array"
                }, 
                "target": {
                    "description": "Indicates what should be done and within what timeframe.", 
                    "items": {
                        "$ref": "#/definitions/PlanDefinition_Target"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "description"
            ], 
            "type": "object"
        }, 
        "PlanDefinition_Target": {
            "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "measure": {
                    "description": "The parameter whose value is to be tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "detailQuantity": {
                    "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "detailRange": {
                    "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.", 
                    "$ref": "#/definitions/Range"
                }, 
                "detailCodeableConcept": {
                    "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%, or in the case of pharmaceutical quality - NMT 0.6%, Clear solution, etc. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "due": {
                    "description": "Indicates the timeframe after the start of the goal in which the goal should be met.", 
                    "$ref": "#/definitions/Duration"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PlanDefinition_Action": {
            "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "prefix": {
                    "description": "A user-visible prefix for the action.", 
                    "$ref": "#/definitions/string"
                }, 
                "_prefix": {
                    "description": "Extensions for prefix", 
                    "$ref": "#/definitions/Element"
                }, 
                "title": {
                    "description": "The textual description of the action displayed to a user. For example, when the action is a test to be performed, the title would be the title of the test such as Assay by HPLC.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A brief description of the action used to provide a summary to display to the user.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "textEquivalent": {
                    "description": "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.", 
                    "$ref": "#/definitions/string"
                }, 
                "_textEquivalent": {
                    "description": "Extensions for textEquivalent", 
                    "$ref": "#/definitions/Element"
                }, 
                "priority": {
                    "description": "Indicates how quickly the action should be addressed with respect to other actions.", 
                    "$ref": "#/definitions/code"
                }, 
                "_priority": {
                    "description": "Extensions for priority", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A code that provides a meaning, grouping, or classification for the action or action group. For example, a section may have a LOINC code for the section of a documentation template. In pharmaceutical quality, an action (Test) such as pH could be classified as a physical property.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "reason": {
                    "description": "A description of why this action is necessary or appropriate.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "documentation": {
                    "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.", 
                    "items": {
                        "$ref": "#/definitions/RelatedArtifact"
                    }, 
                    "type": "array"
                }, 
                "goalId": {
                    "description": "Identifies goals that this action supports. The reference must be to a goal element defined within this plan definition. In pharmaceutical quality, a goal represents acceptance criteria (Goal) for a given action (Test), so the goalId would be the unique id of a defined goal element establishing the acceptance criteria for the action.", 
                    "items": {
                        "$ref": "#/definitions/id"
                    }, 
                    "type": "array"
                }, 
                "_goalId": {
                    "description": "Extensions for goalId", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "subjectCodeableConcept": {
                    "description": "A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "subjectReference": {
                    "description": "A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "subjectCanonical": {
                    "description": "A code, group definition, or canonical reference that describes the intended subject of the action and its children, if any. Canonical references are allowed to support the definition of protocols for drug and substance quality specifications, and is allowed to reference a MedicinalProductDefinition, SubstanceDefinition, AdministrableProductDefinition, ManufacturedItemDefinition, or PackagedProductDefinition resource.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_subjectCanonical": {
                    "description": "Extensions for subjectCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "trigger": {
                    "description": "A description of when the action should be triggered.", 
                    "items": {
                        "$ref": "#/definitions/TriggerDefinition"
                    }, 
                    "type": "array"
                }, 
                "condition": {
                    "description": "An expression that describes applicability criteria or start/stop conditions for the action.", 
                    "items": {
                        "$ref": "#/definitions/PlanDefinition_Condition"
                    }, 
                    "type": "array"
                }, 
                "input": {
                    "description": "Defines input data requirements for the action.", 
                    "items": {
                        "$ref": "#/definitions/DataRequirement"
                    }, 
                    "type": "array"
                }, 
                "output": {
                    "description": "Defines the outputs of the action, if any.", 
                    "items": {
                        "$ref": "#/definitions/DataRequirement"
                    }, 
                    "type": "array"
                }, 
                "relatedAction": {
                    "description": "A relationship to another action such as \"before\" or \"30-60 minutes after start of\".", 
                    "items": {
                        "$ref": "#/definitions/PlanDefinition_RelatedAction"
                    }, 
                    "type": "array"
                }, 
                "timingDateTime": {
                    "description": "An optional value describing when the action should be performed.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_timingDateTime": {
                    "description": "Extensions for timingDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "timingAge": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Age"
                }, 
                "timingPeriod": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Period"
                }, 
                "timingDuration": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "timingRange": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Range"
                }, 
                "timingTiming": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "participant": {
                    "description": "Indicates who should participate in performing the action described.", 
                    "items": {
                        "$ref": "#/definitions/PlanDefinition_Participant"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of action to perform (create, update, remove).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "groupingBehavior": {
                    "description": "Defines the grouping behavior for the action and its children.", 
                    "$ref": "#/definitions/code"
                }, 
                "_groupingBehavior": {
                    "description": "Extensions for groupingBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "selectionBehavior": {
                    "description": "Defines the selection behavior for the action and its children.", 
                    "$ref": "#/definitions/code"
                }, 
                "_selectionBehavior": {
                    "description": "Extensions for selectionBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "requiredBehavior": {
                    "description": "Defines the required behavior for the action.", 
                    "$ref": "#/definitions/code"
                }, 
                "_requiredBehavior": {
                    "description": "Extensions for requiredBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "precheckBehavior": {
                    "description": "Defines whether the action should usually be preselected.", 
                    "$ref": "#/definitions/code"
                }, 
                "_precheckBehavior": {
                    "description": "Extensions for precheckBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "cardinalityBehavior": {
                    "description": "Defines whether the action can be selected multiple times.", 
                    "$ref": "#/definitions/code"
                }, 
                "_cardinalityBehavior": {
                    "description": "Extensions for cardinalityBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "definitionCanonical": {
                    "description": "A reference to an ActivityDefinition that describes the action to be taken in detail, or a PlanDefinition that describes a series of actions to be taken.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_definitionCanonical": {
                    "description": "Extensions for definitionCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "definitionUri": {
                    "description": "A reference to an ActivityDefinition that describes the action to be taken in detail, or a PlanDefinition that describes a series of actions to be taken.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_definitionUri": {
                    "description": "Extensions for definitionUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "transform": {
                    "description": "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "dynamicValue": {
                    "description": "Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient's weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.", 
                    "items": {
                        "$ref": "#/definitions/PlanDefinition_DynamicValue"
                    }, 
                    "type": "array"
                }, 
                "action": {
                    "description": "Sub actions that are contained within the action. The behavior of this action determines the functionality of the sub-actions. For example, a selection behavior of at-most-one indicates that of the sub-actions, at most one may be chosen as part of realizing the action definition.", 
                    "items": {
                        "$ref": "#/definitions/PlanDefinition_Action"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PlanDefinition_Condition": {
            "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "kind": {
                    "description": "The kind of condition.", 
                    "$ref": "#/definitions/code"
                }, 
                "_kind": {
                    "description": "Extensions for kind", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "An expression that returns true or false, indicating whether the condition is satisfied.", 
                    "$ref": "#/definitions/Expression"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PlanDefinition_RelatedAction": {
            "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "actionId": {
                    "description": "The element id of the related action.", 
                    "$ref": "#/definitions/id"
                }, 
                "_actionId": {
                    "description": "Extensions for actionId", 
                    "$ref": "#/definitions/Element"
                }, 
                "relationship": {
                    "description": "The relationship of this action to the related action.", 
                    "$ref": "#/definitions/code"
                }, 
                "_relationship": {
                    "description": "Extensions for relationship", 
                    "$ref": "#/definitions/Element"
                }, 
                "offsetDuration": {
                    "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "offsetRange": {
                    "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.", 
                    "$ref": "#/definitions/Range"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PlanDefinition_Participant": {
            "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of participant in the action.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "role": {
                    "description": "The role the participant should play in performing the described action.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PlanDefinition_DynamicValue": {
            "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "path": {
                    "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "An expression specifying the value of the customized element.", 
                    "$ref": "#/definitions/Expression"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Practitioner_Qualification": {
            "description": "A person who is directly or indirectly involved in the provisioning of healthcare.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "An identifier that applies to this person's qualification in this role.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Coded representation of the qualification.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "period": {
                    "description": "Period during which the qualification is valid.", 
                    "$ref": "#/definitions/Period"
                }, 
                "issuer": {
                    "description": "Organization that regulates and issues the qualification.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "code"
            ], 
            "type": "object"
        }, 
        "PractitionerRole_AvailableTime": {
            "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "daysOfWeek": {
                    "description": "Indicates which days of the week are available between the start and end Times.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_daysOfWeek": {
                    "description": "Extensions for daysOfWeek", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "allDay": {
                    "description": "Is this always available? (hence times are irrelevant) e.g. 24 hour service.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_allDay": {
                    "description": "Extensions for allDay", 
                    "$ref": "#/definitions/Element"
                }, 
                "availableStartTime": {
                    "description": "The opening time of day. Note: If the AllDay flag is set, then this time is ignored.", 
                    "$ref": "#/definitions/time"
                }, 
                "_availableStartTime": {
                    "description": "Extensions for availableStartTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "availableEndTime": {
                    "description": "The closing time of day. Note: If the AllDay flag is set, then this time is ignored.", 
                    "$ref": "#/definitions/time"
                }, 
                "_availableEndTime": {
                    "description": "Extensions for availableEndTime", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "PractitionerRole_NotAvailable": {
            "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "The reason that can be presented to the user as to why this time is not available.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "during": {
                    "description": "Service is not available (seasonally or for a public holiday) from this date.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Procedure_Performer": {
            "description": "An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "function": {
                    "description": "Distinguishes the type of involvement of the performer in the procedure. For example, surgeon, anaesthetist, endoscopist.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "actor": {
                    "description": "The practitioner who was involved in the procedure.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "onBehalfOf": {
                    "description": "The organization the device or practitioner was acting on behalf of.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "actor"
            ], 
            "type": "object"
        }, 
        "Procedure_FocalDevice": {
            "description": "An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "action": {
                    "description": "The kind of change that happened to the device during the procedure.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "manipulated": {
                    "description": "The device that was manipulated (changed) during the procedure.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "manipulated"
            ], 
            "type": "object"
        }, 
        "Provenance_Agent": {
            "description": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The participation the agent had with respect to the activity.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "role": {
                    "description": "The function of the agent with respect to the activity. The security role enabling the agent with respect to the activity.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "who": {
                    "description": "The individual, device or organization that participated in the event.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "onBehalfOf": {
                    "description": "The individual, device, or organization for whom the change was made.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "who"
            ], 
            "type": "object"
        }, 
        "Provenance_Entity": {
            "description": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "role": {
                    "description": "How the entity was used during the activity.", 
                    "$ref": "#/definitions/code"
                }, 
                "_role": {
                    "description": "Extensions for role", 
                    "$ref": "#/definitions/Element"
                }, 
                "what": {
                    "description": "Identity of the  Entity used. May be a logical or physical uri and maybe absolute or relative.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "agent": {
                    "description": "The entity is attributed to an agent to express the agent's responsibility for that entity, possibly along with other agents. This description can be understood as shorthand for saying that the agent was responsible for the activity which generated the entity.", 
                    "items": {
                        "$ref": "#/definitions/Provenance_Agent"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "what"
            ], 
            "type": "object"
        }, 
        "Questionnaire_Item": {
            "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "linkId": {
                    "description": "An identifier that is unique within the Questionnaire allowing linkage to the equivalent item in a QuestionnaireResponse resource.", 
                    "$ref": "#/definitions/string"
                }, 
                "_linkId": {
                    "description": "Extensions for linkId", 
                    "$ref": "#/definitions/Element"
                }, 
                "definition": {
                    "description": "This element is a URI that refers to an [ElementDefinition](elementdefinition.html) that provides information about this item, including information that might otherwise be included in the instance of the Questionnaire resource. A detailed description of the construction of the URI is shown in Comments, below. If this element is present then the following element values MAY be derived from the Element Definition if the corresponding elements of this Questionnaire resource instance have no value:\n\n* code (ElementDefinition.code) \n* type (ElementDefinition.type) \n* required (ElementDefinition.min) \n* repeats (ElementDefinition.max) \n* maxLength (ElementDefinition.maxLength) \n* answerValueSet (ElementDefinition.binding)\n* options (ElementDefinition.binding).", 
                    "$ref": "#/definitions/uri"
                }, 
                "_definition": {
                    "description": "Extensions for definition", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers).", 
                    "items": {
                        "$ref": "#/definitions/Coding"
                    }, 
                    "type": "array"
                }, 
                "prefix": {
                    "description": "A short label for a particular group, question or set of display text within the questionnaire used for reference by the individual completing the questionnaire.", 
                    "$ref": "#/definitions/string"
                }, 
                "_prefix": {
                    "description": "Extensions for prefix", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "The name of a section, the text of a question or text content for a display item.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type of questionnaire item this is - whether text for display, a grouping of other items or a particular type of data to be captured (string, integer, coded choice, etc.).", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "enableWhen": {
                    "description": "A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true.", 
                    "items": {
                        "$ref": "#/definitions/Questionnaire_EnableWhen"
                    }, 
                    "type": "array"
                }, 
                "enableBehavior": {
                    "description": "Controls how multiple enableWhen values are interpreted -  whether all or any must be true.", 
                    "$ref": "#/definitions/code"
                }, 
                "_enableBehavior": {
                    "description": "Extensions for enableBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "required": {
                    "description": "An indication, if true, that the item must be present in a \"completed\" QuestionnaireResponse.  If false, the item may be skipped when answering the questionnaire.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_required": {
                    "description": "Extensions for required", 
                    "$ref": "#/definitions/Element"
                }, 
                "repeats": {
                    "description": "An indication, if true, that the item may occur multiple times in the response, collecting multiple answers for questions or multiple sets of answers for groups.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_repeats": {
                    "description": "Extensions for repeats", 
                    "$ref": "#/definitions/Element"
                }, 
                "readOnly": {
                    "description": "An indication, when true, that the value cannot be changed by a human respondent to the Questionnaire.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_readOnly": {
                    "description": "Extensions for readOnly", 
                    "$ref": "#/definitions/Element"
                }, 
                "maxLength": {
                    "description": "The maximum number of characters that are permitted in the answer to be considered a \"valid\" QuestionnaireResponse.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_maxLength": {
                    "description": "Extensions for maxLength", 
                    "$ref": "#/definitions/Element"
                }, 
                "answerValueSet": {
                    "description": "A reference to a value set containing a list of codes representing permitted answers for a \"choice\" or \"open-choice\" question.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "answerOption": {
                    "description": "One of the permitted answers for a \"choice\" or \"open-choice\" question.", 
                    "items": {
                        "$ref": "#/definitions/Questionnaire_AnswerOption"
                    }, 
                    "type": "array"
                }, 
                "initial": {
                    "description": "One or more values that should be pre-populated in the answer when initially rendering the questionnaire for user input.", 
                    "items": {
                        "$ref": "#/definitions/Questionnaire_Initial"
                    }, 
                    "type": "array"
                }, 
                "item": {
                    "description": "Text, questions and other groups to be nested beneath a question or group.", 
                    "items": {
                        "$ref": "#/definitions/Questionnaire_Item"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Questionnaire_EnableWhen": {
            "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "question": {
                    "description": "The linkId for the question whose answer (or lack of answer) governs whether this item is enabled.", 
                    "$ref": "#/definitions/string"
                }, 
                "_question": {
                    "description": "Extensions for question", 
                    "$ref": "#/definitions/Element"
                }, 
                "operator": {
                    "description": "Specifies the criteria by which the question is enabled.", 
                    "$ref": "#/definitions/code"
                }, 
                "_operator": {
                    "description": "Extensions for operator", 
                    "$ref": "#/definitions/Element"
                }, 
                "answerBoolean": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_answerBoolean": {
                    "description": "Extensions for answerBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "answerDecimal": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_answerDecimal": {
                    "description": "Extensions for answerDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "answerInteger": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_answerInteger": {
                    "description": "Extensions for answerInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "answerDate": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_answerDate": {
                    "description": "Extensions for answerDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "answerDateTime": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_answerDateTime": {
                    "description": "Extensions for answerDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "answerTime": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_answerTime": {
                    "description": "Extensions for answerTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "answerString": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_answerString": {
                    "description": "Extensions for answerString", 
                    "$ref": "#/definitions/Element"
                }, 
                "answerCoding": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "answerQuantity": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "answerReference": {
                    "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Questionnaire_AnswerOption": {
            "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "valueInteger": {
                    "description": "A potential answer that's allowed as the answer to this question.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDate": {
                    "description": "A potential answer that's allowed as the answer to this question.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueTime": {
                    "description": "A potential answer that's allowed as the answer to this question.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_valueTime": {
                    "description": "Extensions for valueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "A potential answer that's allowed as the answer to this question.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCoding": {
                    "description": "A potential answer that's allowed as the answer to this question.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueReference": {
                    "description": "A potential answer that's allowed as the answer to this question.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "initialSelected": {
                    "description": "Indicates whether the answer value is selected when the list of possible answers is initially shown.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_initialSelected": {
                    "description": "Extensions for initialSelected", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Questionnaire_Initial": {
            "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "valueBoolean": {
                    "description": "The actual value to for an initial answer.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "The actual value to for an initial answer.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "The actual value to for an initial answer.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDate": {
                    "description": "The actual value to for an initial answer.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "The actual value to for an initial answer.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueTime": {
                    "description": "The actual value to for an initial answer.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_valueTime": {
                    "description": "Extensions for valueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "The actual value to for an initial answer.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUri": {
                    "description": "The actual value to for an initial answer.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUri": {
                    "description": "Extensions for valueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAttachment": {
                    "description": "The actual value to for an initial answer.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueCoding": {
                    "description": "The actual value to for an initial answer.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueQuantity": {
                    "description": "The actual value to for an initial answer.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueReference": {
                    "description": "The actual value to for an initial answer.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "QuestionnaireResponse_Item": {
            "description": "A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "linkId": {
                    "description": "The item from the Questionnaire that corresponds to this item in the QuestionnaireResponse resource.", 
                    "$ref": "#/definitions/string"
                }, 
                "_linkId": {
                    "description": "Extensions for linkId", 
                    "$ref": "#/definitions/Element"
                }, 
                "definition": {
                    "description": "A reference to an [ElementDefinition](elementdefinition.html) that provides the details for the item.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_definition": {
                    "description": "Extensions for definition", 
                    "$ref": "#/definitions/Element"
                }, 
                "text": {
                    "description": "Text that is displayed above the contents of the group or as the text of the question being answered.", 
                    "$ref": "#/definitions/string"
                }, 
                "_text": {
                    "description": "Extensions for text", 
                    "$ref": "#/definitions/Element"
                }, 
                "answer": {
                    "description": "The respondent's answer(s) to the question.", 
                    "items": {
                        "$ref": "#/definitions/QuestionnaireResponse_Answer"
                    }, 
                    "type": "array"
                }, 
                "item": {
                    "description": "Questions or sub-groups nested beneath a question or group.", 
                    "items": {
                        "$ref": "#/definitions/QuestionnaireResponse_Item"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "QuestionnaireResponse_Answer": {
            "description": "A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "valueBoolean": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDate": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueTime": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_valueTime": {
                    "description": "Extensions for valueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUri": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUri": {
                    "description": "Extensions for valueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAttachment": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueCoding": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueQuantity": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueReference": {
                    "description": "The answer (or one of the answers) provided by the respondent to the question.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "item": {
                    "description": "Nested groups and/or questions found within this particular answer.", 
                    "items": {
                        "$ref": "#/definitions/QuestionnaireResponse_Item"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "RegulatedAuthorization_Case": {
            "description": "Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "Identifier by which this case can be referenced.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "type": {
                    "description": "The defining type of case.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "status": {
                    "description": "The status associated with the case.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "datePeriod": {
                    "description": "Relevant date for this case.", 
                    "$ref": "#/definitions/Period"
                }, 
                "dateDateTime": {
                    "description": "Relevant date for this case.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_dateDateTime": {
                    "description": "Extensions for dateDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "application": {
                    "description": "A regulatory submission from an organization to a regulator, as part of an assessing case. Multiple applications may occur over time, with more or different information to support or modify the submission or the authorization. The applications can be considered as steps within the longer running case or procedure for this authorization process.", 
                    "items": {
                        "$ref": "#/definitions/RegulatedAuthorization_Case"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "RelatedPerson_Communication": {
            "description": "Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "language": {
                    "description": "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. \"en\" for English, or \"en-US\" for American English versus \"en-EN\" for England English.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "preferred": {
                    "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_preferred": {
                    "description": "Extensions for preferred", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "language"
            ], 
            "type": "object"
        }, 
        "RequestGroup_Action": {
            "description": "A group of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "prefix": {
                    "description": "A user-visible prefix for the action.", 
                    "$ref": "#/definitions/string"
                }, 
                "_prefix": {
                    "description": "Extensions for prefix", 
                    "$ref": "#/definitions/Element"
                }, 
                "title": {
                    "description": "The title of the action displayed to a user.", 
                    "$ref": "#/definitions/string"
                }, 
                "_title": {
                    "description": "Extensions for title", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A short description of the action used to provide a summary to display to the user.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "textEquivalent": {
                    "description": "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.", 
                    "$ref": "#/definitions/string"
                }, 
                "_textEquivalent": {
                    "description": "Extensions for textEquivalent", 
                    "$ref": "#/definitions/Element"
                }, 
                "priority": {
                    "description": "Indicates how quickly the action should be addressed with respect to other actions.", 
                    "$ref": "#/definitions/code"
                }, 
                "_priority": {
                    "description": "Extensions for priority", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "documentation": {
                    "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.", 
                    "items": {
                        "$ref": "#/definitions/RelatedArtifact"
                    }, 
                    "type": "array"
                }, 
                "condition": {
                    "description": "An expression that describes applicability criteria, or start/stop conditions for the action.", 
                    "items": {
                        "$ref": "#/definitions/RequestGroup_Condition"
                    }, 
                    "type": "array"
                }, 
                "relatedAction": {
                    "description": "A relationship to another action such as \"before\" or \"30-60 minutes after start of\".", 
                    "items": {
                        "$ref": "#/definitions/RequestGroup_RelatedAction"
                    }, 
                    "type": "array"
                }, 
                "timingDateTime": {
                    "description": "An optional value describing when the action should be performed.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_timingDateTime": {
                    "description": "Extensions for timingDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "timingAge": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Age"
                }, 
                "timingPeriod": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Period"
                }, 
                "timingDuration": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "timingRange": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Range"
                }, 
                "timingTiming": {
                    "description": "An optional value describing when the action should be performed.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "participant": {
                    "description": "The participant that should perform or be responsible for this action.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of action to perform (create, update, remove).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "groupingBehavior": {
                    "description": "Defines the grouping behavior for the action and its children.", 
                    "$ref": "#/definitions/code"
                }, 
                "_groupingBehavior": {
                    "description": "Extensions for groupingBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "selectionBehavior": {
                    "description": "Defines the selection behavior for the action and its children.", 
                    "$ref": "#/definitions/code"
                }, 
                "_selectionBehavior": {
                    "description": "Extensions for selectionBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "requiredBehavior": {
                    "description": "Defines expectations around whether an action is required.", 
                    "$ref": "#/definitions/code"
                }, 
                "_requiredBehavior": {
                    "description": "Extensions for requiredBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "precheckBehavior": {
                    "description": "Defines whether the action should usually be preselected.", 
                    "$ref": "#/definitions/code"
                }, 
                "_precheckBehavior": {
                    "description": "Extensions for precheckBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "cardinalityBehavior": {
                    "description": "Defines whether the action can be selected multiple times.", 
                    "$ref": "#/definitions/code"
                }, 
                "_cardinalityBehavior": {
                    "description": "Extensions for cardinalityBehavior", 
                    "$ref": "#/definitions/Element"
                }, 
                "resource": {
                    "description": "The resource that is the target of the action (e.g. CommunicationRequest).", 
                    "$ref": "#/definitions/Reference"
                }, 
                "action": {
                    "description": "Sub actions.", 
                    "items": {
                        "$ref": "#/definitions/RequestGroup_Action"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "RequestGroup_Condition": {
            "description": "A group of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "kind": {
                    "description": "The kind of condition.", 
                    "$ref": "#/definitions/code"
                }, 
                "_kind": {
                    "description": "Extensions for kind", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "An expression that returns true or false, indicating whether or not the condition is satisfied.", 
                    "$ref": "#/definitions/Expression"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "RequestGroup_RelatedAction": {
            "description": "A group of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "actionId": {
                    "description": "The element id of the action this is related to.", 
                    "$ref": "#/definitions/id"
                }, 
                "_actionId": {
                    "description": "Extensions for actionId", 
                    "$ref": "#/definitions/Element"
                }, 
                "relationship": {
                    "description": "The relationship of this action to the related action.", 
                    "$ref": "#/definitions/code"
                }, 
                "_relationship": {
                    "description": "Extensions for relationship", 
                    "$ref": "#/definitions/Element"
                }, 
                "offsetDuration": {
                    "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "offsetRange": {
                    "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.", 
                    "$ref": "#/definitions/Range"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ResearchElementDefinition_Characteristic": {
            "description": "The ResearchElementDefinition resource describes a \"PICO\" element that knowledge (evidence, assertion, recommendation) is about.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "definitionCodeableConcept": {
                    "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "definitionCanonical": {
                    "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_definitionCanonical": {
                    "description": "Extensions for definitionCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "definitionExpression": {
                    "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).", 
                    "$ref": "#/definitions/Expression"
                }, 
                "definitionDataRequirement": {
                    "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).", 
                    "$ref": "#/definitions/DataRequirement"
                }, 
                "usageContext": {
                    "description": "Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings.", 
                    "items": {
                        "$ref": "#/definitions/UsageContext"
                    }, 
                    "type": "array"
                }, 
                "exclude": {
                    "description": "When true, members with this characteristic are excluded from the element.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_exclude": {
                    "description": "Extensions for exclude", 
                    "$ref": "#/definitions/Element"
                }, 
                "unitOfMeasure": {
                    "description": "Specifies the UCUM unit for the outcome.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "studyEffectiveDescription": {
                    "description": "A narrative description of the time period the study covers.", 
                    "$ref": "#/definitions/string"
                }, 
                "_studyEffectiveDescription": {
                    "description": "Extensions for studyEffectiveDescription", 
                    "$ref": "#/definitions/Element"
                }, 
                "studyEffectiveDateTime": {
                    "description": "Indicates what effective period the study covers.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_studyEffectiveDateTime": {
                    "description": "Extensions for studyEffectiveDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "studyEffectivePeriod": {
                    "description": "Indicates what effective period the study covers.", 
                    "$ref": "#/definitions/Period"
                }, 
                "studyEffectiveDuration": {
                    "description": "Indicates what effective period the study covers.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "studyEffectiveTiming": {
                    "description": "Indicates what effective period the study covers.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "studyEffectiveTimeFromStart": {
                    "description": "Indicates duration from the study initiation.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "studyEffectiveGroupMeasure": {
                    "description": "Indicates how elements are aggregated within the study effective period.", 
                    "$ref": "#/definitions/code"
                }, 
                "_studyEffectiveGroupMeasure": {
                    "description": "Extensions for studyEffectiveGroupMeasure", 
                    "$ref": "#/definitions/Element"
                }, 
                "participantEffectiveDescription": {
                    "description": "A narrative description of the time period the study covers.", 
                    "$ref": "#/definitions/string"
                }, 
                "_participantEffectiveDescription": {
                    "description": "Extensions for participantEffectiveDescription", 
                    "$ref": "#/definitions/Element"
                }, 
                "participantEffectiveDateTime": {
                    "description": "Indicates what effective period the study covers.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_participantEffectiveDateTime": {
                    "description": "Extensions for participantEffectiveDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "participantEffectivePeriod": {
                    "description": "Indicates what effective period the study covers.", 
                    "$ref": "#/definitions/Period"
                }, 
                "participantEffectiveDuration": {
                    "description": "Indicates what effective period the study covers.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "participantEffectiveTiming": {
                    "description": "Indicates what effective period the study covers.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "participantEffectiveTimeFromStart": {
                    "description": "Indicates duration from the participant's study entry.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "participantEffectiveGroupMeasure": {
                    "description": "Indicates how elements are aggregated within the study effective period.", 
                    "$ref": "#/definitions/code"
                }, 
                "_participantEffectiveGroupMeasure": {
                    "description": "Extensions for participantEffectiveGroupMeasure", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ResearchStudy_Arm": {
            "description": "A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Unique, human-readable label for this arm of the study.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "Categorization of study arm, e.g. experimental, active comparator, placebo comparater.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "description": {
                    "description": "A succinct description of the path through the study that would be followed by a subject adhering to this arm.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ResearchStudy_Objective": {
            "description": "A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Unique, human-readable label for this objective of the study.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The kind of study objective.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "RiskAssessment_Prediction": {
            "description": "An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "outcome": {
                    "description": "One of the potential outcomes for the patient (e.g. remission, death,  a particular condition).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "probabilityDecimal": {
                    "description": "Indicates how likely the outcome is (in the specified timeframe).", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_probabilityDecimal": {
                    "description": "Extensions for probabilityDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "probabilityRange": {
                    "description": "Indicates how likely the outcome is (in the specified timeframe).", 
                    "$ref": "#/definitions/Range"
                }, 
                "qualitativeRisk": {
                    "description": "Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "relativeRisk": {
                    "description": "Indicates the risk for this particular subject (with their specific characteristics) divided by the risk of the population in general.  (Numbers greater than 1 = higher risk than the population, numbers less than 1 = lower risk.).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_relativeRisk": {
                    "description": "Extensions for relativeRisk", 
                    "$ref": "#/definitions/Element"
                }, 
                "whenPeriod": {
                    "description": "Indicates the period of time or age range of the subject to which the specified probability applies.", 
                    "$ref": "#/definitions/Period"
                }, 
                "whenRange": {
                    "description": "Indicates the period of time or age range of the subject to which the specified probability applies.", 
                    "$ref": "#/definitions/Range"
                }, 
                "rationale": {
                    "description": "Additional information explaining the basis for the prediction.", 
                    "$ref": "#/definitions/string"
                }, 
                "_rationale": {
                    "description": "Extensions for rationale", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SearchParameter_Component": {
            "description": "A search parameter that defines a named search item that can be used to search/filter on a resource.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "definition": {
                    "description": "The definition of the search parameter that describes this part.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "expression": {
                    "description": "A sub-expression that defines how to extract values for this component from the output of the main SearchParameter.expression.", 
                    "$ref": "#/definitions/string"
                }, 
                "_expression": {
                    "description": "Extensions for expression", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "definition"
            ], 
            "type": "object"
        }, 
        "Specimen_Collection": {
            "description": "A sample to be used for analysis.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "collector": {
                    "description": "Person who collected the specimen.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "collectedDateTime": {
                    "description": "Time when specimen was collected from subject - the physiologically relevant time.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_collectedDateTime": {
                    "description": "Extensions for collectedDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "collectedPeriod": {
                    "description": "Time when specimen was collected from subject - the physiologically relevant time.", 
                    "$ref": "#/definitions/Period"
                }, 
                "duration": {
                    "description": "The span of time over which the collection of a specimen occurred.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "quantity": {
                    "description": "The quantity of specimen collected; for instance the volume of a blood sample, or the physical measurement of an anatomic pathology sample.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "method": {
                    "description": "A coded value specifying the technique that is used to perform the procedure.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "bodySite": {
                    "description": "Anatomical location from which the specimen was collected (if subject is a patient). This is the target site.  This element is not used for environmental specimens.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "fastingStatusCodeableConcept": {
                    "description": "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "fastingStatusDuration": {
                    "description": "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.", 
                    "$ref": "#/definitions/Duration"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Specimen_Processing": {
            "description": "A sample to be used for analysis.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Textual description of procedure.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "procedure": {
                    "description": "A coded value specifying the procedure used to process the specimen.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "additive": {
                    "description": "Material used in the processing step.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "timeDateTime": {
                    "description": "A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_timeDateTime": {
                    "description": "Extensions for timeDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "timePeriod": {
                    "description": "A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.", 
                    "$ref": "#/definitions/Period"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Specimen_Container": {
            "description": "A sample to be used for analysis.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "Id for container. There may be multiple; a manufacturer's bar code, lab assigned identifier, etc. The container ID may differ from the specimen id in some circumstances.", 
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Textual description of the container.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The type of container associated with the specimen (e.g. slide, aliquot, etc.).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "capacity": {
                    "description": "The capacity (volume or other measure) the container may contain.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "specimenQuantity": {
                    "description": "The quantity of specimen in the container; may be volume, dimensions, or other appropriate measurements, depending on the specimen type.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "additiveCodeableConcept": {
                    "description": "Introduced substance to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "additiveReference": {
                    "description": "Introduced substance to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SpecimenDefinition_TypeTested": {
            "description": "A kind of specimen with associated set of requirements.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "isDerived": {
                    "description": "Primary of secondary specimen.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_isDerived": {
                    "description": "Extensions for isDerived", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "The kind of specimen conditioned for testing expected by lab.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "preference": {
                    "description": "The preference for this type of conditioned specimen.", 
                    "$ref": "#/definitions/code"
                }, 
                "_preference": {
                    "description": "Extensions for preference", 
                    "$ref": "#/definitions/Element"
                }, 
                "container": {
                    "description": "The specimen's container.", 
                    "$ref": "#/definitions/SpecimenDefinition_Container"
                }, 
                "requirement": {
                    "description": "Requirements for delivery and special handling of this kind of conditioned specimen.", 
                    "$ref": "#/definitions/string"
                }, 
                "_requirement": {
                    "description": "Extensions for requirement", 
                    "$ref": "#/definitions/Element"
                }, 
                "retentionTime": {
                    "description": "The usual time that a specimen of this kind is retained after the ordered tests are completed, for the purpose of additional testing.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "rejectionCriterion": {
                    "description": "Criterion for rejection of the specimen in its container by the laboratory.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "handling": {
                    "description": "Set of instructions for preservation/transport of the specimen at a defined temperature interval, prior the testing process.", 
                    "items": {
                        "$ref": "#/definitions/SpecimenDefinition_Handling"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SpecimenDefinition_Container": {
            "description": "A kind of specimen with associated set of requirements.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "material": {
                    "description": "The type of material of the container.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "type": {
                    "description": "The type of container used to contain this kind of specimen.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "cap": {
                    "description": "Color of container cap.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "description": {
                    "description": "The textual description of the kind of container.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "capacity": {
                    "description": "The capacity (volume or other measure) of this kind of container.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "minimumVolumeQuantity": {
                    "description": "The minimum volume to be conditioned in the container.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "minimumVolumeString": {
                    "description": "The minimum volume to be conditioned in the container.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_minimumVolumeString": {
                    "description": "Extensions for minimumVolumeString", 
                    "$ref": "#/definitions/Element"
                }, 
                "additive": {
                    "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.", 
                    "items": {
                        "$ref": "#/definitions/SpecimenDefinition_Additive"
                    }, 
                    "type": "array"
                }, 
                "preparation": {
                    "description": "Special processing that should be applied to the container for this kind of specimen.", 
                    "$ref": "#/definitions/string"
                }, 
                "_preparation": {
                    "description": "Extensions for preparation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SpecimenDefinition_Additive": {
            "description": "A kind of specimen with associated set of requirements.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "additiveCodeableConcept": {
                    "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "additiveReference": {
                    "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SpecimenDefinition_Handling": {
            "description": "A kind of specimen with associated set of requirements.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "temperatureQualifier": {
                    "description": "It qualifies the interval of temperature, which characterizes an occurrence of handling. Conditions that are not related to temperature may be handled in the instruction element.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "temperatureRange": {
                    "description": "The temperature interval for this set of handling instructions.", 
                    "$ref": "#/definitions/Range"
                }, 
                "maxDuration": {
                    "description": "The maximum time interval of preservation of the specimen with these conditions.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "instruction": {
                    "description": "Additional textual instructions for the preservation or transport of the specimen. For instance, 'Protect from light exposure'.", 
                    "$ref": "#/definitions/string"
                }, 
                "_instruction": {
                    "description": "Extensions for instruction", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "StructureDefinition_Mapping": {
            "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identity": {
                    "description": "An Internal id that is used to identify this mapping set when specific mappings are made.", 
                    "$ref": "#/definitions/id"
                }, 
                "_identity": {
                    "description": "Extensions for identity", 
                    "$ref": "#/definitions/Element"
                }, 
                "uri": {
                    "description": "An absolute URI that identifies the specification that this mapping is expressed to.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_uri": {
                    "description": "Extensions for uri", 
                    "$ref": "#/definitions/Element"
                }, 
                "name": {
                    "description": "A name for the specification that is being mapped to.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "comment": {
                    "description": "Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage.", 
                    "$ref": "#/definitions/string"
                }, 
                "_comment": {
                    "description": "Extensions for comment", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "StructureDefinition_Context": {
            "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Defines how to interpret the expression that defines what the context of the extension is.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "An expression that defines where an extension can be used in resources.", 
                    "$ref": "#/definitions/string"
                }, 
                "_expression": {
                    "description": "Extensions for expression", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "StructureDefinition_Snapshot": {
            "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "element": {
                    "description": "Captures constraints on each element within the resource.", 
                    "items": {
                        "$ref": "#/definitions/ElementDefinition"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "element"
            ], 
            "type": "object"
        }, 
        "StructureDefinition_Differential": {
            "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "element": {
                    "description": "Captures constraints on each element within the resource.", 
                    "items": {
                        "$ref": "#/definitions/ElementDefinition"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "element"
            ], 
            "type": "object"
        }, 
        "StructureMap_Structure": {
            "description": "A Map of relationships between 2 structures that can be used to transform data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "url": {
                    "description": "The canonical reference to the structure.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "mode": {
                    "description": "How the referenced structure is used in this mapping.", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "alias": {
                    "description": "The name used for this type in the map.", 
                    "$ref": "#/definitions/string"
                }, 
                "_alias": {
                    "description": "Extensions for alias", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "Documentation that describes how the structure is used in the mapping.", 
                    "$ref": "#/definitions/string"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "url"
            ], 
            "type": "object"
        }, 
        "StructureMap_Group": {
            "description": "A Map of relationships between 2 structures that can be used to transform data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "A unique name for the group for the convenience of human readers.", 
                    "$ref": "#/definitions/id"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "extends": {
                    "description": "Another group that this group adds rules to.", 
                    "$ref": "#/definitions/id"
                }, 
                "_extends": {
                    "description": "Extensions for extends", 
                    "$ref": "#/definitions/Element"
                }, 
                "typeMode": {
                    "description": "If this is the default rule set to apply for the source type or this combination of types.", 
                    "$ref": "#/definitions/code"
                }, 
                "_typeMode": {
                    "description": "Extensions for typeMode", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "Additional supporting documentation that explains the purpose of the group and the types of mappings within it.", 
                    "$ref": "#/definitions/string"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }, 
                "input": {
                    "description": "A name assigned to an instance of data. The instance must be provided when the mapping is invoked.", 
                    "items": {
                        "$ref": "#/definitions/StructureMap_Input"
                    }, 
                    "type": "array"
                }, 
                "rule": {
                    "description": "Transform Rule from source to target.", 
                    "items": {
                        "$ref": "#/definitions/StructureMap_Rule"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "input", 
                "rule"
            ], 
            "type": "object"
        }, 
        "StructureMap_Input": {
            "description": "A Map of relationships between 2 structures that can be used to transform data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Name for this instance of data.", 
                    "$ref": "#/definitions/id"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "Type for this instance of data.", 
                    "$ref": "#/definitions/string"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "mode": {
                    "description": "Mode for this instance of data.", 
                    "$ref": "#/definitions/code"
                }, 
                "_mode": {
                    "description": "Extensions for mode", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "Documentation for this instance of data.", 
                    "$ref": "#/definitions/string"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "StructureMap_Rule": {
            "description": "A Map of relationships between 2 structures that can be used to transform data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Name of the rule for internal references.", 
                    "$ref": "#/definitions/id"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "source": {
                    "description": "Source inputs to the mapping.", 
                    "items": {
                        "$ref": "#/definitions/StructureMap_Source"
                    }, 
                    "type": "array"
                }, 
                "target": {
                    "description": "Content to create because of this mapping rule.", 
                    "items": {
                        "$ref": "#/definitions/StructureMap_Target"
                    }, 
                    "type": "array"
                }, 
                "rule": {
                    "description": "Rules contained in this rule.", 
                    "items": {
                        "$ref": "#/definitions/StructureMap_Rule"
                    }, 
                    "type": "array"
                }, 
                "dependent": {
                    "description": "Which other rules to apply in the context of this rule.", 
                    "items": {
                        "$ref": "#/definitions/StructureMap_Dependent"
                    }, 
                    "type": "array"
                }, 
                "documentation": {
                    "description": "Documentation for this instance of data.", 
                    "$ref": "#/definitions/string"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "source"
            ], 
            "type": "object"
        }, 
        "StructureMap_Source": {
            "description": "A Map of relationships between 2 structures that can be used to transform data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "context": {
                    "description": "Type or variable this rule applies to.", 
                    "$ref": "#/definitions/id"
                }, 
                "_context": {
                    "description": "Extensions for context", 
                    "$ref": "#/definitions/Element"
                }, 
                "min": {
                    "description": "Specified minimum cardinality for the element. This is optional; if present, it acts an implicit check on the input content.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_min": {
                    "description": "Extensions for min", 
                    "$ref": "#/definitions/Element"
                }, 
                "max": {
                    "description": "Specified maximum cardinality for the element - a number or a \"*\". This is optional; if present, it acts an implicit check on the input content (* just serves as documentation; it's the default value).", 
                    "$ref": "#/definitions/string"
                }, 
                "_max": {
                    "description": "Extensions for max", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "Specified type for the element. This works as a condition on the mapping - use for polymorphic elements.", 
                    "$ref": "#/definitions/string"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueBase64Binary": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_defaultValueBase64Binary": {
                    "description": "Extensions for defaultValueBase64Binary", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueBoolean": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_defaultValueBoolean": {
                    "description": "Extensions for defaultValueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueCanonical": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_defaultValueCanonical": {
                    "description": "Extensions for defaultValueCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueCode": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_defaultValueCode": {
                    "description": "Extensions for defaultValueCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueDate": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_defaultValueDate": {
                    "description": "Extensions for defaultValueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueDateTime": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_defaultValueDateTime": {
                    "description": "Extensions for defaultValueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueDecimal": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_defaultValueDecimal": {
                    "description": "Extensions for defaultValueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueId": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
                    "type": "string"
                }, 
                "_defaultValueId": {
                    "description": "Extensions for defaultValueId", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueInstant": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_defaultValueInstant": {
                    "description": "Extensions for defaultValueInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueInteger": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_defaultValueInteger": {
                    "description": "Extensions for defaultValueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueMarkdown": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_defaultValueMarkdown": {
                    "description": "Extensions for defaultValueMarkdown", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueOid": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", 
                    "type": "string"
                }, 
                "_defaultValueOid": {
                    "description": "Extensions for defaultValueOid", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValuePositiveInt": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_defaultValuePositiveInt": {
                    "description": "Extensions for defaultValuePositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueString": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_defaultValueString": {
                    "description": "Extensions for defaultValueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueTime": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_defaultValueTime": {
                    "description": "Extensions for defaultValueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueUnsignedInt": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_defaultValueUnsignedInt": {
                    "description": "Extensions for defaultValueUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueUri": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_defaultValueUri": {
                    "description": "Extensions for defaultValueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueUrl": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_defaultValueUrl": {
                    "description": "Extensions for defaultValueUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueUuid": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", 
                    "type": "string"
                }, 
                "_defaultValueUuid": {
                    "description": "Extensions for defaultValueUuid", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValueAddress": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Address"
                }, 
                "defaultValueAge": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Age"
                }, 
                "defaultValueAnnotation": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Annotation"
                }, 
                "defaultValueAttachment": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "defaultValueCodeableConcept": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "defaultValueCoding": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "defaultValueContactPoint": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/ContactPoint"
                }, 
                "defaultValueCount": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Count"
                }, 
                "defaultValueDistance": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Distance"
                }, 
                "defaultValueDuration": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "defaultValueHumanName": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "defaultValueIdentifier": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "defaultValueMoney": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Money"
                }, 
                "defaultValuePeriod": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Period"
                }, 
                "defaultValueQuantity": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "defaultValueRange": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Range"
                }, 
                "defaultValueRatio": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "defaultValueReference": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "defaultValueSampledData": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/SampledData"
                }, 
                "defaultValueSignature": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Signature"
                }, 
                "defaultValueTiming": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "defaultValueContactDetail": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/ContactDetail"
                }, 
                "defaultValueContributor": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Contributor"
                }, 
                "defaultValueDataRequirement": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/DataRequirement"
                }, 
                "defaultValueExpression": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Expression"
                }, 
                "defaultValueParameterDefinition": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/ParameterDefinition"
                }, 
                "defaultValueRelatedArtifact": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/RelatedArtifact"
                }, 
                "defaultValueTriggerDefinition": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/TriggerDefinition"
                }, 
                "defaultValueUsageContext": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/UsageContext"
                }, 
                "defaultValueDosage": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Dosage"
                }, 
                "defaultValueMeta": {
                    "description": "A value to use if there is no existing value in the source object.", 
                    "$ref": "#/definitions/Meta"
                }, 
                "element": {
                    "description": "Optional field for this source.", 
                    "$ref": "#/definitions/string"
                }, 
                "_element": {
                    "description": "Extensions for element", 
                    "$ref": "#/definitions/Element"
                }, 
                "listMode": {
                    "description": "How to handle the list mode for this element.", 
                    "$ref": "#/definitions/code"
                }, 
                "_listMode": {
                    "description": "Extensions for listMode", 
                    "$ref": "#/definitions/Element"
                }, 
                "variable": {
                    "description": "Named context for field, if a field is specified.", 
                    "$ref": "#/definitions/id"
                }, 
                "_variable": {
                    "description": "Extensions for variable", 
                    "$ref": "#/definitions/Element"
                }, 
                "condition": {
                    "description": "FHIRPath expression  - must be true or the rule does not apply.", 
                    "$ref": "#/definitions/string"
                }, 
                "_condition": {
                    "description": "Extensions for condition", 
                    "$ref": "#/definitions/Element"
                }, 
                "check": {
                    "description": "FHIRPath expression  - must be true or the mapping engine throws an error instead of completing.", 
                    "$ref": "#/definitions/string"
                }, 
                "_check": {
                    "description": "Extensions for check", 
                    "$ref": "#/definitions/Element"
                }, 
                "logMessage": {
                    "description": "A FHIRPath expression which specifies a message to put in the transform log when content matching the source rule is found.", 
                    "$ref": "#/definitions/string"
                }, 
                "_logMessage": {
                    "description": "Extensions for logMessage", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "StructureMap_Target": {
            "description": "A Map of relationships between 2 structures that can be used to transform data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "context": {
                    "description": "Type or variable this rule applies to.", 
                    "$ref": "#/definitions/id"
                }, 
                "_context": {
                    "description": "Extensions for context", 
                    "$ref": "#/definitions/Element"
                }, 
                "contextType": {
                    "description": "How to interpret the context.", 
                    "$ref": "#/definitions/code"
                }, 
                "_contextType": {
                    "description": "Extensions for contextType", 
                    "$ref": "#/definitions/Element"
                }, 
                "element": {
                    "description": "Field to create in the context.", 
                    "$ref": "#/definitions/string"
                }, 
                "_element": {
                    "description": "Extensions for element", 
                    "$ref": "#/definitions/Element"
                }, 
                "variable": {
                    "description": "Named context for field, if desired, and a field is specified.", 
                    "$ref": "#/definitions/id"
                }, 
                "_variable": {
                    "description": "Extensions for variable", 
                    "$ref": "#/definitions/Element"
                }, 
                "listMode": {
                    "description": "If field is a list, how to manage the list.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_listMode": {
                    "description": "Extensions for listMode", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "listRuleId": {
                    "description": "Internal rule reference for shared list items.", 
                    "$ref": "#/definitions/id"
                }, 
                "_listRuleId": {
                    "description": "Extensions for listRuleId", 
                    "$ref": "#/definitions/Element"
                }, 
                "transform": {
                    "description": "How the data is copied / created.", 
                    "$ref": "#/definitions/code"
                }, 
                "_transform": {
                    "description": "Extensions for transform", 
                    "$ref": "#/definitions/Element"
                }, 
                "parameter": {
                    "description": "Parameters to the transform.", 
                    "items": {
                        "$ref": "#/definitions/StructureMap_Parameter"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "StructureMap_Parameter": {
            "description": "A Map of relationships between 2 structures that can be used to transform data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "valueId": {
                    "description": "Parameter value - variable or literal.", 
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
                    "type": "string"
                }, 
                "_valueId": {
                    "description": "Extensions for valueId", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "Parameter value - variable or literal.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "Parameter value - variable or literal.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "Parameter value - variable or literal.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "Parameter value - variable or literal.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "StructureMap_Dependent": {
            "description": "A Map of relationships between 2 structures that can be used to transform data.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Name of a rule or group to apply.", 
                    "$ref": "#/definitions/id"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "variable": {
                    "description": "Variable to pass to the rule or group.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_variable": {
                    "description": "Extensions for variable", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Subscription_Channel": {
            "description": "The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined \"channel\" so that another system can take an appropriate action.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of channel to send notifications on.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "endpoint": {
                    "description": "The url that describes the actual end-point to send messages to.", 
                    "$ref": "#/definitions/url"
                }, 
                "_endpoint": {
                    "description": "Extensions for endpoint", 
                    "$ref": "#/definitions/Element"
                }, 
                "payload": {
                    "description": "The mime type to send the payload in - either application/fhir+xml, or application/fhir+json. If the payload is not present, then there is no payload in the notification, just a notification. The mime type \"text/plain\" may also be used for Email and SMS subscriptions.", 
                    "$ref": "#/definitions/code"
                }, 
                "_payload": {
                    "description": "Extensions for payload", 
                    "$ref": "#/definitions/Element"
                }, 
                "header": {
                    "description": "Additional headers / information to send as part of the notification.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_header": {
                    "description": "Extensions for header", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubscriptionStatus_NotificationEvent": {
            "description": "The SubscriptionStatus resource describes the state of a Subscription during notifications.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "eventNumber": {
                    "description": "The sequential number of this event in this subscription context. Note that this value is a 64-bit integer value, encoded as a string.", 
                    "$ref": "#/definitions/string"
                }, 
                "_eventNumber": {
                    "description": "Extensions for eventNumber", 
                    "$ref": "#/definitions/Element"
                }, 
                "timestamp": {
                    "description": "The actual time this event occured on the server.", 
                    "$ref": "#/definitions/instant"
                }, 
                "_timestamp": {
                    "description": "Extensions for timestamp", 
                    "$ref": "#/definitions/Element"
                }, 
                "focus": {
                    "description": "The focus of this event. While this will usually be a reference to the focus resource of the event, it MAY contain a reference to a non-FHIR object.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "additionalContext": {
                    "description": "Additional context information for this event. Generally, this will contain references to additional resources included with the event (e.g., the Patient relevant to an Encounter), however it MAY refer to non-FHIR objects.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubscriptionTopic_ResourceTrigger": {
            "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "The human readable description of this resource trigger for the SubscriptionTopic -  for example, \"An Encounter enters the 'in-progress' state\".", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "resource": {
                    "description": "URL of the Resource that is the type used in this resource trigger.  Relative URLs are relative to the StructureDefinition root of the implemented FHIR version (e.g., http://hl7.org/fhir/StructureDefinition). For example, \"Patient\" maps to http://hl7.org/fhir/StructureDefinition/Patient.  For more information, see <a href=\"elementdefinition-definitions.html#ElementDefinition.type.code\">ElementDefinition.type.code</a>.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_resource": {
                    "description": "Extensions for resource", 
                    "$ref": "#/definitions/Element"
                }, 
                "supportedInteraction": {
                    "description": "The FHIR RESTful interaction which can be used to trigger a notification for the SubscriptionTopic. Multiple values are considered OR joined (e.g., CREATE or UPDATE).", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_supportedInteraction": {
                    "description": "Extensions for supportedInteraction", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "queryCriteria": {
                    "description": "The FHIR query based rules that the server should use to determine when to trigger a notification for this subscription topic.", 
                    "$ref": "#/definitions/SubscriptionTopic_QueryCriteria"
                }, 
                "fhirPathCriteria": {
                    "description": "The FHIRPath based rules that the server should use to determine when to trigger a notification for this topic.", 
                    "$ref": "#/definitions/string"
                }, 
                "_fhirPathCriteria": {
                    "description": "Extensions for fhirPathCriteria", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubscriptionTopic_QueryCriteria": {
            "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "previous": {
                    "description": "The FHIR query based rules are applied to the previous resource state (e.g., state before an update).", 
                    "$ref": "#/definitions/string"
                }, 
                "_previous": {
                    "description": "Extensions for previous", 
                    "$ref": "#/definitions/Element"
                }, 
                "resultForCreate": {
                    "description": "For \"create\" interactions, should the \"previous\" criteria count as an automatic pass or an automatic fail.", 
                    "$ref": "#/definitions/code"
                }, 
                "_resultForCreate": {
                    "description": "Extensions for resultForCreate", 
                    "$ref": "#/definitions/Element"
                }, 
                "current": {
                    "description": "The FHIR query based rules are applied to the current resource state (e.g., state after an update).", 
                    "$ref": "#/definitions/string"
                }, 
                "_current": {
                    "description": "Extensions for current", 
                    "$ref": "#/definitions/Element"
                }, 
                "resultForDelete": {
                    "description": "For \"delete\" interactions, should the \"current\" criteria count as an automatic pass or an automatic fail.", 
                    "$ref": "#/definitions/code"
                }, 
                "_resultForDelete": {
                    "description": "Extensions for resultForDelete", 
                    "$ref": "#/definitions/Element"
                }, 
                "requireBoth": {
                    "description": "If set to true, both current and previous criteria must evaluate true to  trigger a notification for this topic.  Otherwise a notification for this topic will be triggered if either one evaluates to true.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_requireBoth": {
                    "description": "Extensions for requireBoth", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubscriptionTopic_EventTrigger": {
            "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "The human readable description of an event to trigger a notification for the SubscriptionTopic - for example, \"Patient Admission, as defined in HL7v2 via message ADT^A01\". Multiple values are considered OR joined (e.g., matching any single event listed).", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "event": {
                    "description": "A well-defined event which can be used to trigger notifications from the SubscriptionTopic.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "resource": {
                    "description": "URL of the Resource that is the focus type used in this event trigger.  Relative URLs are relative to the StructureDefinition root of the implemented FHIR version (e.g., http://hl7.org/fhir/StructureDefinition). For example, \"Patient\" maps to http://hl7.org/fhir/StructureDefinition/Patient.  For more information, see <a href=\"elementdefinition-definitions.html#ElementDefinition.type.code\">ElementDefinition.type.code</a>.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_resource": {
                    "description": "Extensions for resource", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "event"
            ], 
            "type": "object"
        }, 
        "SubscriptionTopic_CanFilterBy": {
            "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Description of how this filtering parameter is intended to be used.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "resource": {
                    "description": "URL of the Resource that is the type used in this filter. This is the \"focus\" of the topic (or one of them if there are more than one). It will be the same, a generality, or a specificity of SubscriptionTopic.resourceTrigger.resource or SubscriptionTopic.eventTrigger.resource when they are present.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_resource": {
                    "description": "Extensions for resource", 
                    "$ref": "#/definitions/Element"
                }, 
                "filterParameter": {
                    "description": "Either the canonical URL to a search parameter (like \"http://hl7.org/fhir/SearchParameter/encounter-patient\") or topic-defined parameter (like \"hub.event\") which is a label for the filter.", 
                    "$ref": "#/definitions/string"
                }, 
                "_filterParameter": {
                    "description": "Extensions for filterParameter", 
                    "$ref": "#/definitions/Element"
                }, 
                "filterDefinition": {
                    "description": "Either the canonical URL to a search parameter (like \"http://hl7.org/fhir/SearchParameter/encounter-patient\") or the officially-defined URI for a shared filter concept (like \"http://example.org/concepts/shared-common-event\").", 
                    "$ref": "#/definitions/uri"
                }, 
                "_filterDefinition": {
                    "description": "Extensions for filterDefinition", 
                    "$ref": "#/definitions/Element"
                }, 
                "modifier": {
                    "description": "Allowable operators to apply when determining matches (Search Modifiers).  If the filterParameter is a SearchParameter, this list of modifiers SHALL be a strict subset of the modifiers defined on that SearchParameter.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_modifier": {
                    "description": "Extensions for modifier", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubscriptionTopic_NotificationShape": {
            "description": "Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "resource": {
                    "description": "URL of the Resource that is the type used in this shape. This is the \"focus\" of the topic (or one of them if there are more than one) and the root resource for this shape definition. It will be the same, a generality, or a specificity of SubscriptionTopic.resourceTrigger.resource or SubscriptionTopic.eventTrigger.resource when they are present.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_resource": {
                    "description": "Extensions for resource", 
                    "$ref": "#/definitions/Element"
                }, 
                "include": {
                    "description": "Search-style _include directives, rooted in the resource for this shape. Servers SHOULD include resources listed here, if they exist and the user is authorized to receive them.  Clients SHOULD be prepared to receive these additional resources, but SHALL function properly without them.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_include": {
                    "description": "Extensions for include", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "revInclude": {
                    "description": "Search-style _revinclude directives, rooted in the resource for this shape. Servers SHOULD include resources listed here, if they exist and the user is authorized to receive them.  Clients SHOULD be prepared to receive these additional resources, but SHALL function properly without them.", 
                    "items": {
                        "$ref": "#/definitions/string"
                    }, 
                    "type": "array"
                }, 
                "_revInclude": {
                    "description": "Extensions for revInclude", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Substance_Instance": {
            "description": "A homogeneous material with a definite composition.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "Identifier associated with the package/container (usually a label affixed directly).", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "expiry": {
                    "description": "When the substance is no longer valid to use. For some substances, a single arbitrary date is used for expiry.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_expiry": {
                    "description": "Extensions for expiry", 
                    "$ref": "#/definitions/Element"
                }, 
                "quantity": {
                    "description": "The amount of the substance.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Substance_Ingredient": {
            "description": "A homogeneous material with a definite composition.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The amount of the ingredient in the substance - a concentration ratio.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "substanceCodeableConcept": {
                    "description": "Another substance that is a component of this substance.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "substanceReference": {
                    "description": "Another substance that is a component of this substance.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubstanceDefinition_Moiety": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "role": {
                    "description": "Role that the moiety is playing.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "identifier": {
                    "description": "Identifier by which this moiety substance is known.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "name": {
                    "description": "Textual name for this moiety substance.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "stereochemistry": {
                    "description": "Stereochemistry type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "opticalActivity": {
                    "description": "Optical activity type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "molecularFormula": {
                    "description": "Molecular formula for this moiety of this substance, typically using the Hill system.", 
                    "$ref": "#/definitions/string"
                }, 
                "_molecularFormula": {
                    "description": "Extensions for molecularFormula", 
                    "$ref": "#/definitions/Element"
                }, 
                "amountQuantity": {
                    "description": "Quantitative value for this moiety.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "amountString": {
                    "description": "Quantitative value for this moiety.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_amountString": {
                    "description": "Extensions for amountString", 
                    "$ref": "#/definitions/Element"
                }, 
                "measurementType": {
                    "description": "The measurement type of the quantitative value. In capturing the actual relative amounts of substances or molecular fragments it may be necessary to indicate whether the amount refers to, for example, a mole ratio or weight ratio.", 
                    "$ref": "#/definitions/CodeableConcept"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubstanceDefinition_Property": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A code expressing the type of property.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "A value for the property.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "A value for the property.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueDate": {
                    "description": "A value for the property.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "A value for the property.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAttachment": {
                    "description": "A value for the property.", 
                    "$ref": "#/definitions/Attachment"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "SubstanceDefinition_MolecularWeight": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "method": {
                    "description": "The method by which the molecular weight was determined.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "type": {
                    "description": "Type of molecular weight such as exact, average (also known as. number average), weight average.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "amount": {
                    "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.", 
                    "$ref": "#/definitions/Quantity"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "amount"
            ], 
            "type": "object"
        }, 
        "SubstanceDefinition_Structure": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "stereochemistry": {
                    "description": "Stereochemistry type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "opticalActivity": {
                    "description": "Optical activity type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "molecularFormula": {
                    "description": "Molecular formula of this substance, typically using the Hill system.", 
                    "$ref": "#/definitions/string"
                }, 
                "_molecularFormula": {
                    "description": "Extensions for molecularFormula", 
                    "$ref": "#/definitions/Element"
                }, 
                "molecularFormulaByMoiety": {
                    "description": "Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical, each moiety separated by a dot.", 
                    "$ref": "#/definitions/string"
                }, 
                "_molecularFormulaByMoiety": {
                    "description": "Extensions for molecularFormulaByMoiety", 
                    "$ref": "#/definitions/Element"
                }, 
                "molecularWeight": {
                    "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).", 
                    "$ref": "#/definitions/SubstanceDefinition_MolecularWeight"
                }, 
                "technique": {
                    "description": "The method used to elucidate the structure or characterization of the drug substance. Examples: X-ray, HPLC, NMR, Peptide mapping, Ligand binding assay.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "sourceDocument": {
                    "description": "The source of information about the structure.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }, 
                "representation": {
                    "description": "A depiction of the structure or characterization of the substance.", 
                    "items": {
                        "$ref": "#/definitions/SubstanceDefinition_Representation"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubstanceDefinition_Representation": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The kind of structural representation (e.g. full, partial).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "representation": {
                    "description": "The structural representation or characterization as a text string in a standard format.", 
                    "$ref": "#/definitions/string"
                }, 
                "_representation": {
                    "description": "Extensions for representation", 
                    "$ref": "#/definitions/Element"
                }, 
                "format": {
                    "description": "The format of the representation e.g. InChI, SMILES, MOLFILE, CDX, SDF, PDB, mmCIF. The logical content type rather than the physical file format of a document.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "document": {
                    "description": "An attached file with the structural representation or characterization e.g. a molecular structure graphic of the substance, a JCAMP or AnIML file.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubstanceDefinition_Code": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "The specific code.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "status": {
                    "description": "Status of the code assignment, for example 'provisional', 'approved'.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "statusDate": {
                    "description": "The date at which the code status was changed as part of the terminology maintenance.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_statusDate": {
                    "description": "Extensions for statusDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "note": {
                    "description": "Any comment can be provided in this field, if necessary.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }, 
                "source": {
                    "description": "Supporting literature.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubstanceDefinition_Name": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The actual name.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "type": {
                    "description": "Name type, for example 'systematic',  'scientific, 'brand'.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "status": {
                    "description": "The status of the name, for example 'current', 'proposed'.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "preferred": {
                    "description": "If this is the preferred name for this substance.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_preferred": {
                    "description": "Extensions for preferred", 
                    "$ref": "#/definitions/Element"
                }, 
                "language": {
                    "description": "Human language that the name is written in.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "domain": {
                    "description": "The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "jurisdiction": {
                    "description": "The jurisdiction where this name applies.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "synonym": {
                    "description": "A synonym of this particular name, by which the substance is also known.", 
                    "items": {
                        "$ref": "#/definitions/SubstanceDefinition_Name"
                    }, 
                    "type": "array"
                }, 
                "translation": {
                    "description": "A translation for this name into another human language.", 
                    "items": {
                        "$ref": "#/definitions/SubstanceDefinition_Name"
                    }, 
                    "type": "array"
                }, 
                "official": {
                    "description": "Details of the official nature of this name.", 
                    "items": {
                        "$ref": "#/definitions/SubstanceDefinition_Official"
                    }, 
                    "type": "array"
                }, 
                "source": {
                    "description": "Supporting literature.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubstanceDefinition_Official": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "authority": {
                    "description": "Which authority uses this official name.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "status": {
                    "description": "The status of the official name, for example 'draft', 'active', 'retired'.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "date": {
                    "description": "Date of the official name change.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SubstanceDefinition_Relationship": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "substanceDefinitionReference": {
                    "description": "A pointer to another substance, as a resource or just a representational code.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "substanceDefinitionCodeableConcept": {
                    "description": "A pointer to another substance, as a resource or just a representational code.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "type": {
                    "description": "For example \"salt to parent\", \"active moiety\", \"starting material\", \"polymorph\", \"impurity of\".", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "isDefining": {
                    "description": "For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_isDefining": {
                    "description": "Extensions for isDefining", 
                    "$ref": "#/definitions/Element"
                }, 
                "amountQuantity": {
                    "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "amountRatio": {
                    "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "amountString": {
                    "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_amountString": {
                    "description": "Extensions for amountString", 
                    "$ref": "#/definitions/Element"
                }, 
                "ratioHighLimitAmount": {
                    "description": "For use when the numeric has an uncertain range.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "comparator": {
                    "description": "An operator for the amount, for example \"average\", \"approximately\", \"less than\".", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "source": {
                    "description": "Supporting literature.", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "SubstanceDefinition_SourceMaterial": {
            "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A classification that provides the origin of the raw material. Example: cat hair would be an Animal source type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "genus": {
                    "description": "The genus of an organism, typically referring to the Latin epithet of the genus element of the plant/animal scientific name.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "species": {
                    "description": "The species of an organism, typically referring to the Latin epithet of the species of the plant/animal.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "part": {
                    "description": "An anatomical origin of the source material within an organism.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "countryOfOrigin": {
                    "description": "The country or countries where the material is harvested.", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SupplyDelivery_SuppliedItem": {
            "description": "Record of delivery of what is supplied.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "quantity": {
                    "description": "The amount of supply that has been dispensed. Includes unit of measure.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "itemCodeableConcept": {
                    "description": "Identifies the medication, substance or device being dispensed. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "itemReference": {
                    "description": "Identifies the medication, substance or device being dispensed. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "SupplyRequest_Parameter": {
            "description": "A record of a request for a medication, substance or device used in the healthcare setting.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "A code or string that identifies the device detail being asserted.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCodeableConcept": {
                    "description": "The value of the device detail.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueQuantity": {
                    "description": "The value of the device detail.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "The value of the device detail.", 
                    "$ref": "#/definitions/Range"
                }, 
                "valueBoolean": {
                    "description": "The value of the device detail.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Task_Restriction": {
            "description": "A task to be performed.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "repetitions": {
                    "description": "Indicates the number of times the requested action should occur.", 
                    "$ref": "#/definitions/positiveInt"
                }, 
                "_repetitions": {
                    "description": "Extensions for repetitions", 
                    "$ref": "#/definitions/Element"
                }, 
                "period": {
                    "description": "Over what time-period is fulfillment sought.", 
                    "$ref": "#/definitions/Period"
                }, 
                "recipient": {
                    "description": "For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?", 
                    "items": {
                        "$ref": "#/definitions/Reference"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "Task_Input": {
            "description": "A task to be performed.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "A code or description indicating how the input is intended to be used as part of the task execution.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueBase64Binary": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCanonical": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueCanonical": {
                    "description": "Extensions for valueCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCode": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_valueCode": {
                    "description": "Extensions for valueCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDate": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueId": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
                    "type": "string"
                }, 
                "_valueId": {
                    "description": "Extensions for valueId", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInstant": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_valueInstant": {
                    "description": "Extensions for valueInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueMarkdown": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueOid": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", 
                    "type": "string"
                }, 
                "_valueOid": {
                    "description": "Extensions for valueOid", 
                    "$ref": "#/definitions/Element"
                }, 
                "valuePositiveInt": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueTime": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_valueTime": {
                    "description": "Extensions for valueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUnsignedInt": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUri": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUri": {
                    "description": "Extensions for valueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUrl": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUrl": {
                    "description": "Extensions for valueUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUuid": {
                    "description": "The value of the input parameter as a basic type.", 
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", 
                    "type": "string"
                }, 
                "_valueUuid": {
                    "description": "Extensions for valueUuid", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAddress": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Address"
                }, 
                "valueAge": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Age"
                }, 
                "valueAnnotation": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Annotation"
                }, 
                "valueAttachment": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueCodeableConcept": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCoding": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueContactPoint": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/ContactPoint"
                }, 
                "valueCount": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Count"
                }, 
                "valueDistance": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Distance"
                }, 
                "valueDuration": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "valueHumanName": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "valueIdentifier": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "valueMoney": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Money"
                }, 
                "valuePeriod": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Period"
                }, 
                "valueQuantity": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Range"
                }, 
                "valueRatio": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "valueReference": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "valueSampledData": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/SampledData"
                }, 
                "valueSignature": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Signature"
                }, 
                "valueTiming": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "valueContactDetail": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/ContactDetail"
                }, 
                "valueContributor": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Contributor"
                }, 
                "valueDataRequirement": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/DataRequirement"
                }, 
                "valueExpression": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Expression"
                }, 
                "valueParameterDefinition": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/ParameterDefinition"
                }, 
                "valueRelatedArtifact": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/RelatedArtifact"
                }, 
                "valueTriggerDefinition": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/TriggerDefinition"
                }, 
                "valueUsageContext": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/UsageContext"
                }, 
                "valueDosage": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Dosage"
                }, 
                "valueMeta": {
                    "description": "The value of the input parameter as a basic type.", 
                    "$ref": "#/definitions/Meta"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "Task_Output": {
            "description": "A task to be performed.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The name of the Output parameter.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueBase64Binary": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", 
                    "type": "string"
                }, 
                "_valueBase64Binary": {
                    "description": "Extensions for valueBase64Binary", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCanonical": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueCanonical": {
                    "description": "Extensions for valueCanonical", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCode": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_valueCode": {
                    "description": "Extensions for valueCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDate": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", 
                    "type": "string"
                }, 
                "_valueDate": {
                    "description": "Extensions for valueDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueId": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", 
                    "type": "string"
                }, 
                "_valueId": {
                    "description": "Extensions for valueId", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInstant": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", 
                    "type": "string"
                }, 
                "_valueInstant": {
                    "description": "Extensions for valueInstant", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueMarkdown": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueMarkdown": {
                    "description": "Extensions for valueMarkdown", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueOid": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", 
                    "type": "string"
                }, 
                "_valueOid": {
                    "description": "Extensions for valueOid", 
                    "$ref": "#/definitions/Element"
                }, 
                "valuePositiveInt": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^[1-9][0-9]*$", 
                    "type": "number"
                }, 
                "_valuePositiveInt": {
                    "description": "Extensions for valuePositiveInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueTime": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", 
                    "type": "string"
                }, 
                "_valueTime": {
                    "description": "Extensions for valueTime", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUnsignedInt": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^[0]|([1-9][0-9]*)$", 
                    "type": "number"
                }, 
                "_valueUnsignedInt": {
                    "description": "Extensions for valueUnsignedInt", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUri": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUri": {
                    "description": "Extensions for valueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUrl": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUrl": {
                    "description": "Extensions for valueUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUuid": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", 
                    "type": "string"
                }, 
                "_valueUuid": {
                    "description": "Extensions for valueUuid", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueAddress": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Address"
                }, 
                "valueAge": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Age"
                }, 
                "valueAnnotation": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Annotation"
                }, 
                "valueAttachment": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Attachment"
                }, 
                "valueCodeableConcept": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "valueCoding": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "valueContactPoint": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/ContactPoint"
                }, 
                "valueCount": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Count"
                }, 
                "valueDistance": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Distance"
                }, 
                "valueDuration": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Duration"
                }, 
                "valueHumanName": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/HumanName"
                }, 
                "valueIdentifier": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Identifier"
                }, 
                "valueMoney": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Money"
                }, 
                "valuePeriod": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Period"
                }, 
                "valueQuantity": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "valueRange": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Range"
                }, 
                "valueRatio": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Ratio"
                }, 
                "valueReference": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "valueSampledData": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/SampledData"
                }, 
                "valueSignature": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Signature"
                }, 
                "valueTiming": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Timing"
                }, 
                "valueContactDetail": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/ContactDetail"
                }, 
                "valueContributor": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Contributor"
                }, 
                "valueDataRequirement": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/DataRequirement"
                }, 
                "valueExpression": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Expression"
                }, 
                "valueParameterDefinition": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/ParameterDefinition"
                }, 
                "valueRelatedArtifact": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/RelatedArtifact"
                }, 
                "valueTriggerDefinition": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/TriggerDefinition"
                }, 
                "valueUsageContext": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/UsageContext"
                }, 
                "valueDosage": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Dosage"
                }, 
                "valueMeta": {
                    "description": "The value of the Output parameter as a basic type.", 
                    "$ref": "#/definitions/Meta"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "type"
            ], 
            "type": "object"
        }, 
        "TerminologyCapabilities_Software": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Name the software is known by.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "The version identifier for the software covered by this statement.", 
                    "$ref": "#/definitions/string"
                }, 
                "_version": {
                    "description": "Extensions for version", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TerminologyCapabilities_Implementation": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "description": {
                    "description": "Information about the specific installation that this terminology capability statement relates to.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "url": {
                    "description": "An absolute base URL for the implementation.", 
                    "$ref": "#/definitions/url"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TerminologyCapabilities_CodeSystem": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "uri": {
                    "description": "URI for the Code System.", 
                    "$ref": "#/definitions/canonical"
                }, 
                "version": {
                    "description": "For the code system, a list of versions that are supported by the server.", 
                    "items": {
                        "$ref": "#/definitions/TerminologyCapabilities_Version"
                    }, 
                    "type": "array"
                }, 
                "subsumption": {
                    "description": "True if subsumption is supported for this version of the code system.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_subsumption": {
                    "description": "Extensions for subsumption", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TerminologyCapabilities_Version": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "For version-less code systems, there should be a single version with no identifier.", 
                    "$ref": "#/definitions/string"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "isDefault": {
                    "description": "If this is the default version for this code system.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_isDefault": {
                    "description": "Extensions for isDefault", 
                    "$ref": "#/definitions/Element"
                }, 
                "compositional": {
                    "description": "If the compositional grammar defined by the code system is supported.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_compositional": {
                    "description": "Extensions for compositional", 
                    "$ref": "#/definitions/Element"
                }, 
                "language": {
                    "description": "Language Displays supported.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_language": {
                    "description": "Extensions for language", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "filter": {
                    "description": "Filter Properties supported.", 
                    "items": {
                        "$ref": "#/definitions/TerminologyCapabilities_Filter"
                    }, 
                    "type": "array"
                }, 
                "property": {
                    "description": "Properties supported for $lookup.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_property": {
                    "description": "Extensions for property", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TerminologyCapabilities_Filter": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Code of the property supported.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "op": {
                    "description": "Operations supported for the property.", 
                    "items": {
                        "$ref": "#/definitions/code"
                    }, 
                    "type": "array"
                }, 
                "_op": {
                    "description": "Extensions for op", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TerminologyCapabilities_Expansion": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "hierarchical": {
                    "description": "Whether the server can return nested value sets.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_hierarchical": {
                    "description": "Extensions for hierarchical", 
                    "$ref": "#/definitions/Element"
                }, 
                "paging": {
                    "description": "Whether the server supports paging on expansion.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_paging": {
                    "description": "Extensions for paging", 
                    "$ref": "#/definitions/Element"
                }, 
                "incomplete": {
                    "description": "Allow request for incomplete expansions?", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_incomplete": {
                    "description": "Extensions for incomplete", 
                    "$ref": "#/definitions/Element"
                }, 
                "parameter": {
                    "description": "Supported expansion parameter.", 
                    "items": {
                        "$ref": "#/definitions/TerminologyCapabilities_Parameter"
                    }, 
                    "type": "array"
                }, 
                "textFilter": {
                    "description": "Documentation about text searching works.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_textFilter": {
                    "description": "Extensions for textFilter", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TerminologyCapabilities_Parameter": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Expansion Parameter name.", 
                    "$ref": "#/definitions/code"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "documentation": {
                    "description": "Description of support for parameter.", 
                    "$ref": "#/definitions/string"
                }, 
                "_documentation": {
                    "description": "Extensions for documentation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TerminologyCapabilities_ValidateCode": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "translations": {
                    "description": "Whether translations are validated.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_translations": {
                    "description": "Extensions for translations", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TerminologyCapabilities_Translation": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "needsMap": {
                    "description": "Whether the client must identify the map.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_needsMap": {
                    "description": "Extensions for needsMap", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TerminologyCapabilities_Closure": {
            "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "translation": {
                    "description": "If cross-system closure is supported.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_translation": {
                    "description": "Extensions for translation", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestReport_Participant": {
            "description": "A summary of information based on the results of executing a TestScript.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "The type of participant.", 
                    "$ref": "#/definitions/code"
                }, 
                "_type": {
                    "description": "Extensions for type", 
                    "$ref": "#/definitions/Element"
                }, 
                "uri": {
                    "description": "The uri of the participant. An absolute URL is preferred.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_uri": {
                    "description": "Extensions for uri", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "The display name of the participant.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestReport_Setup": {
            "description": "A summary of information based on the results of executing a TestScript.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "action": {
                    "description": "Action would contain either an operation or an assertion.", 
                    "items": {
                        "$ref": "#/definitions/TestReport_Action"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "action"
            ], 
            "type": "object"
        }, 
        "TestReport_Action": {
            "description": "A summary of information based on the results of executing a TestScript.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "operation": {
                    "description": "The operation performed.", 
                    "$ref": "#/definitions/TestReport_Operation"
                }, 
                "assert": {
                    "description": "The results of the assertion performed on the previous operations.", 
                    "$ref": "#/definitions/TestReport_Assert"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestReport_Operation": {
            "description": "A summary of information based on the results of executing a TestScript.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "result": {
                    "description": "The result of this operation.", 
                    "$ref": "#/definitions/code"
                }, 
                "_result": {
                    "description": "Extensions for result", 
                    "$ref": "#/definitions/Element"
                }, 
                "message": {
                    "description": "An explanatory message associated with the result.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_message": {
                    "description": "Extensions for message", 
                    "$ref": "#/definitions/Element"
                }, 
                "detail": {
                    "description": "A link to further details on the result.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_detail": {
                    "description": "Extensions for detail", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestReport_Assert": {
            "description": "A summary of information based on the results of executing a TestScript.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "result": {
                    "description": "The result of this assertion.", 
                    "$ref": "#/definitions/code"
                }, 
                "_result": {
                    "description": "Extensions for result", 
                    "$ref": "#/definitions/Element"
                }, 
                "message": {
                    "description": "An explanatory message associated with the result.", 
                    "$ref": "#/definitions/markdown"
                }, 
                "_message": {
                    "description": "Extensions for message", 
                    "$ref": "#/definitions/Element"
                }, 
                "detail": {
                    "description": "A link to further details on the result.", 
                    "$ref": "#/definitions/string"
                }, 
                "_detail": {
                    "description": "Extensions for detail", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestReport_Test": {
            "description": "A summary of information based on the results of executing a TestScript.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name of this test used for tracking/logging purposes by test engines.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A short description of the test used by test engines for tracking and reporting purposes.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "action": {
                    "description": "Action would contain either an operation or an assertion.", 
                    "items": {
                        "$ref": "#/definitions/TestReport_Action1"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "action"
            ], 
            "type": "object"
        }, 
        "TestReport_Action1": {
            "description": "A summary of information based on the results of executing a TestScript.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "operation": {
                    "description": "An operation would involve a REST request to a server.", 
                    "$ref": "#/definitions/TestReport_Operation"
                }, 
                "assert": {
                    "description": "The results of the assertion performed on the previous operations.", 
                    "$ref": "#/definitions/TestReport_Assert"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestReport_Teardown": {
            "description": "A summary of information based on the results of executing a TestScript.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "action": {
                    "description": "The teardown action will only contain an operation.", 
                    "items": {
                        "$ref": "#/definitions/TestReport_Action2"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "action"
            ], 
            "type": "object"
        }, 
        "TestReport_Action2": {
            "description": "A summary of information based on the results of executing a TestScript.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "operation": {
                    "description": "An operation would involve a REST request to a server.", 
                    "$ref": "#/definitions/TestReport_Operation"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "operation"
            ], 
            "type": "object"
        }, 
        "TestScript_Origin": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "index": {
                    "description": "Abstract name given to an origin server in this test script.  The name is provided as a number starting at 1.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_index": {
                    "description": "Extensions for index", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "The type of origin profile the test system supports.", 
                    "$ref": "#/definitions/Coding"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "profile"
            ], 
            "type": "object"
        }, 
        "TestScript_Destination": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "index": {
                    "description": "Abstract name given to a destination server in this test script.  The name is provided as a number starting at 1.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_index": {
                    "description": "Extensions for index", 
                    "$ref": "#/definitions/Element"
                }, 
                "profile": {
                    "description": "The type of destination profile the test system supports.", 
                    "$ref": "#/definitions/Coding"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "profile"
            ], 
            "type": "object"
        }, 
        "TestScript_Metadata": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "link": {
                    "description": "A link to the FHIR specification that this test is covering.", 
                    "items": {
                        "$ref": "#/definitions/TestScript_Link"
                    }, 
                    "type": "array"
                }, 
                "capability": {
                    "description": "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested.", 
                    "items": {
                        "$ref": "#/definitions/TestScript_Capability"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "capability"
            ], 
            "type": "object"
        }, 
        "TestScript_Link": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "url": {
                    "description": "URL to a particular requirement or feature within the FHIR specification.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "Short description of the link.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestScript_Capability": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "required": {
                    "description": "Whether or not the test execution will require the given capabilities of the server in order for this test script to execute.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_required": {
                    "description": "Extensions for required", 
                    "$ref": "#/definitions/Element"
                }, 
                "validated": {
                    "description": "Whether or not the test execution will validate the given capabilities of the server in order for this test script to execute.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_validated": {
                    "description": "Extensions for validated", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "Description of the capabilities that this test script is requiring the server to support.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "origin": {
                    "description": "Which origin server these requirements apply to.", 
                    "items": {
                        "$ref": "#/definitions/integer"
                    }, 
                    "type": "array"
                }, 
                "_origin": {
                    "description": "Extensions for origin", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "destination": {
                    "description": "Which server these requirements apply to.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_destination": {
                    "description": "Extensions for destination", 
                    "$ref": "#/definitions/Element"
                }, 
                "link": {
                    "description": "Links to the FHIR specification that describes this interaction and the resources involved in more detail.", 
                    "items": {
                        "$ref": "#/definitions/uri"
                    }, 
                    "type": "array"
                }, 
                "_link": {
                    "description": "Extensions for link", 
                    "items": {
                        "$ref": "#/definitions/Element"
                    }, 
                    "type": "array"
                }, 
                "capabilities": {
                    "description": "Minimum capabilities required of server for test script to execute successfully.   If server does not meet at a minimum the referenced capability statement, then all tests in this script are skipped.", 
                    "$ref": "#/definitions/canonical"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "capabilities"
            ], 
            "type": "object"
        }, 
        "TestScript_Fixture": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "autocreate": {
                    "description": "Whether or not to implicitly create the fixture during setup. If true, the fixture is automatically created on each server being tested during setup, therefore no create operation is required for this fixture in the TestScript.setup section.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_autocreate": {
                    "description": "Extensions for autocreate", 
                    "$ref": "#/definitions/Element"
                }, 
                "autodelete": {
                    "description": "Whether or not to implicitly delete the fixture during teardown. If true, the fixture is automatically deleted on each server being tested during teardown, therefore no delete operation is required for this fixture in the TestScript.teardown section.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_autodelete": {
                    "description": "Extensions for autodelete", 
                    "$ref": "#/definitions/Element"
                }, 
                "resource": {
                    "description": "Reference to the resource (containing the contents of the resource needed for operations).", 
                    "$ref": "#/definitions/Reference"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestScript_Variable": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Descriptive name for this variable.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "defaultValue": {
                    "description": "A default, hard-coded, or user-defined value for this variable.", 
                    "$ref": "#/definitions/string"
                }, 
                "_defaultValue": {
                    "description": "Extensions for defaultValue", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A free text natural language description of the variable and its purpose.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "The FHIRPath expression to evaluate against the fixture body. When variables are defined, only one of either expression, headerField or path must be specified.", 
                    "$ref": "#/definitions/string"
                }, 
                "_expression": {
                    "description": "Extensions for expression", 
                    "$ref": "#/definitions/Element"
                }, 
                "headerField": {
                    "description": "Will be used to grab the HTTP header field value from the headers that sourceId is pointing to.", 
                    "$ref": "#/definitions/string"
                }, 
                "_headerField": {
                    "description": "Extensions for headerField", 
                    "$ref": "#/definitions/Element"
                }, 
                "hint": {
                    "description": "Displayable text string with hint help information to the user when entering a default value.", 
                    "$ref": "#/definitions/string"
                }, 
                "_hint": {
                    "description": "Extensions for hint", 
                    "$ref": "#/definitions/Element"
                }, 
                "path": {
                    "description": "XPath or JSONPath to evaluate against the fixture body.  When variables are defined, only one of either expression, headerField or path must be specified.", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "sourceId": {
                    "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against within this variable.", 
                    "$ref": "#/definitions/id"
                }, 
                "_sourceId": {
                    "description": "Extensions for sourceId", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestScript_Setup": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "action": {
                    "description": "Action would contain either an operation or an assertion.", 
                    "items": {
                        "$ref": "#/definitions/TestScript_Action"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "action"
            ], 
            "type": "object"
        }, 
        "TestScript_Action": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "operation": {
                    "description": "The operation to perform.", 
                    "$ref": "#/definitions/TestScript_Operation"
                }, 
                "assert": {
                    "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.", 
                    "$ref": "#/definitions/TestScript_Assert"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestScript_Operation": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "type": {
                    "description": "Server interaction or operation type.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "resource": {
                    "description": "The type of the resource.  See http://build.fhir.org/resourcelist.html.", 
                    "$ref": "#/definitions/code"
                }, 
                "_resource": {
                    "description": "Extensions for resource", 
                    "$ref": "#/definitions/Element"
                }, 
                "label": {
                    "description": "The label would be used for tracking/logging purposes by test engines.", 
                    "$ref": "#/definitions/string"
                }, 
                "_label": {
                    "description": "Extensions for label", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "The description would be used by test engines for tracking and reporting purposes.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "accept": {
                    "description": "The mime-type to use for RESTful operation in the 'Accept' header.", 
                    "$ref": "#/definitions/code"
                }, 
                "_accept": {
                    "description": "Extensions for accept", 
                    "$ref": "#/definitions/Element"
                }, 
                "contentType": {
                    "description": "The mime-type to use for RESTful operation in the 'Content-Type' header.", 
                    "$ref": "#/definitions/code"
                }, 
                "_contentType": {
                    "description": "Extensions for contentType", 
                    "$ref": "#/definitions/Element"
                }, 
                "destination": {
                    "description": "The server where the request message is destined for.  Must be one of the server numbers listed in TestScript.destination section.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_destination": {
                    "description": "Extensions for destination", 
                    "$ref": "#/definitions/Element"
                }, 
                "encodeRequestUrl": {
                    "description": "Whether or not to implicitly send the request url in encoded format. The default is true to match the standard RESTful client behavior. Set to false when communicating with a server that does not support encoded url paths.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_encodeRequestUrl": {
                    "description": "Extensions for encodeRequestUrl", 
                    "$ref": "#/definitions/Element"
                }, 
                "method": {
                    "description": "The HTTP method the test engine MUST use for this operation regardless of any other operation details.", 
                    "$ref": "#/definitions/code"
                }, 
                "_method": {
                    "description": "Extensions for method", 
                    "$ref": "#/definitions/Element"
                }, 
                "origin": {
                    "description": "The server where the request message originates from.  Must be one of the server numbers listed in TestScript.origin section.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_origin": {
                    "description": "Extensions for origin", 
                    "$ref": "#/definitions/Element"
                }, 
                "params": {
                    "description": "Path plus parameters after [type].  Used to set parts of the request URL explicitly.", 
                    "$ref": "#/definitions/string"
                }, 
                "_params": {
                    "description": "Extensions for params", 
                    "$ref": "#/definitions/Element"
                }, 
                "requestHeader": {
                    "description": "Header elements would be used to set HTTP headers.", 
                    "items": {
                        "$ref": "#/definitions/TestScript_RequestHeader"
                    }, 
                    "type": "array"
                }, 
                "requestId": {
                    "description": "The fixture id (maybe new) to map to the request.", 
                    "$ref": "#/definitions/id"
                }, 
                "_requestId": {
                    "description": "Extensions for requestId", 
                    "$ref": "#/definitions/Element"
                }, 
                "responseId": {
                    "description": "The fixture id (maybe new) to map to the response.", 
                    "$ref": "#/definitions/id"
                }, 
                "_responseId": {
                    "description": "Extensions for responseId", 
                    "$ref": "#/definitions/Element"
                }, 
                "sourceId": {
                    "description": "The id of the fixture used as the body of a PUT or POST request.", 
                    "$ref": "#/definitions/id"
                }, 
                "_sourceId": {
                    "description": "Extensions for sourceId", 
                    "$ref": "#/definitions/Element"
                }, 
                "targetId": {
                    "description": "Id of fixture used for extracting the [id],  [type], and [vid] for GET requests.", 
                    "$ref": "#/definitions/id"
                }, 
                "_targetId": {
                    "description": "Extensions for targetId", 
                    "$ref": "#/definitions/Element"
                }, 
                "url": {
                    "description": "Complete request URL.", 
                    "$ref": "#/definitions/string"
                }, 
                "_url": {
                    "description": "Extensions for url", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestScript_RequestHeader": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "field": {
                    "description": "The HTTP header field e.g. \"Accept\".", 
                    "$ref": "#/definitions/string"
                }, 
                "_field": {
                    "description": "Extensions for field", 
                    "$ref": "#/definitions/Element"
                }, 
                "value": {
                    "description": "The value of the header e.g. \"application/fhir+xml\".", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestScript_Assert": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "label": {
                    "description": "The label would be used for tracking/logging purposes by test engines.", 
                    "$ref": "#/definitions/string"
                }, 
                "_label": {
                    "description": "Extensions for label", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "The description would be used by test engines for tracking and reporting purposes.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "direction": {
                    "description": "The direction to use for the assertion.", 
                    "$ref": "#/definitions/code"
                }, 
                "_direction": {
                    "description": "Extensions for direction", 
                    "$ref": "#/definitions/Element"
                }, 
                "compareToSourceId": {
                    "description": "Id of the source fixture used as the contents to be evaluated by either the \"source/expression\" or \"sourceId/path\" definition.", 
                    "$ref": "#/definitions/string"
                }, 
                "_compareToSourceId": {
                    "description": "Extensions for compareToSourceId", 
                    "$ref": "#/definitions/Element"
                }, 
                "compareToSourceExpression": {
                    "description": "The FHIRPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.", 
                    "$ref": "#/definitions/string"
                }, 
                "_compareToSourceExpression": {
                    "description": "Extensions for compareToSourceExpression", 
                    "$ref": "#/definitions/Element"
                }, 
                "compareToSourcePath": {
                    "description": "XPath or JSONPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.", 
                    "$ref": "#/definitions/string"
                }, 
                "_compareToSourcePath": {
                    "description": "Extensions for compareToSourcePath", 
                    "$ref": "#/definitions/Element"
                }, 
                "contentType": {
                    "description": "The mime-type contents to compare against the request or response message 'Content-Type' header.", 
                    "$ref": "#/definitions/code"
                }, 
                "_contentType": {
                    "description": "Extensions for contentType", 
                    "$ref": "#/definitions/Element"
                }, 
                "expression": {
                    "description": "The FHIRPath expression to be evaluated against the request or response message contents - HTTP headers and payload.", 
                    "$ref": "#/definitions/string"
                }, 
                "_expression": {
                    "description": "Extensions for expression", 
                    "$ref": "#/definitions/Element"
                }, 
                "headerField": {
                    "description": "The HTTP header field name e.g. 'Location'.", 
                    "$ref": "#/definitions/string"
                }, 
                "_headerField": {
                    "description": "Extensions for headerField", 
                    "$ref": "#/definitions/Element"
                }, 
                "minimumId": {
                    "description": "The ID of a fixture.  Asserts that the response contains at a minimum the fixture specified by minimumId.", 
                    "$ref": "#/definitions/string"
                }, 
                "_minimumId": {
                    "description": "Extensions for minimumId", 
                    "$ref": "#/definitions/Element"
                }, 
                "navigationLinks": {
                    "description": "Whether or not the test execution performs validation on the bundle navigation links.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_navigationLinks": {
                    "description": "Extensions for navigationLinks", 
                    "$ref": "#/definitions/Element"
                }, 
                "operator": {
                    "description": "The operator type defines the conditional behavior of the assert. If not defined, the default is equals.", 
                    "$ref": "#/definitions/code"
                }, 
                "_operator": {
                    "description": "Extensions for operator", 
                    "$ref": "#/definitions/Element"
                }, 
                "path": {
                    "description": "The XPath or JSONPath expression to be evaluated against the fixture representing the response received from server.", 
                    "$ref": "#/definitions/string"
                }, 
                "_path": {
                    "description": "Extensions for path", 
                    "$ref": "#/definitions/Element"
                }, 
                "requestMethod": {
                    "description": "The request method or HTTP operation code to compare against that used by the client system under test.", 
                    "$ref": "#/definitions/code"
                }, 
                "_requestMethod": {
                    "description": "Extensions for requestMethod", 
                    "$ref": "#/definitions/Element"
                }, 
                "requestURL": {
                    "description": "The value to use in a comparison against the request URL path string.", 
                    "$ref": "#/definitions/string"
                }, 
                "_requestURL": {
                    "description": "Extensions for requestURL", 
                    "$ref": "#/definitions/Element"
                }, 
                "resource": {
                    "description": "The type of the resource.  See http://build.fhir.org/resourcelist.html.", 
                    "$ref": "#/definitions/code"
                }, 
                "_resource": {
                    "description": "Extensions for resource", 
                    "$ref": "#/definitions/Element"
                }, 
                "response": {
                    "description": "okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable.", 
                    "$ref": "#/definitions/code"
                }, 
                "_response": {
                    "description": "Extensions for response", 
                    "$ref": "#/definitions/Element"
                }, 
                "responseCode": {
                    "description": "The value of the HTTP response code to be tested.", 
                    "$ref": "#/definitions/string"
                }, 
                "_responseCode": {
                    "description": "Extensions for responseCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "sourceId": {
                    "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against.", 
                    "$ref": "#/definitions/id"
                }, 
                "_sourceId": {
                    "description": "Extensions for sourceId", 
                    "$ref": "#/definitions/Element"
                }, 
                "validateProfileId": {
                    "description": "The ID of the Profile to validate against.", 
                    "$ref": "#/definitions/id"
                }, 
                "_validateProfileId": {
                    "description": "Extensions for validateProfileId", 
                    "$ref": "#/definitions/Element"
                }, 
                "value": {
                    "description": "The value to compare to.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }, 
                "warningOnly": {
                    "description": "Whether or not the test execution will produce a warning only on error for this assert.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_warningOnly": {
                    "description": "Extensions for warningOnly", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestScript_Test": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "The name of this test used for tracking/logging purposes by test engines.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "description": {
                    "description": "A short description of the test used by test engines for tracking and reporting purposes.", 
                    "$ref": "#/definitions/string"
                }, 
                "_description": {
                    "description": "Extensions for description", 
                    "$ref": "#/definitions/Element"
                }, 
                "action": {
                    "description": "Action would contain either an operation or an assertion.", 
                    "items": {
                        "$ref": "#/definitions/TestScript_Action1"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "action"
            ], 
            "type": "object"
        }, 
        "TestScript_Action1": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "operation": {
                    "description": "An operation would involve a REST request to a server.", 
                    "$ref": "#/definitions/TestScript_Operation"
                }, 
                "assert": {
                    "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.", 
                    "$ref": "#/definitions/TestScript_Assert"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "TestScript_Teardown": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "action": {
                    "description": "The teardown action will only contain an operation.", 
                    "items": {
                        "$ref": "#/definitions/TestScript_Action2"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "action"
            ], 
            "type": "object"
        }, 
        "TestScript_Action2": {
            "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "operation": {
                    "description": "An operation would involve a REST request to a server.", 
                    "$ref": "#/definitions/TestScript_Operation"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "operation"
            ], 
            "type": "object"
        }, 
        "ValueSet_Compose": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "lockedDate": {
                    "description": "The Locked Date is  the effective date that is used to determine the version of all referenced Code Systems and Value Set Definitions included in the compose that are not already tied to a specific version.", 
                    "$ref": "#/definitions/date"
                }, 
                "_lockedDate": {
                    "description": "Extensions for lockedDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "inactive": {
                    "description": "Whether inactive codes - codes that are not approved for current use - are in the value set. If inactive = true, inactive codes are to be included in the expansion, if inactive = false, the inactive codes will not be included in the expansion. If absent, the behavior is determined by the implementation, or by the applicable $expand parameters (but generally, inactive codes would be expected to be included).", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_inactive": {
                    "description": "Extensions for inactive", 
                    "$ref": "#/definitions/Element"
                }, 
                "include": {
                    "description": "Include one or more codes from a code system or other value set(s).", 
                    "items": {
                        "$ref": "#/definitions/ValueSet_Include"
                    }, 
                    "type": "array"
                }, 
                "exclude": {
                    "description": "Exclude one or more codes from the value set based on code system filters and/or other value sets.", 
                    "items": {
                        "$ref": "#/definitions/ValueSet_Include"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "include"
            ], 
            "type": "object"
        }, 
        "ValueSet_Include": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "system": {
                    "description": "An absolute URI which is the code system from which the selected codes come from.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "The version of the code system that the codes are selected from, or the special version '*' for all versions.", 
                    "$ref": "#/definitions/string"
                }, 
                "_version": {
                    "description": "Extensions for version", 
                    "$ref": "#/definitions/Element"
                }, 
                "concept": {
                    "description": "Specifies a concept to be included or excluded.", 
                    "items": {
                        "$ref": "#/definitions/ValueSet_Concept"
                    }, 
                    "type": "array"
                }, 
                "filter": {
                    "description": "Select concepts by specify a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified, they SHALL all be true.", 
                    "items": {
                        "$ref": "#/definitions/ValueSet_Filter"
                    }, 
                    "type": "array"
                }, 
                "valueSet": {
                    "description": "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets.", 
                    "items": {
                        "$ref": "#/definitions/canonical"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ValueSet_Concept": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "code": {
                    "description": "Specifies a code for the concept to be included or excluded.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }, 
                "designation": {
                    "description": "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.", 
                    "items": {
                        "$ref": "#/definitions/ValueSet_Designation"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ValueSet_Designation": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "language": {
                    "description": "The language this designation is defined for.", 
                    "$ref": "#/definitions/code"
                }, 
                "_language": {
                    "description": "Extensions for language", 
                    "$ref": "#/definitions/Element"
                }, 
                "use": {
                    "description": "A code that represents types of uses of designations.", 
                    "$ref": "#/definitions/Coding"
                }, 
                "value": {
                    "description": "The text value for this designation.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ValueSet_Filter": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "property": {
                    "description": "A code that identifies a property or a filter defined in the code system.", 
                    "$ref": "#/definitions/code"
                }, 
                "_property": {
                    "description": "Extensions for property", 
                    "$ref": "#/definitions/Element"
                }, 
                "op": {
                    "description": "The kind of operation to perform as a part of the filter criteria.", 
                    "$ref": "#/definitions/code"
                }, 
                "_op": {
                    "description": "Extensions for op", 
                    "$ref": "#/definitions/Element"
                }, 
                "value": {
                    "description": "The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value  (if the filter represents a property defined in CodeSystem) or of the system filter value (if the filter represents a filter defined in CodeSystem) when the operation is 'regex', or one of the values (true and false), when the operation is 'exists'.", 
                    "$ref": "#/definitions/string"
                }, 
                "_value": {
                    "description": "Extensions for value", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ValueSet_Expansion": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "identifier": {
                    "description": "An identifier that uniquely identifies this expansion of the valueset, based on a unique combination of the provided parameters, the system default parameters, and the underlying system code system versions etc. Systems may re-use the same identifier as long as those factors remain the same, and the expansion is the same, but are not required to do so. This is a business identifier.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_identifier": {
                    "description": "Extensions for identifier", 
                    "$ref": "#/definitions/Element"
                }, 
                "timestamp": {
                    "description": "The time at which the expansion was produced by the expanding system.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_timestamp": {
                    "description": "Extensions for timestamp", 
                    "$ref": "#/definitions/Element"
                }, 
                "total": {
                    "description": "The total number of concepts in the expansion. If the number of concept nodes in this resource is less than the stated number, then the server can return more using the offset parameter.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_total": {
                    "description": "Extensions for total", 
                    "$ref": "#/definitions/Element"
                }, 
                "offset": {
                    "description": "If paging is being used, the offset at which this resource starts.  I.e. this resource is a partial view into the expansion. If paging is not being used, this element SHALL NOT be present.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_offset": {
                    "description": "Extensions for offset", 
                    "$ref": "#/definitions/Element"
                }, 
                "parameter": {
                    "description": "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.", 
                    "items": {
                        "$ref": "#/definitions/ValueSet_Parameter"
                    }, 
                    "type": "array"
                }, 
                "contains": {
                    "description": "The codes that are contained in the value set expansion.", 
                    "items": {
                        "$ref": "#/definitions/ValueSet_Contains"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ValueSet_Parameter": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "name": {
                    "description": "Name of the input parameter to the $expand operation; may be a server-assigned name for additional default or other server-supplied parameters used to control the expansion process.", 
                    "$ref": "#/definitions/string"
                }, 
                "_name": {
                    "description": "Extensions for name", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueString": {
                    "description": "The value of the parameter.", 
                    "pattern": "^[ \\r\\n\\t\\S]+$", 
                    "type": "string"
                }, 
                "_valueString": {
                    "description": "Extensions for valueString", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueBoolean": {
                    "description": "The value of the parameter.", 
                    "pattern": "^true|false$", 
                    "type": "boolean"
                }, 
                "_valueBoolean": {
                    "description": "Extensions for valueBoolean", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueInteger": {
                    "description": "The value of the parameter.", 
                    "pattern": "^-?([0]|([1-9][0-9]*))$", 
                    "type": "number"
                }, 
                "_valueInteger": {
                    "description": "Extensions for valueInteger", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDecimal": {
                    "description": "The value of the parameter.", 
                    "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", 
                    "type": "number"
                }, 
                "_valueDecimal": {
                    "description": "Extensions for valueDecimal", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueUri": {
                    "description": "The value of the parameter.", 
                    "pattern": "^\\S*$", 
                    "type": "string"
                }, 
                "_valueUri": {
                    "description": "Extensions for valueUri", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueCode": {
                    "description": "The value of the parameter.", 
                    "pattern": "^[^\\s]+(\\s[^\\s]+)*$", 
                    "type": "string"
                }, 
                "_valueCode": {
                    "description": "Extensions for valueCode", 
                    "$ref": "#/definitions/Element"
                }, 
                "valueDateTime": {
                    "description": "The value of the parameter.", 
                    "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", 
                    "type": "string"
                }, 
                "_valueDateTime": {
                    "description": "Extensions for valueDateTime", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "ValueSet_Contains": {
            "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [CodeSystem](codesystem.html) definitions and their use in [coded elements](terminologies.html).", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "system": {
                    "description": "An absolute URI which is the code system in which the code for this item in the expansion is defined.", 
                    "$ref": "#/definitions/uri"
                }, 
                "_system": {
                    "description": "Extensions for system", 
                    "$ref": "#/definitions/Element"
                }, 
                "abstract": {
                    "description": "If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value.", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_abstract": {
                    "description": "Extensions for abstract", 
                    "$ref": "#/definitions/Element"
                }, 
                "inactive": {
                    "description": "If the concept is inactive in the code system that defines it. Inactive codes are those that are no longer to be used, but are maintained by the code system for understanding legacy data. It might not be known or specified whether an concept is inactive (and it may depend on the context of use).", 
                    "$ref": "#/definitions/boolean"
                }, 
                "_inactive": {
                    "description": "Extensions for inactive", 
                    "$ref": "#/definitions/Element"
                }, 
                "version": {
                    "description": "The version of the code system from this code was taken. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.", 
                    "$ref": "#/definitions/string"
                }, 
                "_version": {
                    "description": "Extensions for version", 
                    "$ref": "#/definitions/Element"
                }, 
                "code": {
                    "description": "The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set.", 
                    "$ref": "#/definitions/code"
                }, 
                "_code": {
                    "description": "Extensions for code", 
                    "$ref": "#/definitions/Element"
                }, 
                "display": {
                    "description": "The recommended display for this item in the expansion.", 
                    "$ref": "#/definitions/string"
                }, 
                "_display": {
                    "description": "Extensions for display", 
                    "$ref": "#/definitions/Element"
                }, 
                "designation": {
                    "description": "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation.", 
                    "items": {
                        "$ref": "#/definitions/ValueSet_Designation"
                    }, 
                    "type": "array"
                }, 
                "contains": {
                    "description": "Other codes and entries contained under this entry in the hierarchy.", 
                    "items": {
                        "$ref": "#/definitions/ValueSet_Contains"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "VerificationResult_PrimarySource": {
            "description": "Describes validation requirements, source(s), status and dates for one or more elements.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "who": {
                    "description": "Reference to the primary source.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "type": {
                    "description": "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "communicationMethod": {
                    "description": "Method for communicating with the primary source (manual; API; Push).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }, 
                "validationStatus": {
                    "description": "Status of the validation of the target against the primary source (successful; failed; unknown).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "validationDate": {
                    "description": "When the target was validated against the primary source.", 
                    "$ref": "#/definitions/dateTime"
                }, 
                "_validationDate": {
                    "description": "Extensions for validationDate", 
                    "$ref": "#/definitions/Element"
                }, 
                "canPushUpdates": {
                    "description": "Ability of the primary source to push updates/alerts (yes; no; undetermined).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "pushTypeAvailable": {
                    "description": "Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source).", 
                    "items": {
                        "$ref": "#/definitions/CodeableConcept"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "VerificationResult_Attestation": {
            "description": "Describes validation requirements, source(s), status and dates for one or more elements.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "who": {
                    "description": "The individual or organization attesting to information.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "onBehalfOf": {
                    "description": "When the who is asserting on behalf of another (organization or individual).", 
                    "$ref": "#/definitions/Reference"
                }, 
                "communicationMethod": {
                    "description": "The method by which attested information was submitted/retrieved (manual; API; Push).", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "date": {
                    "description": "The date the information was attested to.", 
                    "$ref": "#/definitions/date"
                }, 
                "_date": {
                    "description": "Extensions for date", 
                    "$ref": "#/definitions/Element"
                }, 
                "sourceIdentityCertificate": {
                    "description": "A digital identity certificate associated with the attestation source.", 
                    "$ref": "#/definitions/string"
                }, 
                "_sourceIdentityCertificate": {
                    "description": "Extensions for sourceIdentityCertificate", 
                    "$ref": "#/definitions/Element"
                }, 
                "proxyIdentityCertificate": {
                    "description": "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source.", 
                    "$ref": "#/definitions/string"
                }, 
                "_proxyIdentityCertificate": {
                    "description": "Extensions for proxyIdentityCertificate", 
                    "$ref": "#/definitions/Element"
                }, 
                "proxySignature": {
                    "description": "Signed assertion by the proxy entity indicating that they have the right to submit attested information on behalf of the attestation source.", 
                    "$ref": "#/definitions/Signature"
                }, 
                "sourceSignature": {
                    "description": "Signed assertion by the attestation source that they have attested to the information.", 
                    "$ref": "#/definitions/Signature"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }, 
        "VerificationResult_Validator": {
            "description": "Describes validation requirements, source(s), status and dates for one or more elements.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "organization": {
                    "description": "Reference to the organization validating information.", 
                    "$ref": "#/definitions/Reference"
                }, 
                "identityCertificate": {
                    "description": "A digital identity certificate associated with the validator.", 
                    "$ref": "#/definitions/string"
                }, 
                "_identityCertificate": {
                    "description": "Extensions for identityCertificate", 
                    "$ref": "#/definitions/Element"
                }, 
                "attestationSignature": {
                    "description": "Signed assertion by the validator that they have validated the information.", 
                    "$ref": "#/definitions/Signature"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "organization"
            ], 
            "type": "object"
        }, 
        "VisionPrescription_LensSpecification": {
            "description": "An authorization for the provision of glasses and/or contact lenses to a patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "product": {
                    "description": "Identifies the type of vision correction product which is required for the patient.", 
                    "$ref": "#/definitions/CodeableConcept"
                }, 
                "eye": {
                    "description": "The eye for which the lens specification applies.", 
                    "$ref": "#/definitions/code"
                }, 
                "_eye": {
                    "description": "Extensions for eye", 
                    "$ref": "#/definitions/Element"
                }, 
                "sphere": {
                    "description": "Lens power measured in dioptres (0.25 units).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_sphere": {
                    "description": "Extensions for sphere", 
                    "$ref": "#/definitions/Element"
                }, 
                "cylinder": {
                    "description": "Power adjustment for astigmatism measured in dioptres (0.25 units).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_cylinder": {
                    "description": "Extensions for cylinder", 
                    "$ref": "#/definitions/Element"
                }, 
                "axis": {
                    "description": "Adjustment for astigmatism measured in integer degrees.", 
                    "$ref": "#/definitions/integer"
                }, 
                "_axis": {
                    "description": "Extensions for axis", 
                    "$ref": "#/definitions/Element"
                }, 
                "prism": {
                    "description": "Allows for adjustment on two axis.", 
                    "items": {
                        "$ref": "#/definitions/VisionPrescription_Prism"
                    }, 
                    "type": "array"
                }, 
                "add": {
                    "description": "Power adjustment for multifocal lenses measured in dioptres (0.25 units).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_add": {
                    "description": "Extensions for add", 
                    "$ref": "#/definitions/Element"
                }, 
                "power": {
                    "description": "Contact lens power measured in dioptres (0.25 units).", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_power": {
                    "description": "Extensions for power", 
                    "$ref": "#/definitions/Element"
                }, 
                "backCurve": {
                    "description": "Back curvature measured in millimetres.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_backCurve": {
                    "description": "Extensions for backCurve", 
                    "$ref": "#/definitions/Element"
                }, 
                "diameter": {
                    "description": "Contact lens diameter measured in millimetres.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_diameter": {
                    "description": "Extensions for diameter", 
                    "$ref": "#/definitions/Element"
                }, 
                "duration": {
                    "description": "The recommended maximum wear period for the lens.", 
                    "$ref": "#/definitions/Quantity"
                }, 
                "color": {
                    "description": "Special color or pattern.", 
                    "$ref": "#/definitions/string"
                }, 
                "_color": {
                    "description": "Extensions for color", 
                    "$ref": "#/definitions/Element"
                }, 
                "brand": {
                    "description": "Brand recommendations or restrictions.", 
                    "$ref": "#/definitions/string"
                }, 
                "_brand": {
                    "description": "Extensions for brand", 
                    "$ref": "#/definitions/Element"
                }, 
                "note": {
                    "description": "Notes for special requirements such as coatings and lens materials.", 
                    "items": {
                        "$ref": "#/definitions/Annotation"
                    }, 
                    "type": "array"
                }
            }, 
            "additionalProperties": false, 
            "required": [
                "product"
            ], 
            "type": "object"
        }, 
        "VisionPrescription_Prism": {
            "description": "An authorization for the provision of glasses and/or contact lenses to a patient.", 
            "properties": {
                "id": {
                    "description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", 
                    "$ref": "#/definitions/string"
                }, 
                "extension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "modifierExtension": {
                    "description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", 
                    "items": {
                        "@type": "Extension", 
                        "anyOf": [
                            {
                                "type": "string", 
                                "minLength": 1, 
                                "maxLength": 256, 
                                "pattern": "^[\\w\\-\\.\\{\\}\\$\\+\\*\\[\\]`|~^@!,:\\\\]+$", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }, 
                            {
                                "type": "string", 
                                "format": "uri", 
                                "description": "Property. Identifier format of any NGSI entity"
                            }
                        ]
                    }, 
                    "type": "array"
                }, 
                "amount": {
                    "description": "Amount of prism to compensate for eye alignment in fractional units.", 
                    "$ref": "#/definitions/decimal"
                }, 
                "_amount": {
                    "description": "Extensions for amount", 
                    "$ref": "#/definitions/Element"
                }, 
                "base": {
                    "description": "The relative base, or reference lens edge, for the prism.", 
                    "$ref": "#/definitions/code"
                }, 
                "_base": {
                    "description": "Extensions for base", 
                    "$ref": "#/definitions/Element"
                }
            }, 
            "additionalProperties": false, 
            "type": "object"
        }
    }
}